<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Extensions.Math.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions">
            <summary>Type shim de Accord.Extensions.Math.BranchAndBoundAssigmentExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.MatchAssigmentsDoubleMdArray2">
            <summary>Définit le shim de BranchAndBoundAssigmentExtensions.MatchAssigments(Double[,] costs)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimBranchAndBoundAssigmentExtensions.findMinInRowOmmitingTakenDoubleMdArray2Int32BooleanArray">
            <summary>Définit le shim de BranchAndBoundAssigmentExtensions.findMinInRowOmmitingTaken(Double[,] costs, Int32 row, Boolean[] isColumnTaken)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimComplex">
            <summary>Type shim de Accord.Extensions.Math.Complex</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplex.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimComplex.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplex.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplex.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimComplex.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimComplexF">
            <summary>Type shim de Accord.Extensions.Math.ComplexF</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplexF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimComplexF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplexF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimComplexF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimComplexF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimFourierTransform">
            <summary>Type shim de Accord.Extensions.Math.FourierTransform</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimFourierTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimFourierTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimFourierTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.FFT2ComplexFMdArray2FourierTransformDirection">
            <summary>Définit le shim de FourierTransform.FFT2(ComplexF[,] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.FFTComplexFArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform.FFT(ComplexF[] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.GetComplexRotationInt32FourierTransformDirection">
            <summary>Définit le shim de FourierTransform.GetComplexRotation(Int32 numberOfBits, Direction direction)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.GetReversedBitsInt32">
            <summary>Définit le shim de FourierTransform.GetReversedBits(Int32 numberOfBits)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimFourierTransform.StaticConstructor">
            <summary>Définit le shim de FourierTransform.FourierTransform()</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions">
            <summary>Type shim de Accord.Extensions.Math.MathEnumerableExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.WeightedAverageIEnumerableOfDoubleIListOfDouble">
            <summary>Définit le shim de MathEnumerableExtensions.WeightedAverage(IEnumerable`1&lt;Double&gt; collection, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.WeightedAverageIEnumerableOfSingleIListOfSingle">
            <summary>Définit le shim de MathEnumerableExtensions.WeightedAverage(IEnumerable`1&lt;Single&gt; collection, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.WeightedAverageOf1IEnumerableOfM0FuncOfM0Int32DoubleFuncOfM0Int32Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Double},System.Func{``0,System.Int32,System.Double},System.Double})">
            <summary>Définit le shim de MathEnumerableExtensions.WeightedAverage(IEnumerable`1&lt;!!0&gt; collection, Func`3&lt;!!0,Int32,Double&gt; valueSelector, Func`3&lt;!!0,Int32,Double&gt; weightSelector)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathEnumerableExtensions.WeightedAverageOf1IEnumerableOfM0FuncOfM0Int32DoubleFuncOfM0Int32DoubleFuncOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Double},System.Func{``0,System.Int32,System.Double},System.Func{System.Double},System.Double})">
            <summary>Définit le shim de MathEnumerableExtensions.WeightedAverage(IEnumerable`1&lt;!!0&gt; collection, Func`3&lt;!!0,Int32,Double&gt; valueSelector, Func`3&lt;!!0,Int32,Double&gt; weightSelector, Func`1&lt;Double&gt; divisionByZeroResolver)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimMathExtensions">
            <summary>Type shim de Accord.Extensions.Math.MathExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.Atan2AproxInt32Int32">
            <summary>Définit le shim de MathExtensions.Atan2Aprox(Int32 dY, Int32 dX)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.CalculateAngleTable">
            <summary>Définit le shim de MathExtensions.CalculateAngleTable()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.CalculateJacobianFuncOfDoubleArrayDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de MathExtensions.CalculateJacobian(Func`2&lt;Double[],Double[]&gt; evalFunc, Double[] arg, Double eps)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.CalculateOctantInt32RefInt32Ref">
            <summary>Définit le shim de MathExtensions.CalculateOctant(Int32&amp; x, Int32&amp; y)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.SqrtSingle">
            <summary>Définit le shim de MathExtensions.Sqrt(Single z)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathExtensions.StaticConstructor">
            <summary>Définit le shim de MathExtensions.MathExtensions()</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions">
            <summary>Type shim de Accord.Extensions.Math.MathPowerofTwoExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.IsPowerOfTwoInt32">
            <summary>Définit le shim de MathPowerofTwoExtensions.IsPowerOfTwo(Int32 x)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.IsPowerOfTwoUInt32">
            <summary>Définit le shim de MathPowerofTwoExtensions.IsPowerOfTwo(UInt32 x)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMathPowerofTwoExtensions.IsPowerOfTwoUInt64">
            <summary>Définit le shim de MathPowerofTwoExtensions.IsPowerOfTwo(UInt64 x)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Fakes.ShimMatrixExtensions">
            <summary>Type shim de Accord.Extensions.Math.MatrixExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.ColumnCountOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Définit le shim de MatrixExtensions.ColumnCount(!!0[,] matrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.CovarianceDoubleMdArray2">
            <summary>Définit le shim de MatrixExtensions.Covariance(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.CovarianceDoubleMdArray2DoubleArray">
            <summary>Définit le shim de MatrixExtensions.Covariance(Double[,] matrix, Double[] means)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.DefaultIfEmptyOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de MatrixExtensions.DefaultIfEmpty(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.DefaultIfEmptyOf1M0MdArray2M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de MatrixExtensions.DefaultIfEmpty(!!0[,] matrix, !!0[,] defaultValue)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.DivideSingleMdArray2SingleBoolean">
            <summary>Définit le shim de MatrixExtensions.Divide(Single[,] matrix, Single value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.GetAssociationsBooleanMdArray2ListOfInt32OutListOfInt32Out">
            <summary>Définit le shim de MatrixExtensions.GetAssociations(Boolean[,] associationMat, List`1&lt;Int32&gt;&amp; unassociatedRows, List`1&lt;Int32&gt;&amp; unassociatedColumns)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.GetAtOf1M0MdArray2Int32ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[][],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Définit le shim de MatrixExtensions.GetAt(!!0[,] matrix, Int32[][] indices)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.GetColumnOf1IEnumerableOfIListOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IList{``0}},System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Définit le shim de MatrixExtensions.GetColumn(IEnumerable`1&lt;IList`1&lt;!!0&gt;&gt; jaggedMatrix, Int32 columnIndex)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.GetSizeOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[]})">
            <summary>Définit le shim de MatrixExtensions.GetSize(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.IsEmptyOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de MatrixExtensions.IsEmpty(!!0[,] matrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.IsMultipliableByDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de MatrixExtensions.IsMultipliableBy(Double[,] leftMatrix, Double[,] rightMatrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.MeanDoubleMdArray2">
            <summary>Définit le shim de MatrixExtensions.Mean(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.MultiplyDoubleArrayDoubleArray">
            <summary>Définit le shim de MatrixExtensions.Multiply(Double[] columnVector, Double[] rowVector)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.RowCountOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Définit le shim de MatrixExtensions.RowCount(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.SetAtOf1M0MdArray2Int32ArrayArrayFuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[0:,0:],System.Int32[][],System.Func{``0,``0}})">
            <summary>Définit le shim de MatrixExtensions.SetAt(!!0[,] matrix, Int32[][] indices, Func`2&lt;!!0,!!0&gt; setter)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.ToDiagonalMatrixOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de MatrixExtensions.ToDiagonalMatrix(!!0[] vector)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.ToJaggedMatrixOf1IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[][]})">
            <summary>Définit le shim de MatrixExtensions.ToJaggedMatrix(IList`1&lt;!!0&gt; vector)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Fakes.ShimMatrixExtensions.ToMatrixOf1IEnumerableOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0[]},``0[0:,0:]})">
            <summary>Définit le shim de MatrixExtensions.ToMatrix(IEnumerable`1&lt;!!0[]&gt; matrixRows)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimAngle">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Angle</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.DistanceDegDoubleDouble">
            <summary>Définit le shim de Angle.DistanceDeg(Double angleDegA, Double angleDegB)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.NormalizeDegreesDouble">
            <summary>Définit le shim de Angle.NormalizeDegrees(Double angleDeg)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.ToDegreesDoubleBoolean">
            <summary>Définit le shim de Angle.ToDegrees(Double angleRad, Boolean normalizeDegrees)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimAngle.ToRadiansDouble">
            <summary>Définit le shim de Angle.ToRadians(Double angleDeg)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline">
            <summary>Type shim de Accord.Extensions.Math.Geometry.CardinalSpline</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.#ctor(Accord.Extensions.Math.Geometry.CardinalSpline)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AddTensionPointsListOfPointF">
            <summary>Définit le shim de CardinalSpline.AddTensionPoints(List`1&lt;PointF&gt; controlPoints)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.Clone">
            <summary>Définit le shim de CardinalSpline.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.ControlPointsGet">
            <summary>Définit le shim de CardinalSpline.get_ControlPoints()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.CountGet">
            <summary>Définit le shim de CardinalSpline.get_Count()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.DerivativeAtSingle">
            <summary>Définit le shim de CardinalSpline.DerivativeAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.InterpolateAtSingle">
            <summary>Définit le shim de CardinalSpline.InterpolateAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.NormalAtSingle">
            <summary>Définit le shim de CardinalSpline.NormalAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.TensionGet">
            <summary>Définit le shim de CardinalSpline.get_Tension()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.TensionSetSingle">
            <summary>Définit le shim de CardinalSpline.set_Tension(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.AllInstances.initializeSingle">
            <summary>Définit le shim de CardinalSpline.initialize(Single tension)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.Clone">
            <summary>Définit le shim de CardinalSpline.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.ConstructorIEnumerableOfPointFSingleBoolean">
            <summary>Définit le shim de CardinalSpline.CardinalSpline(IEnumerable`1&lt;PointF&gt; controlPoints, Single tension, Boolean addTensionPoints)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.ControlPointsGet">
            <summary>Définit le shim de CardinalSpline.get_ControlPoints()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.CountGet">
            <summary>Définit le shim de CardinalSpline.get_Count()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.DerivativeAtIListOfPointFSingleSingleBoolean">
            <summary>Définit le shim de CardinalSpline.DerivativeAt(IList`1&lt;PointF&gt; controlPoints, Single tension, Single index, Boolean approxAtControlPoint)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.DerivativeAtSingle">
            <summary>Définit le shim de CardinalSpline.DerivativeAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.GetEqualyDistributedPointIndicesIListOfPointFSingleInt32Single">
            <summary>Définit le shim de CardinalSpline.GetEqualyDistributedPointIndices(IList`1&lt;PointF&gt; controlPoints, Single tension, Int32 numPoints, Single samplingStep)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.InterpolateAtIListOfPointFSingleIEnumerableOfSingle">
            <summary>Définit le shim de CardinalSpline.InterpolateAt(IList`1&lt;PointF&gt; controlPoints, Single tension, IEnumerable`1&lt;Single&gt; indices)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.InterpolateAtIListOfPointFSingleSingle">
            <summary>Définit le shim de CardinalSpline.InterpolateAt(IList`1&lt;PointF&gt; controlPoints, Single tension, Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.InterpolateAtSingle">
            <summary>Définit le shim de CardinalSpline.InterpolateAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.InterpolateIListOfPointFSingleSingle">
            <summary>Définit le shim de CardinalSpline.Interpolate(IList`1&lt;PointF&gt; controlPoints, Single tension, Single samplingStep)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.NormalAtIListOfPointFSingleSingleBoolean">
            <summary>Définit le shim de CardinalSpline.NormalAt(IList`1&lt;PointF&gt; controlPoints, Single tension, Single index, Boolean approxAtControlPoint)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.NormalAtSingle">
            <summary>Définit le shim de CardinalSpline.NormalAt(Single index)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.TensionGet">
            <summary>Définit le shim de CardinalSpline.get_Tension()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.TensionSetSingle">
            <summary>Définit le shim de CardinalSpline.set_Tension(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.ValidIndicesRangeInt32">
            <summary>Définit le shim de CardinalSpline.ValidIndicesRange(Int32 controlPointsCount)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.initializeSingle">
            <summary>Définit le shim de CardinalSpline.initialize(Single tension)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCardinalSpline.reflectPointPointFPointF">
            <summary>Définit le shim de CardinalSpline.reflectPoint(PointF pt, PointF reflectorPt)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Cluster`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.#ctor(Accord.Extensions.Math.Geometry.Cluster{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.CumulativeWeightGet">
            <summary>Définit le shim de Cluster`1.get_CumulativeWeight()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.CumulativeWeightSetSingle">
            <summary>Définit le shim de Cluster`1.set_CumulativeWeight(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.DetectionsGet">
            <summary>Définit le shim de Cluster`1.get_Detections()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.DetectionsSetIListOfT0">
            <summary>Définit le shim de Cluster`1.set_Detections(IList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.NeighboursGet">
            <summary>Définit le shim de Cluster`1.get_Neighbours()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.RepresentativeGet">
            <summary>Définit le shim de Cluster`1.get_Representative()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.RepresentativeSetT0">
            <summary>Définit le shim de Cluster`1.set_Representative(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.WeightsGet">
            <summary>Définit le shim de Cluster`1.get_Weights()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.AllInstances.WeightsSetIListOfSingle">
            <summary>Définit le shim de Cluster`1.set_Weights(IList`1&lt;Single&gt; value)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.ConstructorIListOfT0IListOfSingleT0">
            <summary>Définit le shim de Cluster`1.Cluster`1(IList`1&lt;!0&gt; detections, IList`1&lt;Single&gt; detectionWeights, !0 representative)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.CumulativeWeightGet">
            <summary>Définit le shim de Cluster`1.get_CumulativeWeight()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.CumulativeWeightSetSingle">
            <summary>Définit le shim de Cluster`1.set_CumulativeWeight(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.DetectionsGet">
            <summary>Définit le shim de Cluster`1.get_Detections()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.DetectionsSetIListOfT0">
            <summary>Définit le shim de Cluster`1.set_Detections(IList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.NeighboursGet">
            <summary>Définit le shim de Cluster`1.get_Neighbours()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.RepresentativeGet">
            <summary>Définit le shim de Cluster`1.get_Representative()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.RepresentativeSetT0">
            <summary>Définit le shim de Cluster`1.set_Representative(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.WeightsGet">
            <summary>Définit le shim de Cluster`1.get_Weights()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimCluster`1.WeightsSetIListOfSingle">
            <summary>Définit le shim de Cluster`1.set_Weights(IList`1&lt;Single&gt; value)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Clustering`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.#ctor(Accord.Extensions.Math.Geometry.Clustering{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.GroupIListOfT0">
            <summary>Définit le shim de Clustering`1.Group(IList`1&lt;!0&gt; detections)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.GroupIListOfT0IListOfSingle">
            <summary>Définit le shim de Clustering`1.Group(IList`1&lt;!0&gt; detections, IList`1&lt;Single&gt; detectionWeights)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.MinGroupWeightGet">
            <summary>Définit le shim de Clustering`1.get_MinGroupWeight()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.MinGroupWeightSetSingle">
            <summary>Définit le shim de Clustering`1.set_MinGroupWeight(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.findClustersIListOfT0Int32Out">
            <summary>Définit le shim de Clustering`1.findClusters(IList`1&lt;!0&gt; vertices, Int32&amp; numberOfClusters)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.AllInstances.markNodesIListOfT0Int32ArrayInt32">
            <summary>Définit le shim de Clustering`1.markNodes(IList`1&lt;!0&gt; vertices, Int32[] labels, Int32 startNodeIndex)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.ConstructorSingle">
            <summary>Définit le shim de Clustering`1.Clustering`1(Single minGroupWeight)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.GroupIListOfT0">
            <summary>Définit le shim de Clustering`1.Group(IList`1&lt;!0&gt; detections)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.GroupIListOfT0IListOfSingle">
            <summary>Définit le shim de Clustering`1.Group(IList`1&lt;!0&gt; detections, IList`1&lt;Single&gt; detectionWeights)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.MinGroupWeightGet">
            <summary>Définit le shim de Clustering`1.get_MinGroupWeight()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.MinGroupWeightSetSingle">
            <summary>Définit le shim de Clustering`1.set_MinGroupWeight(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.StaticConstructor">
            <summary>Définit le shim de Clustering`1.Clustering`1()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.findClustersIListOfT0Int32Out">
            <summary>Définit le shim de Clustering`1.findClusters(IList`1&lt;!0&gt; vertices, Int32&amp; numberOfClusters)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimClustering`1.markNodesIListOfT0Int32ArrayInt32">
            <summary>Définit le shim de Clustering`1.markNodes(IList`1&lt;!0&gt; vertices, Int32[] labels, Int32 startNodeIndex)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f">
            <summary>Type shim de Accord.Extensions.Math.Geometry.ContourExtensions_Point32f</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.BoundingRectIEnumerableOfPointF">
            <summary>Définit le shim de ContourExtensions_Point32f.BoundingRect(IEnumerable`1&lt;PointF&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.CenterIEnumerableOfPointF">
            <summary>Définit le shim de ContourExtensions_Point32f.Center(IEnumerable`1&lt;PointF&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.CumulativeEuclideanDistanceIListOfPointFBoolean">
            <summary>Définit le shim de ContourExtensions_Point32f.CumulativeEuclideanDistance(IList`1&lt;PointF&gt; pts, Boolean treatAsClosed)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.GetEqualyDistributedPointsIListOfPointFInt32BooleanBoolean">
            <summary>Définit le shim de ContourExtensions_Point32f.GetEqualyDistributedPoints(IList`1&lt;PointF&gt; points, Int32 numberOfPoints, Boolean treatAsClosed, Boolean takeFirstPoint)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.IsRectangleIEnumerableOfPointF">
            <summary>Définit le shim de ContourExtensions_Point32f.IsRectangle(IEnumerable`1&lt;PointF&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32f.SortPointsClockwiseIEnumerableOfPointF">
            <summary>Définit le shim de ContourExtensions_Point32f.SortPointsClockwise(IEnumerable`1&lt;PointF&gt; points)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i">
            <summary>Type shim de Accord.Extensions.Math.Geometry.ContourExtensions_Point32i</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.BoundingRectIEnumerableOfPoint">
            <summary>Définit le shim de ContourExtensions_Point32i.BoundingRect(IEnumerable`1&lt;Point&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.CenterIEnumerableOfPoint">
            <summary>Définit le shim de ContourExtensions_Point32i.Center(IEnumerable`1&lt;Point&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.ClusterPointsIListOfPointListOfInt32DoubleListOfSingle">
            <summary>Définit le shim de ContourExtensions_Point32i.ClusterPoints(IList`1&lt;Point&gt; contour, List`1&lt;Int32&gt; ptIndeces, Double clusterRange, List`1&lt;Single&gt; cumulativeDistance)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.CumulativeEuclideanDistanceIListOfPointBoolean">
            <summary>Définit le shim de ContourExtensions_Point32i.CumulativeEuclideanDistance(IList`1&lt;Point&gt; pts, Boolean treatAsClosed)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.FindExtremaIndicesIListOfPointFuncOfSingleBooleanBooleanInt32ListOfInt32OutListOfInt32Out">
            <summary>Définit le shim de ContourExtensions_Point32i.FindExtremaIndices(IList`1&lt;Point&gt; contourPts, Func`3&lt;Single,Boolean,Boolean&gt; selector, Int32 scale, List`1&lt;Int32&gt;&amp; peaks, List`1&lt;Int32&gt;&amp; valeys)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.GetClosestPointIListOfPointInt32Int32Int32Int32">
            <summary>Définit le shim de ContourExtensions_Point32i.GetClosestPoint(IList`1&lt;Point&gt; contour, Int32 ptIdx, Int32 startIdx, Int32 direction, Int32 scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.GetClosestPointIListOfPointInt32Int32Int32Int32DoubleOut">
            <summary>Définit le shim de ContourExtensions_Point32i.GetClosestPoint(IList`1&lt;Point&gt; contour, Int32 ptIdx, Int32 startIdx, Int32 direction, Int32 scale, Double&amp; distance)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.GetClosestPointIListOfPointInt32IntRangeDoubleOut">
            <summary>Définit le shim de ContourExtensions_Point32i.GetClosestPoint(IList`1&lt;Point&gt; contour, Int32 ptIdx, IntRange searchSegment, Double&amp; distance)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.GetHumpsIListOfPointListOfInt32ListOfInt32Int32ListOfInt32Out">
            <summary>Définit le shim de ContourExtensions_Point32i.GetHumps(IList`1&lt;Point&gt; contour, List`1&lt;Int32&gt; peaks, List`1&lt;Int32&gt; valeys, Int32 scale, List`1&lt;Int32&gt;&amp; humpPeaks)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.GetPathLengthIListOfPointInt32Int32ListOfSingle">
            <summary>Définit le shim de ContourExtensions_Point32i.GetPathLength(IList`1&lt;Point&gt; pts, Int32 pA, Int32 pB, List`1&lt;Single&gt; cumulativePathLength)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.IsRectangleIEnumerableOfPoint">
            <summary>Définit le shim de ContourExtensions_Point32i.IsRectangle(IEnumerable`1&lt;Point&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimContourExtensions_Point32i.SortPointsClockwiseIEnumerableOfPoint">
            <summary>Définit le shim de ContourExtensions_Point32i.SortPointsClockwise(IEnumerable`1&lt;Point&gt; points)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Edge`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.#ctor(Accord.Extensions.Math.Geometry.Edge{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.DestinationGet">
            <summary>Définit le shim de Edge`1.get_Destination()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.DestinationSetT0">
            <summary>Définit le shim de Edge`1.set_Destination(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.EqualsObject">
            <summary>Définit le shim de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.GetHashCode01">
            <summary>Définit le shim de Edge`1.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.SourceGet">
            <summary>Définit le shim de Edge`1.get_Source()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.SourceSetT0">
            <summary>Définit le shim de Edge`1.set_Source(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.AllInstances.ToString01">
            <summary>Définit le shim de Edge`1.ToString()</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.ConstructorT0T0">
            <summary>Définit le shim de Edge`1.Edge`1(!0 source, !0 destination)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.DestinationGet">
            <summary>Définit le shim de Edge`1.get_Destination()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.DestinationSetT0">
            <summary>Définit le shim de Edge`1.set_Destination(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.EqualsObject">
            <summary>Définit le shim de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.GetHashCode">
            <summary>Définit le shim de Edge`1.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.SourceGet">
            <summary>Définit le shim de Edge`1.get_Source()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.SourceSetT0">
            <summary>Définit le shim de Edge`1.set_Source(!0 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`1.ToString">
            <summary>Définit le shim de Edge`1.ToString()</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Edge`2</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.#ctor(Accord.Extensions.Math.Geometry.Edge{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.AllInstances.TagGet">
            <summary>Définit le shim de Edge`2.get_Tag()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.AllInstances.TagSetT1">
            <summary>Définit le shim de Edge`2.set_Tag(!1 value)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.ConstructorT0T0T1">
            <summary>Définit le shim de Edge`2.Edge`2(!0 source, !0 destination, !1 tag)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.TagGet">
            <summary>Définit le shim de Edge`2.get_Tag()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimEdge`2.TagSetT1">
            <summary>Définit le shim de Edge`2.set_Tag(!1 value)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions">
            <summary>Type shim de Accord.Extensions.Math.Geometry.FloydWarshallExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.FindShortestPathsOf2IDictionaryOfPairOfM0M1FuncOfM1DoubleIDictionaryOfPairOfM0DoubleOut``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1},System.Func{``1,System.Double},System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},System.Double},System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},System.Collections.Generic.List{``1}}})">
            <summary>Définit le shim de FloydWarshallExtensions.FindShortestPaths(IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!1&gt; graph, Func`2&lt;!!1,Double&gt; distanceFunc, IDictionary`2&lt;Pair`1&lt;!!0&gt;,Double&gt;&amp; costMat)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimFloydWarshallExtensions.getPathOf2IDictionaryOfPairOfM0M1IDictionaryOfPairOfM0M0M0M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1},System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``0},``0,``0,System.Collections.Generic.List{``1}})">
            <summary>Définit le shim de FloydWarshallExtensions.getPath(IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!1&gt; graph, IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!0&gt; nextVertexMatrix, !!0 source, !!0 destination)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions">
            <summary>Type shim de Accord.Extensions.Math.Geometry.GraphBaseExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.AddOrUpdateEdgeOf2IDictionaryOfPairOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1},``1})">
            <summary>Définit le shim de GraphBaseExtensions.AddOrUpdateEdge(IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!1&gt; graph, !!1 edge)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.GetVerticesOf2IDictionaryOfPairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Définit le shim de GraphBaseExtensions.GetVertices(IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!1&gt; graph)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.GetVerticesOf2IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Définit le shim de GraphBaseExtensions.GetVertices(IEnumerable`1&lt;!!1&gt; edges)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.RemoveEdgeOf3IDictionaryOfPairOfM0M1M1``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1},``1,System.Boolean})">
            <summary>Définit le shim de GraphBaseExtensions.RemoveEdge(IDictionary`2&lt;Pair`1&lt;!!0&gt;,!!1&gt; graph, !!1 edge)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimGraphBaseExtensions.ToGraphOf2IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IDictionary{Accord.Extensions.Pair{``0},``1}})">
            <summary>Définit le shim de GraphBaseExtensions.ToGraph(IEnumerable`1&lt;!!1&gt; edges)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Point`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPoint`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions">
            <summary>Type shim de Accord.Extensions.Math.Geometry.PointTransfromationsExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.NormalizeIEnumerableOfPointF">
            <summary>Définit le shim de PointTransfromationsExtensions.Normalize(IEnumerable`1&lt;PointF&gt; points)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.ProjectPoint3Point3">
            <summary>Définit le shim de PointTransfromationsExtensions.Project(Point3 point, Point3 camera)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.TransformIEnumerableOfPointFSingleMdArray2">
            <summary>Définit le shim de PointTransfromationsExtensions.Transform(IEnumerable`1&lt;PointF&gt; points, Single[,] transformationMat)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.TransformPoint3SingleMdArray2">
            <summary>Définit le shim de PointTransfromationsExtensions.Transform(Point3 point, Single[,] transformationMat)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimPointTransfromationsExtensions.TransformPointFSingleMdArray2Point3">
            <summary>Définit le shim de PointTransfromationsExtensions.Transform(PointF point, Single[,] transformationMat, Point3 camera)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions">
            <summary>Type shim de Accord.Extensions.Math.Geometry.RangeExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRangeExtensions.IsInsideIntRangeIEnumerableOfInt32">
            <summary>Définit le shim de RangeExtensions.IsInside(IntRange range, IEnumerable`1&lt;Int32&gt; values)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering">
            <summary>Type shim de Accord.Extensions.Math.Geometry.RectangleClustering</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.#ctor(Accord.Extensions.Math.Geometry.RectangleClustering)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AllInstances.AreDetectionsAdjacentRectangleRectangle">
            <summary>Définit le shim de RectangleClustering.AreDetectionsAdjacent(Rectangle r1, Rectangle r2)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AllInstances.GetRepresentativeIListOfRectangleIListOfSingle">
            <summary>Définit le shim de RectangleClustering.GetRepresentative(IList`1&lt;Rectangle&gt; rects, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AllInstances.MinRectangleAreaOverlapGet">
            <summary>Définit le shim de RectangleClustering.get_MinRectangleAreaOverlap()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AllInstances.MinRectangleAreaOverlapSetSingle">
            <summary>Définit le shim de RectangleClustering.set_MinRectangleAreaOverlap(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.AreDetectionsAdjacentRectangleRectangle">
            <summary>Définit le shim de RectangleClustering.AreDetectionsAdjacent(Rectangle r1, Rectangle r2)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.ConstructorSingleSingle">
            <summary>Définit le shim de RectangleClustering.RectangleClustering(Single minGroupWeight, Single minRectangleAreaOverlap)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.GetRepresentativeIListOfRectangleIListOfSingle">
            <summary>Définit le shim de RectangleClustering.GetRepresentative(IList`1&lt;Rectangle&gt; rects, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.MinRectangleAreaOverlapGet">
            <summary>Définit le shim de RectangleClustering.get_MinRectangleAreaOverlap()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleClustering.MinRectangleAreaOverlapSetSingle">
            <summary>Définit le shim de RectangleClustering.set_MinRectangleAreaOverlap(Single value)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions">
            <summary>Type shim de Accord.Extensions.Math.Geometry.RectangleFExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.RandomizeRectangleFPairOfRangePairOfRangeInt32Random">
            <summary>Définit le shim de RectangleFExtensions.Randomize(RectangleF rect, Pair`1&lt;Range&gt; locationOffset, Pair`1&lt;Range&gt; sizeOffset, Int32 nRandomizedRectangles, Random rand)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimRectangleFExtensions.RandomizeRectangleFRangeRangeInt32Random">
            <summary>Définit le shim de RectangleFExtensions.Randomize(RectangleF rect, Range locationOffset, Range sizeOffset, Int32 nRandomizedRectangles, Random rand)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Transforms2D</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.CombineSingleMdArray2Array">
            <summary>Définit le shim de Transforms2D.Combine(Single[,][] transforms)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.RotationSingle">
            <summary>Définit le shim de Transforms2D.Rotation(Single angleRad)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.ScaleSingleSingleSingle">
            <summary>Définit le shim de Transforms2D.Scale(Single x, Single y, Single z)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimTransforms2D.TranslationSingleSingle">
            <summary>Définit le shim de Transforms2D.Translation(Single x, Single y)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D">
            <summary>Type shim de Accord.Extensions.Math.Geometry.Vector2D</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.#ctor(Accord.Extensions.Math.Geometry.Vector2D)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AddPointF">
            <summary>Définit le shim de Vector2D.Add(PointF point)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AddPointFVector2D">
            <summary>Définit le shim de Vector2D.Add(PointF point, Vector2D vector)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AdditionOpPointFVector2D">
            <summary>Définit le shim de Vector2D.op_Addition(PointF point, Vector2D vector)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.AddPointF">
            <summary>Définit le shim de Vector2D.Add(PointF point)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.EqualsObject">
            <summary>Définit le shim de Vector2D.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.GetHashCode01">
            <summary>Définit le shim de Vector2D.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.LengthGet">
            <summary>Définit le shim de Vector2D.get_Length()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.LengthSetDouble">
            <summary>Définit le shim de Vector2D.set_Length(Double value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.MultiplySingle">
            <summary>Définit le shim de Vector2D.Multiply(Single scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.Negate">
            <summary>Définit le shim de Vector2D.Negate()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.Normalize">
            <summary>Définit le shim de Vector2D.Normalize()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.XGet">
            <summary>Définit le shim de Vector2D.get_X()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.XSetSingle">
            <summary>Définit le shim de Vector2D.set_X(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.YGet">
            <summary>Définit le shim de Vector2D.get_Y()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AllInstances.YSetSingle">
            <summary>Définit le shim de Vector2D.set_Y(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AngleVector2DVector2D">
            <summary>Définit le shim de Vector2D.Angle(Vector2D v1, Vector2D v2)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.AreOpositeDirectionVector2DVector2D">
            <summary>Définit le shim de Vector2D.AreOpositeDirection(Vector2D v1, Vector2D v2)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.ConstructorDoubleSingle">
            <summary>Définit le shim de Vector2D.Vector2D(Double angleRad, Single scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.ConstructorPointFPointF">
            <summary>Définit le shim de Vector2D.Vector2D(PointF startPoint, PointF endPoint)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.ConstructorSingleSingle">
            <summary>Définit le shim de Vector2D.Vector2D(Single directionX, Single directionY)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.CrossProductVector2DVector2D">
            <summary>Définit le shim de Vector2D.CrossProduct(Vector2D v1, Vector2D v2)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.DotProductVector2DVector2D">
            <summary>Définit le shim de Vector2D.DotProduct(Vector2D v1, Vector2D v2)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.EqualsObject">
            <summary>Définit le shim de Vector2D.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.ExplicitOpPointFVector2D">
            <summary>Définit le shim de Vector2D.op_Explicit(PointF direction)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.ExplicitOpVector2DPointF">
            <summary>Définit le shim de Vector2D.op_Explicit(Vector2D vector)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.GetHashCode">
            <summary>Définit le shim de Vector2D.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.LengthGet">
            <summary>Définit le shim de Vector2D.get_Length()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.LengthSetDouble">
            <summary>Définit le shim de Vector2D.set_Length(Double value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.MultiplyOpVector2DSingle">
            <summary>Définit le shim de Vector2D.op_Multiply(Vector2D vector, Single scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.MultiplySingle">
            <summary>Définit le shim de Vector2D.Multiply(Single scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.MultiplyVector2DSingle">
            <summary>Définit le shim de Vector2D.Multiply(Vector2D vector, Single scale)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.Negate">
            <summary>Définit le shim de Vector2D.Negate()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.Normalize">
            <summary>Définit le shim de Vector2D.Normalize()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.StaticConstructor">
            <summary>Définit le shim de Vector2D.Vector2D()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.XGet">
            <summary>Définit le shim de Vector2D.get_X()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.XSetSingle">
            <summary>Définit le shim de Vector2D.set_X(Single value)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.YGet">
            <summary>Définit le shim de Vector2D.get_Y()</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.ShimVector2D.YSetSingle">
            <summary>Définit le shim de Vector2D.set_Y(Single value)</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline">
            <summary>Type stub de Accord.Extensions.Math.Geometry.CardinalSpline</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline.#ctor(System.Collections.Generic.IEnumerable{DotImaging.Primitives2D.PointF},System.Single,System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCardinalSpline</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCardinalSpline.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1">
            <summary>Type stub de Accord.Extensions.Math.Geometry.Cluster`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{System.Single},`0)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCluster</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubCluster`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1">
            <summary>Type stub de Accord.Extensions.Math.Geometry.Clustering`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.#ctor(System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.AreDetectionsAdjacent(`0,`0)">
            <summary>Définit le stub de Clustering`1.AreDetectionsAdjacent(!0 sampleA, !0 sampleB)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.AreDetectionsAdjacentT0T0">
            <summary>Définit le stub de Clustering`1.AreDetectionsAdjacent(!0 sampleA, !0 sampleB)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.GetRepresentative(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{System.Single})">
            <summary>Définit le stub de Clustering`1.GetRepresentative(IList`1&lt;!0&gt; samples, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.GetRepresentativeIListOfT0IListOfSingle">
            <summary>Définit le stub de Clustering`1.GetRepresentative(IList`1&lt;!0&gt; samples, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubClustering</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubClustering`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1">
            <summary>Type stub de Accord.Extensions.Math.Geometry.Edge`1</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.#ctor(`0,`0)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.Equals(System.Object)">
            <summary>Définit le stub de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.EqualsObject">
            <summary>Définit le stub de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.GetHashCode">
            <summary>Définit le stub de Edge`1.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.GetHashCode01">
            <summary>Définit le stub de Edge`1.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubEdge</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.ToString">
            <summary>Définit le stub de Edge`1.ToString()</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`1.ToString01">
            <summary>Définit le stub de Edge`1.ToString()</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2">
            <summary>Type stub de Accord.Extensions.Math.Geometry.Edge`2</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.#ctor(`0,`0,`1)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.Equals(System.Object)">
            <summary>Définit le stub de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.EqualsObject">
            <summary>Définit le stub de Edge`1.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.GetHashCode">
            <summary>Définit le stub de Edge`1.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.GetHashCode01">
            <summary>Définit le stub de Edge`1.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubEdge</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.ToString">
            <summary>Définit le stub de Edge`1.ToString()</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubEdge`2.ToString01">
            <summary>Définit le stub de Edge`1.ToString()</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering">
            <summary>Type stub de Accord.Extensions.Math.Geometry.RectangleClustering</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.#ctor(System.Single,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.AreDetectionsAdjacent(DotImaging.Primitives2D.Rectangle,DotImaging.Primitives2D.Rectangle)">
            <summary>Définit le stub de RectangleClustering.AreDetectionsAdjacent(Rectangle r1, Rectangle r2)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.AreDetectionsAdjacentRectangleRectangle">
            <summary>Définit le stub de RectangleClustering.AreDetectionsAdjacent(Rectangle r1, Rectangle r2)</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.GetRepresentative(System.Collections.Generic.IList{DotImaging.Primitives2D.Rectangle},System.Collections.Generic.IList{System.Single})">
            <summary>Définit le stub de RectangleClustering.GetRepresentative(IList`1&lt;Rectangle&gt; rects, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.GetRepresentativeIListOfRectangleIListOfSingle">
            <summary>Définit le stub de RectangleClustering.GetRepresentative(IList`1&lt;Rectangle&gt; rects, IList`1&lt;Single&gt; weights)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRectangleClustering</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubRectangleClustering.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Math.Geometry.Fakes.StubVector2D">
            <summary>Type stub de Accord.Extensions.Math.Geometry.Vector2D</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.#ctor(DotImaging.Primitives2D.PointF,DotImaging.Primitives2D.PointF)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.#ctor(System.Double,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.#ctor(System.Single,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.Equals(System.Object)">
            <summary>Définit le stub de Vector2D.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.EqualsObject">
            <summary>Définit le stub de Vector2D.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.GetHashCode">
            <summary>Définit le stub de Vector2D.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.GetHashCode01">
            <summary>Définit le stub de Vector2D.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubVector2D</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Math.Geometry.Fakes.StubVector2D.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
    </members>
</doc>

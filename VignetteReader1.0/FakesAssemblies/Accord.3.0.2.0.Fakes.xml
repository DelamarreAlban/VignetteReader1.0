<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.3.0.2.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:AForge.Fakes.ShimCommunicationBufferEventArgs">
            <summary>Type shim de AForge.CommunicationBufferEventArgs</summary>
        </member>
        <member name="M:AForge.Fakes.ShimCommunicationBufferEventArgs.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimCommunicationBufferEventArgs.#ctor(AForge.CommunicationBufferEventArgs)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimCommunicationBufferEventArgs.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.AllInstances.GetMessage">
            <summary>Définit le shim de CommunicationBufferEventArgs.GetMessage()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.AllInstances.GetMessageString">
            <summary>Définit le shim de CommunicationBufferEventArgs.GetMessageString()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.AllInstances.MessageLengthGet">
            <summary>Définit le shim de CommunicationBufferEventArgs.get_MessageLength()</summary>
        </member>
        <member name="M:AForge.Fakes.ShimCommunicationBufferEventArgs.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimCommunicationBufferEventArgs.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.ConstructorByteArray">
            <summary>Définit le shim de CommunicationBufferEventArgs.CommunicationBufferEventArgs(Byte[] message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.ConstructorByteArrayInt32Int32">
            <summary>Définit le shim de CommunicationBufferEventArgs.CommunicationBufferEventArgs(Byte[] buffer, Int32 index, Int32 length)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.GetMessage">
            <summary>Définit le shim de CommunicationBufferEventArgs.GetMessage()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.GetMessageString">
            <summary>Définit le shim de CommunicationBufferEventArgs.GetMessageString()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimCommunicationBufferEventArgs.MessageLengthGet">
            <summary>Définit le shim de CommunicationBufferEventArgs.get_MessageLength()</summary>
        </member>
        <member name="T:AForge.Fakes.ShimConnectionFailedException">
            <summary>Type shim de AForge.ConnectionFailedException</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionFailedException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionFailedException.#ctor(AForge.ConnectionFailedException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimConnectionFailedException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionFailedException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionFailedException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionFailedException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionFailedException.Constructor">
            <summary>Définit le shim de ConnectionFailedException.ConnectionFailedException()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionFailedException.ConstructorString">
            <summary>Définit le shim de ConnectionFailedException.ConnectionFailedException(String message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionFailedException.ConstructorStringException">
            <summary>Définit le shim de ConnectionFailedException.ConnectionFailedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimConnectionLostException">
            <summary>Type shim de AForge.ConnectionLostException</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionLostException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionLostException.#ctor(AForge.ConnectionLostException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimConnectionLostException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionLostException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionLostException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionLostException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimConnectionLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionLostException.Constructor">
            <summary>Définit le shim de ConnectionLostException.ConnectionLostException()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionLostException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de ConnectionLostException.ConnectionLostException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionLostException.ConstructorString">
            <summary>Définit le shim de ConnectionLostException.ConnectionLostException(String message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimConnectionLostException.ConstructorStringException">
            <summary>Définit le shim de ConnectionLostException.ConnectionLostException(String message, Exception innerException)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDeviceBusyException">
            <summary>Type shim de AForge.DeviceBusyException</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceBusyException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceBusyException.#ctor(AForge.DeviceBusyException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDeviceBusyException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceBusyException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceBusyException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceBusyException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceBusyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceBusyException.Constructor">
            <summary>Définit le shim de DeviceBusyException.DeviceBusyException()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceBusyException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de DeviceBusyException.DeviceBusyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceBusyException.ConstructorString">
            <summary>Définit le shim de DeviceBusyException.DeviceBusyException(String message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceBusyException.ConstructorStringException">
            <summary>Définit le shim de DeviceBusyException.DeviceBusyException(String message, Exception innerException)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDeviceErrorException">
            <summary>Type shim de AForge.DeviceErrorException</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceErrorException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceErrorException.#ctor(AForge.DeviceErrorException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDeviceErrorException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceErrorException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceErrorException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceErrorException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDeviceErrorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceErrorException.Constructor">
            <summary>Définit le shim de DeviceErrorException.DeviceErrorException()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceErrorException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de DeviceErrorException.DeviceErrorException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceErrorException.ConstructorString">
            <summary>Définit le shim de DeviceErrorException.DeviceErrorException(String message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDeviceErrorException.ConstructorStringException">
            <summary>Définit le shim de DeviceErrorException.DeviceErrorException(String message, Exception innerException)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDoublePoint">
            <summary>Type shim de AForge.DoublePoint</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoublePoint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.AddDoublePointDouble">
            <summary>Définit le shim de DoublePoint.Add(DoublePoint point, Double valueToAdd)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.AddDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.Add(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.AdditionOpDoublePointDouble">
            <summary>Définit le shim de DoublePoint.op_Addition(DoublePoint point, Double valueToAdd)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.AdditionOpDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.op_Addition(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDoublePoint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoublePoint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoublePoint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.DivideDoublePointDouble">
            <summary>Définit le shim de DoublePoint.Divide(DoublePoint point, Double factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.DivisionOpDoublePointDouble">
            <summary>Définit le shim de DoublePoint.op_Division(DoublePoint point, Double factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.EqualityOpDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.op_Equality(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.ExplicitOpDoublePointIntPoint">
            <summary>Définit le shim de DoublePoint.op_Explicit(DoublePoint point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.ExplicitOpDoublePointPoint">
            <summary>Définit le shim de DoublePoint.op_Explicit(DoublePoint point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.InequalityOpDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.op_Inequality(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.MultiplyDoublePointDouble">
            <summary>Définit le shim de DoublePoint.Multiply(DoublePoint point, Double factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.MultiplyOpDoublePointDouble">
            <summary>Définit le shim de DoublePoint.op_Multiply(DoublePoint point, Double factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.SubtractDoublePointDouble">
            <summary>Définit le shim de DoublePoint.Subtract(DoublePoint point, Double valueToSubtract)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.SubtractDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.Subtract(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.SubtractionOpDoublePointDouble">
            <summary>Définit le shim de DoublePoint.op_Subtraction(DoublePoint point, Double valueToSubtract)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoublePoint.SubtractionOpDoublePointDoublePoint">
            <summary>Définit le shim de DoublePoint.op_Subtraction(DoublePoint point1, DoublePoint point2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDoubleRange">
            <summary>Type shim de AForge.DoubleRange</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoubleRange.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:AForge.Fakes.ShimDoubleRange.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoubleRange.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimDoubleRange.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoubleRange.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoubleRange.EqualityOpDoubleRangeDoubleRange">
            <summary>Définit le shim de DoubleRange.op_Equality(DoubleRange range1, DoubleRange range2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimDoubleRange.InequalityOpDoubleRangeDoubleRange">
            <summary>Définit le shim de DoubleRange.op_Inequality(DoubleRange range1, DoubleRange range2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimIntPoint">
            <summary>Type shim de AForge.IntPoint</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntPoint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.AddIntPointInt32">
            <summary>Définit le shim de IntPoint.Add(IntPoint point, Int32 valueToAdd)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.AddIntPointIntPoint">
            <summary>Définit le shim de IntPoint.Add(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.AdditionOpIntPointInt32">
            <summary>Définit le shim de IntPoint.op_Addition(IntPoint point, Int32 valueToAdd)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.AdditionOpIntPointIntPoint">
            <summary>Définit le shim de IntPoint.op_Addition(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimIntPoint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntPoint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntPoint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.DivideIntPointInt32">
            <summary>Définit le shim de IntPoint.Divide(IntPoint point, Int32 factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.DivisionOpIntPointInt32">
            <summary>Définit le shim de IntPoint.op_Division(IntPoint point, Int32 factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.EqualityOpIntPointIntPoint">
            <summary>Définit le shim de IntPoint.op_Equality(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.ImplicitOpIntPointDoublePoint">
            <summary>Définit le shim de IntPoint.op_Implicit(IntPoint point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.ImplicitOpIntPointPoint">
            <summary>Définit le shim de IntPoint.op_Implicit(IntPoint point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.InequalityOpIntPointIntPoint">
            <summary>Définit le shim de IntPoint.op_Inequality(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.MultiplyIntPointInt32">
            <summary>Définit le shim de IntPoint.Multiply(IntPoint point, Int32 factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.MultiplyOpIntPointInt32">
            <summary>Définit le shim de IntPoint.op_Multiply(IntPoint point, Int32 factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.SubtractIntPointInt32">
            <summary>Définit le shim de IntPoint.Subtract(IntPoint point, Int32 valueToSubtract)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.SubtractIntPointIntPoint">
            <summary>Définit le shim de IntPoint.Subtract(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.SubtractionOpIntPointInt32">
            <summary>Définit le shim de IntPoint.op_Subtraction(IntPoint point, Int32 valueToSubtract)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntPoint.SubtractionOpIntPointIntPoint">
            <summary>Définit le shim de IntPoint.op_Subtraction(IntPoint point1, IntPoint point2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimIntRange">
            <summary>Type shim de AForge.IntRange</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntRange.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:AForge.Fakes.ShimIntRange.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntRange.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimIntRange.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntRange.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntRange.EqualityOpIntRangeIntRange">
            <summary>Définit le shim de IntRange.op_Equality(IntRange range1, IntRange range2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntRange.ImplicitOpIntRangeRange">
            <summary>Définit le shim de IntRange.op_Implicit(IntRange range)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimIntRange.InequalityOpIntRangeIntRange">
            <summary>Définit le shim de IntRange.op_Inequality(IntRange range1, IntRange range2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimNotConnectedException">
            <summary>Type shim de AForge.NotConnectedException</summary>
        </member>
        <member name="M:AForge.Fakes.ShimNotConnectedException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimNotConnectedException.#ctor(AForge.NotConnectedException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimNotConnectedException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimNotConnectedException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimNotConnectedException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimNotConnectedException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimNotConnectedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Fakes.ShimNotConnectedException.Constructor">
            <summary>Définit le shim de NotConnectedException.NotConnectedException()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimNotConnectedException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de NotConnectedException.NotConnectedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimNotConnectedException.ConstructorString">
            <summary>Définit le shim de NotConnectedException.NotConnectedException(String message)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimNotConnectedException.ConstructorStringException">
            <summary>Définit le shim de NotConnectedException.NotConnectedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimParallel">
            <summary>Type shim de AForge.Parallel</summary>
        </member>
        <member name="M:AForge.Fakes.ShimParallel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimParallel.#ctor(AForge.Parallel)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimParallel.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.AllInstances.Initialize">
            <summary>Définit le shim de Parallel.Initialize()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.AllInstances.Terminate">
            <summary>Définit le shim de Parallel.Terminate()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.AllInstances.WorkerThreadObject">
            <summary>Définit le shim de Parallel.WorkerThread(Object index)</summary>
        </member>
        <member name="M:AForge.Fakes.ShimParallel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimParallel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.Constructor">
            <summary>Définit le shim de Parallel.Parallel()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.ForInt32Int32ParallelForLoopBody">
            <summary>Définit le shim de Parallel.For(Int32 start, Int32 stop, ForLoopBody loopBody)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.Initialize">
            <summary>Définit le shim de Parallel.Initialize()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.InstanceGet">
            <summary>Définit le shim de Parallel.get_Instance()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.StaticConstructor">
            <summary>Définit le shim de Parallel.Parallel()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.Terminate">
            <summary>Définit le shim de Parallel.Terminate()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.ThreadsCountGet">
            <summary>Définit le shim de Parallel.get_ThreadsCount()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.ThreadsCountSetInt32">
            <summary>Définit le shim de Parallel.set_ThreadsCount(Int32 value)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimParallel.WorkerThreadObject">
            <summary>Définit le shim de Parallel.WorkerThread(Object index)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimPoint">
            <summary>Type shim de AForge.Point</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPoint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.AddPointPoint">
            <summary>Définit le shim de Point.Add(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.AddPointSingle">
            <summary>Définit le shim de Point.Add(Point point, Single valueToAdd)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.AdditionOpPointPoint">
            <summary>Définit le shim de Point.op_Addition(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.AdditionOpPointSingle">
            <summary>Définit le shim de Point.op_Addition(Point point, Single valueToAdd)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimPoint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPoint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPoint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.DividePointSingle">
            <summary>Définit le shim de Point.Divide(Point point, Single factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.DivisionOpPointSingle">
            <summary>Définit le shim de Point.op_Division(Point point, Single factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.EqualityOpPointPoint">
            <summary>Définit le shim de Point.op_Equality(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.ExplicitOpPointIntPoint">
            <summary>Définit le shim de Point.op_Explicit(Point point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.ImplicitOpPointDoublePoint">
            <summary>Définit le shim de Point.op_Implicit(Point point)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.InequalityOpPointPoint">
            <summary>Définit le shim de Point.op_Inequality(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.MultiplyOpPointSingle">
            <summary>Définit le shim de Point.op_Multiply(Point point, Single factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.MultiplyPointSingle">
            <summary>Définit le shim de Point.Multiply(Point point, Single factor)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.SubtractPointPoint">
            <summary>Définit le shim de Point.Subtract(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.SubtractPointSingle">
            <summary>Définit le shim de Point.Subtract(Point point, Single valueToSubtract)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.SubtractionOpPointPoint">
            <summary>Définit le shim de Point.op_Subtraction(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPoint.SubtractionOpPointSingle">
            <summary>Définit le shim de Point.op_Subtraction(Point point, Single valueToSubtract)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimPolishExpression">
            <summary>Type shim de AForge.PolishExpression</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPolishExpression.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPolishExpression.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimPolishExpression.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPolishExpression.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimPolishExpression.EvaluateStringDoubleArray">
            <summary>Définit le shim de PolishExpression.Evaluate(String expression, Double[] variables)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimRange">
            <summary>Type shim de AForge.Range</summary>
        </member>
        <member name="M:AForge.Fakes.ShimRange.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:AForge.Fakes.ShimRange.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Fakes.ShimRange.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimRange.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimRange.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimRange.EqualityOpRangeRange">
            <summary>Définit le shim de Range.op_Equality(Range range1, Range range2)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimRange.InequalityOpRangeRange">
            <summary>Définit le shim de Range.op_Inequality(Range range1, Range range2)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimSystemTools">
            <summary>Type shim de AForge.SystemTools</summary>
        </member>
        <member name="M:AForge.Fakes.ShimSystemTools.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimSystemTools.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimSystemTools.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimSystemTools.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimSystemTools.CopyUnmanagedMemoryIntPtrIntPtrInt32">
            <summary>Définit le shim de SystemTools.CopyUnmanagedMemory(IntPtr dst, IntPtr src, Int32 count)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimSystemTools.SetUnmanagedMemoryIntPtrInt32Int32">
            <summary>Définit le shim de SystemTools.SetUnmanagedMemory(IntPtr dst, Int32 filler, Int32 count)</summary>
        </member>
        <member name="T:AForge.Fakes.ShimThreadSafeRandom">
            <summary>Type shim de AForge.ThreadSafeRandom</summary>
        </member>
        <member name="M:AForge.Fakes.ShimThreadSafeRandom.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimThreadSafeRandom.#ctor(AForge.ThreadSafeRandom)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Fakes.ShimThreadSafeRandom.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.AllInstances.Next">
            <summary>Définit le shim de ThreadSafeRandom.Next()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.AllInstances.NextBytesByteArray">
            <summary>Définit le shim de ThreadSafeRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.AllInstances.NextDouble">
            <summary>Définit le shim de ThreadSafeRandom.NextDouble()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.AllInstances.NextInt32">
            <summary>Définit le shim de ThreadSafeRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.AllInstances.NextInt32Int32">
            <summary>Définit le shim de ThreadSafeRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:AForge.Fakes.ShimThreadSafeRandom.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Fakes.ShimThreadSafeRandom.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.Constructor">
            <summary>Définit le shim de ThreadSafeRandom.ThreadSafeRandom()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.ConstructorInt32">
            <summary>Définit le shim de ThreadSafeRandom.ThreadSafeRandom(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.Next">
            <summary>Définit le shim de ThreadSafeRandom.Next()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.NextBytesByteArray">
            <summary>Définit le shim de ThreadSafeRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.NextDouble">
            <summary>Définit le shim de ThreadSafeRandom.NextDouble()</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.NextInt32">
            <summary>Définit le shim de ThreadSafeRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:AForge.Fakes.ShimThreadSafeRandom.NextInt32Int32">
            <summary>Définit le shim de ThreadSafeRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="T:AForge.Fakes.StubCommunicationBufferEventArgs">
            <summary>Type stub de AForge.CommunicationBufferEventArgs</summary>
        </member>
        <member name="M:AForge.Fakes.StubCommunicationBufferEventArgs.#ctor(System.Byte[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubCommunicationBufferEventArgs.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Fakes.StubCommunicationBufferEventArgs.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Fakes.StubCommunicationBufferEventArgs.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCommunicationBufferEventArgs</summary>
        </member>
        <member name="P:AForge.Fakes.StubCommunicationBufferEventArgs.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubCommunicationBufferEventArgs.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Fakes.StubConnectionFailedException">
            <summary>Type stub de AForge.ConnectionFailedException</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubConnectionFailedException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubConnectionFailedException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConnectionFailedException</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionFailedException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionFailedException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionFailedException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:AForge.Fakes.StubConnectionLostException">
            <summary>Type stub de AForge.ConnectionLostException</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubConnectionLostException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubConnectionLostException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConnectionLostException</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:AForge.Fakes.StubConnectionLostException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Fakes.StubConnectionLostException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Fakes.StubConnectionLostException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:AForge.Fakes.StubDeviceBusyException">
            <summary>Type stub de AForge.DeviceBusyException</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubDeviceBusyException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubDeviceBusyException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDeviceBusyException</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceBusyException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceBusyException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceBusyException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:AForge.Fakes.StubDeviceErrorException">
            <summary>Type stub de AForge.DeviceErrorException</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubDeviceErrorException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubDeviceErrorException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDeviceErrorException</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:AForge.Fakes.StubDeviceErrorException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Fakes.StubDeviceErrorException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Fakes.StubDeviceErrorException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:AForge.Fakes.StubNotConnectedException">
            <summary>Type stub de AForge.NotConnectedException</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubNotConnectedException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubNotConnectedException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNotConnectedException</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:AForge.Fakes.StubNotConnectedException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Fakes.StubNotConnectedException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Fakes.StubNotConnectedException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimKeyValuePairComparer`2">
            <summary>Type shim de Accord.Collections.KeyValuePairComparer`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.#ctor(Accord.Collections.KeyValuePairComparer{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.AllInstances.CompareKeyValuePairOfT0T1KeyValuePairOfT0T1">
            <summary>Définit le shim de KeyValuePairComparer`2.Compare(KeyValuePair`2&lt;!0,!1&gt; x, KeyValuePair`2&lt;!0,!1&gt; y)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.AllInstances.CompareT0T0">
            <summary>Définit le shim de KeyValuePairComparer`2.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.Bind(System.Collections.IComparer)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.Bind(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.CompareKeyValuePairOfT0T1KeyValuePairOfT0T1">
            <summary>Définit le shim de KeyValuePairComparer`2.Compare(KeyValuePair`2&lt;!0,!1&gt; x, KeyValuePair`2&lt;!0,!1&gt; y)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.CompareT0T0">
            <summary>Définit le shim de KeyValuePairComparer`2.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.Constructor">
            <summary>Définit le shim de KeyValuePairComparer`2.KeyValuePairComparer`2()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.ConstructorIComparerOfT0">
            <summary>Définit le shim de KeyValuePairComparer`2.KeyValuePairComparer`2(IComparer`1&lt;!0&gt; keyComparer)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimKeyValuePairComparer`2.DefaultGet">
            <summary>Définit le shim de KeyValuePairComparer`2.get_Default()</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2">
            <summary>Type shim de Accord.Collections.ReadOnlyKeyedCollection`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.#ctor(Accord.Collections.ReadOnlyKeyedCollection{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AddKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AddKeyValuePairOfT1T0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(KeyValuePair`2&lt;!1,!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AddT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.AddKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.AddKeyValuePairOfT1T0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(KeyValuePair`2&lt;!1,!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.AddT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.Clear">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.ContainsKeyT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.InsertInt32T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Insert(Int32 index, !1 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.IsReadOnlyGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.ItemGetT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.ItemSetT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.KeysGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.RemoveAtInt32">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.RemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.RemoveT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairTKeyTValueGetEnumerator">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.TryGetValueT0T1Out">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.AllInstances.ValuesGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Values()</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.IList)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.ICollection{`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IList{`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IReadOnlyCollection{`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IReadOnlyList{`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.Clear">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ConstructorIListOfT1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.ReadOnlyKeyedCollection`2(IList`1&lt;!1&gt; components)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ContainsKeyT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.InsertInt32T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Insert(Int32 index, !1 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.IsReadOnlyGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ItemGetT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ItemSetT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.KeysGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.RemoveAtInt32">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.RemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.RemoveT0">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairTKeyTValueGetEnumerator">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.TryGetValueT0T1Out">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimReadOnlyKeyedCollection`2.ValuesGet">
            <summary>Définit le shim de ReadOnlyKeyedCollection`2.get_Values()</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTree`1">
            <summary>Type shim de Accord.Collections.RedBlackTree`1</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.#ctor(Accord.Collections.RedBlackTree{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AddRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Add(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AddT0">
            <summary>Définit le shim de RedBlackTree`1.Add(!0 item)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.AddRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Add(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.AddT0">
            <summary>Définit le shim de RedBlackTree`1.Add(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.Clear">
            <summary>Définit le shim de RedBlackTree`1.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.ComparerGet">
            <summary>Définit le shim de RedBlackTree`1.get_Comparer()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.ContainsRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Contains(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.ContainsT0">
            <summary>Définit le shim de RedBlackTree`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.CopyToRedBlackTreeNodeOfT0ArrayInt32">
            <summary>Définit le shim de RedBlackTree`1.CopyTo(RedBlackTreeNode`1&lt;!0&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Définit le shim de RedBlackTree`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.CountGet">
            <summary>Définit le shim de RedBlackTree`1.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindGreaterThanRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindGreaterThan(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindGreaterThanT0">
            <summary>Définit le shim de RedBlackTree`1.FindGreaterThan(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindLessThanOrEqualToRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThanOrEqualTo(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindLessThanOrEqualToT0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThanOrEqualTo(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindLessThanRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThan(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindLessThanT0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThan(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.FindT0">
            <summary>Définit le shim de RedBlackTree`1.Find(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.GetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.GetNextNodeRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.GetNextNode(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.GetPreviousNodeRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.GetPreviousNode(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.IsReadOnlyGet">
            <summary>Définit le shim de RedBlackTree`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.Max">
            <summary>Définit le shim de RedBlackTree`1.Max()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.Min">
            <summary>Définit le shim de RedBlackTree`1.Min()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.RemoveRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Remove(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.RemoveT0">
            <summary>Définit le shim de RedBlackTree`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.ResortRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Resort(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.RootGet">
            <summary>Définit le shim de RedBlackTree`1.get_Root()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.SystemCollectionsGenericICollectionAccordCollectionsRedBlackTreeNodeTRemoveRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;Accord.Collections.RedBlackTreeNode&lt;T&gt;&gt;.Remove(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.check">
            <summary>Définit le shim de RedBlackTree`1.check()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.check_nodeRedBlackTreeNodeOfT0Int32Ref">
            <summary>Définit le shim de RedBlackTree`1.check_node(RedBlackTreeNode`1&lt;!0&gt; n, Int32&amp; nblack)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.rotate_leftRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.rotate_left(RedBlackTreeNode`1&lt;!0&gt; p)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.AllInstances.rotate_rightRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.rotate_right(RedBlackTreeNode`1&lt;!0&gt; p)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.Bind(System.Collections.Generic.ICollection{Accord.Collections.RedBlackTreeNode{`0}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.Bind(System.Collections.Generic.IEnumerable{Accord.Collections.RedBlackTreeNode{`0}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.Clear">
            <summary>Définit le shim de RedBlackTree`1.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ComparerGet">
            <summary>Définit le shim de RedBlackTree`1.get_Comparer()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.Constructor">
            <summary>Définit le shim de RedBlackTree`1.RedBlackTree`1()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ConstructorBoolean">
            <summary>Définit le shim de RedBlackTree`1.RedBlackTree`1(Boolean allowDuplicates)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ConstructorIComparerOfT0">
            <summary>Définit le shim de RedBlackTree`1.RedBlackTree`1(IComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ConstructorIComparerOfT0Boolean">
            <summary>Définit le shim de RedBlackTree`1.RedBlackTree`1(IComparer`1&lt;!0&gt; comparer, Boolean allowDuplicates)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ContainsRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Contains(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ContainsT0">
            <summary>Définit le shim de RedBlackTree`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.CopyToRedBlackTreeNodeOfT0ArrayInt32">
            <summary>Définit le shim de RedBlackTree`1.CopyTo(RedBlackTreeNode`1&lt;!0&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.CopyToT0ArrayInt32">
            <summary>Définit le shim de RedBlackTree`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.CountGet">
            <summary>Définit le shim de RedBlackTree`1.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindGreaterThanRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindGreaterThan(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindGreaterThanT0">
            <summary>Définit le shim de RedBlackTree`1.FindGreaterThan(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindLessThanOrEqualToRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThanOrEqualTo(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindLessThanOrEqualToT0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThanOrEqualTo(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindLessThanRedBlackTreeNodeOfT0T0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThan(RedBlackTreeNode`1&lt;!0&gt; node, !0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindLessThanT0">
            <summary>Définit le shim de RedBlackTree`1.FindLessThan(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.FindT0">
            <summary>Définit le shim de RedBlackTree`1.Find(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.GetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.GetNextNodeRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.GetNextNode(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.GetPreviousNodeRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.GetPreviousNode(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.IsReadOnlyGet">
            <summary>Définit le shim de RedBlackTree`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.Max">
            <summary>Définit le shim de RedBlackTree`1.Max()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.Min">
            <summary>Définit le shim de RedBlackTree`1.Min()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.RemoveRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Remove(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.RemoveT0">
            <summary>Définit le shim de RedBlackTree`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.ResortRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.Resort(RedBlackTreeNode`1&lt;!0&gt; node)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.RootGet">
            <summary>Définit le shim de RedBlackTree`1.get_Root()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.SystemCollectionsGenericICollectionAccordCollectionsRedBlackTreeNodeTRemoveRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;Accord.Collections.RedBlackTreeNode&lt;T&gt;&gt;.Remove(RedBlackTreeNode`1&lt;!0&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de RedBlackTree`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.check">
            <summary>Définit le shim de RedBlackTree`1.check()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.check_nodeRedBlackTreeNodeOfT0Int32Ref">
            <summary>Définit le shim de RedBlackTree`1.check_node(RedBlackTreeNode`1&lt;!0&gt; n, Int32&amp; nblack)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.rotate_leftRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.rotate_left(RedBlackTreeNode`1&lt;!0&gt; p)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`1.rotate_rightRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTree`1.rotate_right(RedBlackTreeNode`1&lt;!0&gt; p)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTree`2">
            <summary>Type shim de Accord.Collections.RedBlackTree`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.#ctor(Accord.Collections.RedBlackTree{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTree`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.Bind(System.Collections.Generic.ICollection{Accord.Collections.RedBlackTreeNode{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTree`2.Bind(System.Collections.Generic.IEnumerable{Accord.Collections.RedBlackTreeNode{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`2.Constructor">
            <summary>Définit le shim de RedBlackTree`2.RedBlackTree`2()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`2.ConstructorBoolean">
            <summary>Définit le shim de RedBlackTree`2.RedBlackTree`2(Boolean allowDuplicates)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`2.ConstructorIComparerOfKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTree`2.RedBlackTree`2(IComparer`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; comparer)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTree`2.ConstructorIComparerOfKeyValuePairOfT0T1Boolean">
            <summary>Définit le shim de RedBlackTree`2.RedBlackTree`2(IComparer`1&lt;KeyValuePair`2&lt;!0,!1&gt;&gt; comparer, Boolean allowDuplicates)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2">
            <summary>Type shim de Accord.Collections.RedBlackTreeDictionary`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.#ctor(Accord.Collections.RedBlackTreeDictionary{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AddKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AddT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.AddKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.AddT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.Clear">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.ContainsKeyT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de RedBlackTreeDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.CountGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.GetEnumerator">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.GetNextT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetNext(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.GetPreviousT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetPrevious(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.IsReadOnlyGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.ItemGetT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.ItemSetT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.KeysGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.Max">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Max()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.Min">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Min()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.RemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.RemoveT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de RedBlackTreeDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.TryGetNextT0KeyValuePairOfT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetNext(!0 key, KeyValuePair`2&lt;!0,!1&gt;&amp; next)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.TryGetPreviousT0KeyValuePairOfT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetPrevious(!0 key, KeyValuePair`2&lt;!0,!1&gt;&amp; prev)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.ValuesGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.AllInstances.initIComparerOfT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.init(IComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Clear">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Constructor">
            <summary>Définit le shim de RedBlackTreeDictionary`2.RedBlackTreeDictionary`2()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ConstructorIComparerOfT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.RedBlackTreeDictionary`2(IComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ContainsKeyT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de RedBlackTreeDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.CountGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.GetEnumerator">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.GetNextT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetNext(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.GetPreviousT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.GetPrevious(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.IsReadOnlyGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ItemGetT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ItemSetT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.KeysGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Max">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Max()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.Min">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Min()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.RemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.RemoveT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de RedBlackTreeDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.TryGetNextT0KeyValuePairOfT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetNext(!0 key, KeyValuePair`2&lt;!0,!1&gt;&amp; next)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.TryGetPreviousT0KeyValuePairOfT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetPrevious(!0 key, KeyValuePair`2&lt;!0,!1&gt;&amp; prev)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.TryGetValueT0T1Out">
            <summary>Définit le shim de RedBlackTreeDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.ValuesGet">
            <summary>Définit le shim de RedBlackTreeDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeDictionary`2.initIComparerOfT0">
            <summary>Définit le shim de RedBlackTreeDictionary`2.init(IComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeNode`1">
            <summary>Type shim de Accord.Collections.RedBlackTreeNode`1</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.#ctor(Accord.Collections.RedBlackTreeNode{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ColorGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Color()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ColorSetRedBlackTreeNodeType">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Color(RedBlackTreeNodeType value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.LeftGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Left()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.LeftSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Left(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ParentGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Parent()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ParentSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Parent(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.RightGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Right()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.RightSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Right(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ValueGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Value()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.AllInstances.ValueSetT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Value(!0 value)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ColorGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Color()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ColorSetRedBlackTreeNodeType">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Color(RedBlackTreeNodeType value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.Constructor">
            <summary>Définit le shim de RedBlackTreeNode`1.RedBlackTreeNode`1()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ConstructorT0">
            <summary>Définit le shim de RedBlackTreeNode`1.RedBlackTreeNode`1(!0 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.LeftGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Left()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.LeftSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Left(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ParentGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Parent()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ParentSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Parent(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.RightGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Right()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.RightSetRedBlackTreeNodeOfT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Right(RedBlackTreeNode`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ValueGet">
            <summary>Définit le shim de RedBlackTreeNode`1.get_Value()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`1.ValueSetT0">
            <summary>Définit le shim de RedBlackTreeNode`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeNode`2">
            <summary>Type shim de Accord.Collections.RedBlackTreeNode`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.#ctor(Accord.Collections.RedBlackTreeNode{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.Constructor">
            <summary>Définit le shim de RedBlackTreeNode`2.RedBlackTreeNode`2()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.ConstructorKeyValuePairOfT0T1">
            <summary>Définit le shim de RedBlackTreeNode`2.RedBlackTreeNode`2(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimRedBlackTreeNode`2.ConstructorT0T1">
            <summary>Définit le shim de RedBlackTreeNode`2.RedBlackTreeNode`2(!0 key, !1 value)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimTwoWayDictionary`2">
            <summary>Type shim de Accord.Collections.TwoWayDictionary`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.#ctor(Accord.Collections.TwoWayDictionary{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AddT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.AddT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.Clear">
            <summary>Définit le shim de TwoWayDictionary`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ContainsKeyT0">
            <summary>Définit le shim de TwoWayDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.CountGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.GetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.IsReadOnlyGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ItemGetT0">
            <summary>Définit le shim de TwoWayDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ItemSetT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.KeysGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.KeysSystemCollectionsGenericIReadOnlyDictionaryTFirstTSecondget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TFirst,TSecond&gt;.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.OnDeserializedStreamingContext">
            <summary>Définit le shim de TwoWayDictionary`2.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.RemoveT0">
            <summary>Définit le shim de TwoWayDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ReverseGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Reverse()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondAddKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondCopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondRemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>Définit le shim de TwoWayDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ValuesGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ValuesSystemCollectionsGenericIReadOnlyDictionaryTFirstTSecondget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TFirst,TSecond&gt;.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.IDictionary)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Bind(System.Collections.Generic.IReadOnlyDictionary{`0,`1})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Clear">
            <summary>Définit le shim de TwoWayDictionary`2.Clear()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.Constructor">
            <summary>Définit le shim de TwoWayDictionary`2.TwoWayDictionary`2()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ConstructorIDictionaryOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.TwoWayDictionary`2(IDictionary`2&lt;!0,!1&gt; dictionary)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ConstructorInt32">
            <summary>Définit le shim de TwoWayDictionary`2.TwoWayDictionary`2(Int32 capacity)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ContainsKeyT0">
            <summary>Définit le shim de TwoWayDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.CountGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.GetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.IsReadOnlyGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ItemGetT0">
            <summary>Définit le shim de TwoWayDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ItemSetT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ItemSystemCollectionsIDictionarygetObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.KeysGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.KeysSystemCollectionsGenericIReadOnlyDictionaryTFirstTSecondget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TFirst,TSecond&gt;.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.KeysSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.OnDeserializedStreamingContext">
            <summary>Définit le shim de TwoWayDictionary`2.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.RemoveT0">
            <summary>Définit le shim de TwoWayDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ReverseGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Reverse()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SyncRootSystemCollectionsICollectionget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondAddKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondContainsKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondCopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTFirstTSecondRemoveKeyValuePairOfT0T1">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TFirst,TSecond&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsIDictionaryContainsObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsIDictionaryRemoveObject">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.TryGetValueT0T1Out">
            <summary>Définit le shim de TwoWayDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ValuesGet">
            <summary>Définit le shim de TwoWayDictionary`2.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ValuesSystemCollectionsGenericIReadOnlyDictionaryTFirstTSecondget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.Generic.IReadOnlyDictionary&lt;TFirst,TSecond&gt;.get_Values()</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.ShimTwoWayDictionary`2.ValuesSystemCollectionsIDictionaryget">
            <summary>Définit le shim de TwoWayDictionary`2.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubKeyValuePairComparer`2">
            <summary>Type stub de Accord.Collections.KeyValuePairComparer`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubKeyValuePairComparer`2.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubKeyValuePairComparer`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubKeyValuePairComparer`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubKeyValuePairComparer`2.Compare(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Définit le stub de KeyValuePairComparer`2.Compare(KeyValuePair`2&lt;!0,!1&gt; x, KeyValuePair`2&lt;!0,!1&gt; y)</summary>
        </member>
        <member name="F:Accord.Collections.Fakes.StubKeyValuePairComparer`2.CompareKeyValuePairOfT0T1KeyValuePairOfT0T1">
            <summary>Définit le stub de KeyValuePairComparer`2.Compare(KeyValuePair`2&lt;!0,!1&gt; x, KeyValuePair`2&lt;!0,!1&gt; y)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubKeyValuePairComparer`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubKeyValuePairComparer</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubKeyValuePairComparer`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubKeyValuePairComparer`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2">
            <summary>Type stub de Accord.Collections.ReadOnlyKeyedCollection`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.#ctor(System.Collections.Generic.IList{`1})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.GetKeyForItem(`1)">
            <summary>Définit le stub de ReadOnlyKeyedCollection`2.GetKeyForItem(!1 item)</summary>
        </member>
        <member name="F:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.GetKeyForItemT1">
            <summary>Définit le stub de ReadOnlyKeyedCollection`2.GetKeyForItem(!1 item)</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubReadOnlyKeyedCollection</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubReadOnlyKeyedCollection`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubRedBlackTree`1">
            <summary>Type stub de Accord.Collections.RedBlackTree`1</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`1.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`1.#ctor(System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`1.#ctor(System.Collections.Generic.IComparer{`0},System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRedBlackTree</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubRedBlackTree`2">
            <summary>Type stub de Accord.Collections.RedBlackTree`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`2.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`2.#ctor(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`2.#ctor(System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`2.#ctor(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{`0,`1}},System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTree`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRedBlackTree</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTree`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2">
            <summary>Type stub de Accord.Collections.RedBlackTreeDictionary`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRedBlackTreeDictionary</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeDictionary`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubRedBlackTreeNode`1">
            <summary>Type stub de Accord.Collections.RedBlackTreeNode`1</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`1.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`1.#ctor(`0)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRedBlackTreeNode</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Collections.Fakes.StubRedBlackTreeNode`2">
            <summary>Type stub de Accord.Collections.RedBlackTreeNode`2</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`2.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`2.#ctor(`0,`1)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Collections.Fakes.StubRedBlackTreeNode`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRedBlackTreeNode</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Collections.Fakes.StubRedBlackTreeNode`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Fakes.ShimConvergenceException">
            <summary>Type shim de Accord.ConvergenceException</summary>
        </member>
        <member name="M:Accord.Fakes.ShimConvergenceException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimConvergenceException.#ctor(Accord.ConvergenceException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimConvergenceException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimConvergenceException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimConvergenceException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimConvergenceException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimConvergenceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Fakes.ShimConvergenceException.Constructor">
            <summary>Définit le shim de ConvergenceException.ConvergenceException()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimConvergenceException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de ConvergenceException.ConvergenceException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimConvergenceException.ConstructorString">
            <summary>Définit le shim de ConvergenceException.ConvergenceException(String message)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimConvergenceException.ConstructorStringException">
            <summary>Définit le shim de ConvergenceException.ConvergenceException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimDimensionMismatchException">
            <summary>Type shim de Accord.DimensionMismatchException</summary>
        </member>
        <member name="M:Accord.Fakes.ShimDimensionMismatchException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimDimensionMismatchException.#ctor(Accord.DimensionMismatchException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimDimensionMismatchException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimDimensionMismatchException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimDimensionMismatchException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimDimensionMismatchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.Constructor">
            <summary>Définit le shim de DimensionMismatchException.DimensionMismatchException()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de DimensionMismatchException.DimensionMismatchException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.ConstructorString">
            <summary>Définit le shim de DimensionMismatchException.DimensionMismatchException(String paramName)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.ConstructorStringException">
            <summary>Définit le shim de DimensionMismatchException.DimensionMismatchException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimDimensionMismatchException.ConstructorStringString">
            <summary>Définit le shim de DimensionMismatchException.DimensionMismatchException(String paramName, String message)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimExtensionMethods">
            <summary>Type shim de Accord.ExtensionMethods</summary>
        </member>
        <member name="M:Accord.Fakes.ShimExtensionMethods.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.AddDataColumnCollectionStringArray">
            <summary>Définit le shim de ExtensionMethods.Add(DataColumnCollection collection, String[] columnNames)</summary>
        </member>
        <member name="M:Accord.Fakes.ShimExtensionMethods.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimExtensionMethods.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimExtensionMethods.DeepCloneOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Définit le shim de ExtensionMethods.DeepClone(!!0 list)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.DeserializeAnyVersionBinaryFormatterStream">
            <summary>Définit le shim de ExtensionMethods.DeserializeAnyVersion(BinaryFormatter formatter, Stream stream)</summary>
        </member>
        <member name="M:Accord.Fakes.ShimExtensionMethods.GetDescriptionOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String})">
            <summary>Définit le shim de ExtensionMethods.GetDescription(!!0 source)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.GetPositionStreamReader">
            <summary>Définit le shim de ExtensionMethods.GetPosition(StreamReader reader)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.StaticConstructor">
            <summary>Définit le shim de ExtensionMethods.ExtensionMethods()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimExtensionMethods.resolveObjectResolveEventArgs">
            <summary>Définit le shim de ExtensionMethods.resolve(Object sender, ResolveEventArgs args)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimIntegerAttribute">
            <summary>Type shim de Accord.IntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimIntegerAttribute.#ctor(Accord.IntegerAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimIntegerAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.AllInstances.MaximumGet">
            <summary>Définit le shim de IntegerAttribute.get_Maximum()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.AllInstances.MinimumGet">
            <summary>Définit le shim de IntegerAttribute.get_Minimum()</summary>
        </member>
        <member name="M:Accord.Fakes.ShimIntegerAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimIntegerAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.Constructor">
            <summary>Définit le shim de IntegerAttribute.IntegerAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.ConstructorInt32Int32">
            <summary>Définit le shim de IntegerAttribute.IntegerAttribute(Int32 minimum, Int32 maximum)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.MaximumGet">
            <summary>Définit le shim de IntegerAttribute.get_Maximum()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimIntegerAttribute.MinimumGet">
            <summary>Définit le shim de IntegerAttribute.get_Minimum()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNegativeAttribute">
            <summary>Type shim de Accord.NegativeAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeAttribute.#ctor(Accord.NegativeAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNegativeAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeAttribute.Constructor">
            <summary>Définit le shim de NegativeAttribute.NegativeAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeAttribute.ConstructorDouble">
            <summary>Définit le shim de NegativeAttribute.NegativeAttribute(Double maximum)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNegativeIntegerAttribute">
            <summary>Type shim de Accord.NegativeIntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeIntegerAttribute.#ctor(Accord.NegativeIntegerAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNegativeIntegerAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeIntegerAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNegativeIntegerAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeIntegerAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeIntegerAttribute.Constructor">
            <summary>Définit le shim de NegativeIntegerAttribute.NegativeIntegerAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNegativeIntegerAttribute.ConstructorInt32">
            <summary>Définit le shim de NegativeIntegerAttribute.NegativeIntegerAttribute(Int32 maximum)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonPositiveDefiniteMatrixException">
            <summary>Type shim de Accord.NonPositiveDefiniteMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.#ctor(Accord.NonPositiveDefiniteMatrixException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.Constructor">
            <summary>Définit le shim de NonPositiveDefiniteMatrixException.NonPositiveDefiniteMatrixException()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de NonPositiveDefiniteMatrixException.NonPositiveDefiniteMatrixException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.ConstructorString">
            <summary>Définit le shim de NonPositiveDefiniteMatrixException.NonPositiveDefiniteMatrixException(String message)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonPositiveDefiniteMatrixException.ConstructorStringException">
            <summary>Définit le shim de NonPositiveDefiniteMatrixException.NonPositiveDefiniteMatrixException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonSymmetricMatrixException">
            <summary>Type shim de Accord.NonSymmetricMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonSymmetricMatrixException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonSymmetricMatrixException.#ctor(Accord.NonSymmetricMatrixException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonSymmetricMatrixException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonSymmetricMatrixException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonSymmetricMatrixException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonSymmetricMatrixException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonSymmetricMatrixException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonSymmetricMatrixException.Constructor">
            <summary>Définit le shim de NonSymmetricMatrixException.NonSymmetricMatrixException()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonSymmetricMatrixException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de NonSymmetricMatrixException.NonSymmetricMatrixException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonSymmetricMatrixException.ConstructorString">
            <summary>Définit le shim de NonSymmetricMatrixException.NonSymmetricMatrixException(String message)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonSymmetricMatrixException.ConstructorStringException">
            <summary>Définit le shim de NonSymmetricMatrixException.NonSymmetricMatrixException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonnegativeAttribute">
            <summary>Type shim de Accord.NonnegativeAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeAttribute.#ctor(Accord.NonnegativeAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonnegativeAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonnegativeAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonnegativeAttribute.Constructor">
            <summary>Définit le shim de NonnegativeAttribute.NonnegativeAttribute()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonnegativeIntegerAttribute">
            <summary>Type shim de Accord.NonnegativeIntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeIntegerAttribute.#ctor(Accord.NonnegativeIntegerAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonnegativeIntegerAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeIntegerAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonnegativeIntegerAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonnegativeIntegerAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonnegativeIntegerAttribute.Constructor">
            <summary>Définit le shim de NonnegativeIntegerAttribute.NonnegativeIntegerAttribute()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonpositiveAttribute">
            <summary>Type shim de Accord.NonpositiveAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveAttribute.#ctor(Accord.NonpositiveAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonpositiveAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonpositiveAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonpositiveAttribute.Constructor">
            <summary>Définit le shim de NonpositiveAttribute.NonpositiveAttribute()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonpositiveIntegerAttribute">
            <summary>Type shim de Accord.NonpositiveIntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveIntegerAttribute.#ctor(Accord.NonpositiveIntegerAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimNonpositiveIntegerAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveIntegerAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimNonpositiveIntegerAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonpositiveIntegerAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimNonpositiveIntegerAttribute.Constructor">
            <summary>Définit le shim de NonpositiveIntegerAttribute.NonpositiveIntegerAttribute()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimPositiveAttribute">
            <summary>Type shim de Accord.PositiveAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveAttribute.#ctor(Accord.PositiveAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimPositiveAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveAttribute.Constructor">
            <summary>Définit le shim de PositiveAttribute.PositiveAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveAttribute.ConstructorDouble">
            <summary>Définit le shim de PositiveAttribute.PositiveAttribute(Double minimum)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimPositiveIntegerAttribute">
            <summary>Type shim de Accord.PositiveIntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveIntegerAttribute.#ctor(Accord.PositiveIntegerAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimPositiveIntegerAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveIntegerAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimPositiveIntegerAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveIntegerAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveIntegerAttribute.Constructor">
            <summary>Définit le shim de PositiveIntegerAttribute.PositiveIntegerAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimPositiveIntegerAttribute.ConstructorInt32">
            <summary>Définit le shim de PositiveIntegerAttribute.PositiveIntegerAttribute(Int32 minimum)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimRealAttribute">
            <summary>Type shim de Accord.RealAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimRealAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimRealAttribute.#ctor(Accord.RealAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimRealAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.AllInstances.MaximumGet">
            <summary>Définit le shim de RealAttribute.get_Maximum()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.AllInstances.MinimumGet">
            <summary>Définit le shim de RealAttribute.get_Minimum()</summary>
        </member>
        <member name="M:Accord.Fakes.ShimRealAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimRealAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.Constructor">
            <summary>Définit le shim de RealAttribute.RealAttribute()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.ConstructorDoubleDouble">
            <summary>Définit le shim de RealAttribute.RealAttribute(Double minimum, Double maximum)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.MaximumGet">
            <summary>Définit le shim de RealAttribute.get_Maximum()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimRealAttribute.MinimumGet">
            <summary>Définit le shim de RealAttribute.get_Minimum()</summary>
        </member>
        <member name="T:Accord.Fakes.ShimSingularMatrixException">
            <summary>Type shim de Accord.SingularMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.ShimSingularMatrixException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimSingularMatrixException.#ctor(Accord.SingularMatrixException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimSingularMatrixException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimSingularMatrixException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimSingularMatrixException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimSingularMatrixException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimSingularMatrixException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Fakes.ShimSingularMatrixException.Constructor">
            <summary>Définit le shim de SingularMatrixException.SingularMatrixException()</summary>
        </member>
        <member name="P:Accord.Fakes.ShimSingularMatrixException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de SingularMatrixException.SingularMatrixException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimSingularMatrixException.ConstructorString">
            <summary>Définit le shim de SingularMatrixException.SingularMatrixException(String message)</summary>
        </member>
        <member name="P:Accord.Fakes.ShimSingularMatrixException.ConstructorStringException">
            <summary>Définit le shim de SingularMatrixException.SingularMatrixException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Accord.Fakes.ShimUnitAttribute">
            <summary>Type shim de Accord.UnitAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.ShimUnitAttribute.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimUnitAttribute.#ctor(Accord.UnitAttribute)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Fakes.ShimUnitAttribute.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Fakes.ShimUnitAttribute.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Fakes.ShimUnitAttribute.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimUnitAttribute.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Fakes.ShimUnitAttribute.Constructor">
            <summary>Définit le shim de UnitAttribute.UnitAttribute()</summary>
        </member>
        <member name="T:Accord.Fakes.StubConvergenceException">
            <summary>Type stub de Accord.ConvergenceException</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubConvergenceException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubConvergenceException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConvergenceException</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Fakes.StubConvergenceException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Fakes.StubConvergenceException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Fakes.StubConvergenceException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Fakes.StubDimensionMismatchException">
            <summary>Type stub de Accord.DimensionMismatchException</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.#ctor(System.String,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubDimensionMismatchException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubDimensionMismatchException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDimensionMismatchException</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.Message">
            <summary>Définit le stub de ArgumentException.get_Message()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.MessageGet">
            <summary>Définit le stub de ArgumentException.get_Message()</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.ParamName">
            <summary>Définit le stub de ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.ParamNameGet">
            <summary>Définit le stub de ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Fakes.StubDimensionMismatchException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Fakes.StubDimensionMismatchException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Fakes.StubDimensionMismatchException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Fakes.StubIntegerAttribute">
            <summary>Type stub de Accord.IntegerAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.#ctor(System.Int32,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Fakes.StubIntegerAttribute.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.Equals(System.Object)">
            <summary>Définit le stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.EqualsObject">
            <summary>Définit le stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.FormatErrorMessage(System.String)">
            <summary>Définit le stub de RangeAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.FormatErrorMessageString">
            <summary>Définit le stub de RangeAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.GetHashCode">
            <summary>Définit le stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.GetHashCode01">
            <summary>Définit le stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubIntegerAttribute</summary>
        </member>
        <member name="P:Accord.Fakes.StubIntegerAttribute.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubIntegerAttribute.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.IsDefaultAttribute">
            <summary>Définit le stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.IsDefaultAttribute01">
            <summary>Définit le stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.IsValid(System.Object)">
            <summary>Définit le stub de RangeAttribute.IsValid(Object value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Définit le stub de ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.IsValidObject">
            <summary>Définit le stub de RangeAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.IsValidObjectValidationContext">
            <summary>Définit le stub de ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:Accord.Fakes.StubIntegerAttribute.Match(System.Object)">
            <summary>Définit le stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.MatchObject">
            <summary>Définit le stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Accord.Fakes.StubIntegerAttribute.RequiresValidationContext">
            <summary>Définit le stub de ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.RequiresValidationContextGet">
            <summary>Définit le stub de ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="P:Accord.Fakes.StubIntegerAttribute.TypeId">
            <summary>Définit le stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Accord.Fakes.StubIntegerAttribute.TypeIdGet">
            <summary>Définit le stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Accord.Fakes.StubNonPositiveDefiniteMatrixException">
            <summary>Type stub de Accord.NonPositiveDefiniteMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubNonPositiveDefiniteMatrixException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubNonPositiveDefiniteMatrixException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonPositiveDefiniteMatrixException</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonPositiveDefiniteMatrixException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonPositiveDefiniteMatrixException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonPositiveDefiniteMatrixException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Fakes.StubNonSymmetricMatrixException">
            <summary>Type stub de Accord.NonSymmetricMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubNonSymmetricMatrixException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubNonSymmetricMatrixException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonSymmetricMatrixException</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Fakes.StubNonSymmetricMatrixException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Fakes.StubNonSymmetricMatrixException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Fakes.StubNonSymmetricMatrixException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Fakes.StubRealAttribute">
            <summary>Type stub de Accord.RealAttribute</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.#ctor(System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Fakes.StubRealAttribute.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.Equals(System.Object)">
            <summary>Définit le stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.EqualsObject">
            <summary>Définit le stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.FormatErrorMessage(System.String)">
            <summary>Définit le stub de RangeAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.FormatErrorMessageString">
            <summary>Définit le stub de RangeAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.GetHashCode">
            <summary>Définit le stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.GetHashCode01">
            <summary>Définit le stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRealAttribute</summary>
        </member>
        <member name="P:Accord.Fakes.StubRealAttribute.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubRealAttribute.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.IsDefaultAttribute">
            <summary>Définit le stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.IsDefaultAttribute01">
            <summary>Définit le stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.IsValid(System.Object)">
            <summary>Définit le stub de RangeAttribute.IsValid(Object value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Définit le stub de ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.IsValidObject">
            <summary>Définit le stub de RangeAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.IsValidObjectValidationContext">
            <summary>Définit le stub de ValidationAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:Accord.Fakes.StubRealAttribute.Match(System.Object)">
            <summary>Définit le stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.MatchObject">
            <summary>Définit le stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Accord.Fakes.StubRealAttribute.RequiresValidationContext">
            <summary>Définit le stub de ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.RequiresValidationContextGet">
            <summary>Définit le stub de ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="P:Accord.Fakes.StubRealAttribute.TypeId">
            <summary>Définit le stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Accord.Fakes.StubRealAttribute.TypeIdGet">
            <summary>Définit le stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Accord.Fakes.StubSingularMatrixException">
            <summary>Type stub de Accord.SingularMatrixException</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubSingularMatrixException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubSingularMatrixException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubSingularMatrixException</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Fakes.StubSingularMatrixException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Fakes.StubSingularMatrixException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Fakes.StubSingularMatrixException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
    </members>
</doc>

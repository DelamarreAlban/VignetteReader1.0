<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Extensions.Statistics.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions">
            <summary>Type shim de Accord.Extensions.Statistics.MedianExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.MedianByOf2IListOfM1FuncOfM1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``1},System.Func{``1,``0},``1})">
            <summary>Définit le shim de MedianExtensions.MedianBy(IList`1&lt;!!1&gt; collection, Func`2&lt;!!1,!!0&gt; selector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimMedianExtensions.MedianOf1IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0})">
            <summary>Définit le shim de MedianExtensions.Median(IList`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions">
            <summary>Type shim de Accord.Extensions.Statistics.NthOrderStatisticExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.GetNthSmallestOf1IListOfM0Int32Int32Int32Random``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32,System.Random,``0})">
            <summary>Définit le shim de NthOrderStatisticExtensions.GetNthSmallest(IList`1&lt;!!0&gt; list, Int32 n, Int32 start, Int32 end, Random rnd)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.GetNthSmallestOf1IListOfM0Int32Random``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Random,``0})">
            <summary>Définit le shim de NthOrderStatisticExtensions.GetNthSmallest(IList`1&lt;!!0&gt; list, Int32 n, Random rnd)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.partitionOf1IListOfM0Int32Int32Random``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Random,System.Int32})">
            <summary>Définit le shim de NthOrderStatisticExtensions.partition(IList`1&lt;!!0&gt; list, Int32 start, Int32 end, Random rnd)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimNthOrderStatisticExtensions.swapOf1IListOfM0Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IList{``0},System.Int32,System.Int32})">
            <summary>Définit le shim de NthOrderStatisticExtensions.swap(IList`1&lt;!!0&gt; list, Int32 i, Int32 j)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimRunningAverage">
            <summary>Type shim de Accord.Extensions.Statistics.RunningAverage</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.AverageICollectionOfDoubleArray">
            <summary>Définit le shim de RunningAverage.Average(ICollection`1&lt;Double[]&gt; data)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageDecrementalIListOfDoubleActionOfInt32Double">
            <summary>Définit le shim de RunningAverage.RunningAverageDecremental(IList`1&lt;Double&gt; data, Action`2&lt;Int32,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageDecrementalIListOfDoubleArrayActionOfInt32DoubleArray">
            <summary>Définit le shim de RunningAverage.RunningAverageDecremental(IList`1&lt;Double[]&gt; data, Action`2&lt;Int32,Double[]&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageIncDecIListOfDoubleActionOfInt32DoubleDouble">
            <summary>Définit le shim de RunningAverage.RunningAverageIncDec(IList`1&lt;Double&gt; data, Action`3&lt;Int32,Double,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageIncDecIListOfDoubleArrayActionOfInt32DoubleArrayDoubleArray">
            <summary>Définit le shim de RunningAverage.RunningAverageIncDec(IList`1&lt;Double[]&gt; data, Action`3&lt;Int32,Double[],Double[]&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageIncrementalIListOfDoubleActionOfInt32Double">
            <summary>Définit le shim de RunningAverage.RunningAverageIncremental(IList`1&lt;Double&gt; data, Action`2&lt;Int32,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.RunningAverageIncrementalIListOfDoubleArrayActionOfInt32DoubleArray">
            <summary>Définit le shim de RunningAverage.RunningAverageIncremental(IList`1&lt;Double[]&gt; data, Action`2&lt;Int32,Double[]&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.UpdateAverageDecrementalDoubleArrayInt32DoubleArray">
            <summary>Définit le shim de RunningAverage.UpdateAverageDecremental(Double[] prevAverage, Int32 nSamples, Double[] sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.UpdateAverageDecrementalDoubleInt32Double">
            <summary>Définit le shim de RunningAverage.UpdateAverageDecremental(Double postAverage, Int32 nSamples, Double sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.UpdateAverageIncrementalDoubleArrayInt32DoubleArray">
            <summary>Définit le shim de RunningAverage.UpdateAverageIncremental(Double[] prevAverage, Int32 nSamples, Double[] sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningAverage.UpdateAverageIncrementalDoubleInt32Double">
            <summary>Définit le shim de RunningAverage.UpdateAverageIncremental(Double prevAverage, Int32 nSamples, Double sample)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimRunningVariance">
            <summary>Type shim de Accord.Extensions.Statistics.RunningVariance</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceDecrementalIListOfDoubleActionOfInt32DoubleDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceDecremental(IList`1&lt;Double&gt; data, Action`3&lt;Int32,Double,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceDecrementalIListOfDoubleArrayActionOfInt32DoubleArrayDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceDecremental(IList`1&lt;Double[]&gt; data, Action`3&lt;Int32,Double[],Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceIncDecIListOfDoubleActionOfInt32DoubleDoubleDoubleDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceIncDec(IList`1&lt;Double&gt; data, Action`5&lt;Int32,Double,Double,Double,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceIncDecIListOfDoubleArrayActionOfInt32DoubleArrayDoubleDoubleArrayDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceIncDec(IList`1&lt;Double[]&gt; data, Action`5&lt;Int32,Double[],Double,Double[],Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceIncrementalIListOfDoubleActionOfInt32DoubleDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceIncremental(IList`1&lt;Double&gt; data, Action`3&lt;Int32,Double,Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.RunningVarianceIncrementalIListOfDoubleArrayActionOfInt32DoubleArrayDouble">
            <summary>Définit le shim de RunningVariance.RunningVarianceIncremental(IList`1&lt;Double[]&gt; data, Action`3&lt;Int32,Double[],Double&gt; onCalculated)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.UpdateVarianceDecrementalDoubleArrayDoubleArrayDoubleInt32DoubleArray">
            <summary>Définit le shim de RunningVariance.UpdateVarianceDecremental(Double[] postAverage, Double[] average, Double postVariance, Int32 nSamples, Double[] sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.UpdateVarianceDecrementalDoubleDoubleDoubleInt32Double">
            <summary>Définit le shim de RunningVariance.UpdateVarianceDecremental(Double postAverage, Double average, Double postVariance, Int32 nSamples, Double sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.UpdateVarianceIncrementalDoubleArrayDoubleArrayDoubleInt32DoubleArray">
            <summary>Définit le shim de RunningVariance.UpdateVarianceIncremental(Double[] prevAverage, Double[] average, Double prevVariance, Int32 nSamples, Double[] sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.UpdateVarianceIncrementalDoubleDoubleDoubleInt32Double">
            <summary>Définit le shim de RunningVariance.UpdateVarianceIncremental(Double prevAverage, Double average, Double prevVariance, Int32 nSamples, Double sample)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.VarianceIEnumerableOfDouble">
            <summary>Définit le shim de RunningVariance.Variance(IEnumerable`1&lt;Double&gt; data)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningVariance.VarianceIEnumerableOfDoubleArray">
            <summary>Définit le shim de RunningVariance.Variance(IEnumerable`1&lt;Double[]&gt; data)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage">
            <summary>Type shim de Accord.Extensions.Statistics.RunningWeightedAverage</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.AverageIEnumerableOfDoubleArrayIEnumerableOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.Average(IEnumerable`1&lt;Double[]&gt; data, IEnumerable`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.AverageIEnumerableOfDoubleIEnumerableOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.Average(IEnumerable`1&lt;Double&gt; samples, IEnumerable`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageDecrementalIListOfDoubleActionOfInt32DoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageDecremental(IList`1&lt;Double&gt; data, Action`2&lt;Int32,Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageDecrementalIListOfDoubleArrayActionOfInt32DoubleArrayIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageDecremental(IList`1&lt;Double[]&gt; data, Action`2&lt;Int32,Double[]&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageIncDecIListOfDoubleActionOfInt32DoubleDoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageIncDec(IList`1&lt;Double&gt; data, Action`3&lt;Int32,Double,Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageIncDecIListOfDoubleArrayActionOfInt32DoubleArrayDoubleArrayIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageIncDec(IList`1&lt;Double[]&gt; data, Action`3&lt;Int32,Double[],Double[]&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageIncrementalIListOfDoubleActionOfInt32DoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageIncremental(IList`1&lt;Double&gt; data, Action`2&lt;Int32,Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.RunningAverageIncrementalIListOfDoubleArrayActionOfInt32DoubleArrayIListOfDouble">
            <summary>Définit le shim de RunningWeightedAverage.RunningAverageIncremental(IList`1&lt;Double[]&gt; data, Action`2&lt;Int32,Double[]&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.UpdateAverageDecrementalDoubleArrayInt32DoubleArrayDouble">
            <summary>Définit le shim de RunningWeightedAverage.UpdateAverageDecremental(Double[] prevAverage, Int32 nSamples, Double[] sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.UpdateAverageDecrementalDoubleDoubleDoubleDouble">
            <summary>Définit le shim de RunningWeightedAverage.UpdateAverageDecremental(Double postAverage, Double postWeightSum, Double sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.UpdateAverageIncrementalDoubleArrayInt32DoubleArrayDouble">
            <summary>Définit le shim de RunningWeightedAverage.UpdateAverageIncremental(Double[] prevAverage, Int32 nSamples, Double[] sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedAverage.UpdateAverageIncrementalDoubleDoubleDoubleDouble">
            <summary>Définit le shim de RunningWeightedAverage.UpdateAverageIncremental(Double prevAverage, Double prevWeightSum, Double sample, Double weight)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance">
            <summary>Type shim de Accord.Extensions.Statistics.RunningWeightedVariance</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceDecrementalIListOfDoubleActionOfInt32DoubleDoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceDecremental(IList`1&lt;Double&gt; samples, Action`3&lt;Int32,Double,Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceDecrementalIListOfDoubleArrayActionOfInt32DoubleArrayDoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceDecremental(IList`1&lt;Double[]&gt; samples, Action`3&lt;Int32,Double[],Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceIncDecIReadOnlyListOfDoubleActionOfInt32DoubleDoubleDoubleDoubleIListOfDoubleBoolean">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceIncDec(IReadOnlyList`1&lt;Double&gt; samples, Action`5&lt;Int32,Double,Double,Double,Double&gt; onCalculated, IList`1&lt;Double&gt; weights, Boolean returnSSE)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceIncDecIReadOnlyListOfDoubleArrayActionOfInt32DoubleArrayDoubleDoubleArrayDoubleIReadOnlyListOfDoubleBoolean">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceIncDec(IReadOnlyList`1&lt;Double[]&gt; samples, Action`5&lt;Int32,Double[],Double,Double[],Double&gt; onCalculated, IReadOnlyList`1&lt;Double&gt; weights, Boolean returnSSE)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceIncrementalIListOfDoubleActionOfInt32DoubleDoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceIncremental(IList`1&lt;Double&gt; samples, Action`3&lt;Int32,Double,Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.RunningVarianceIncrementalIListOfDoubleArrayActionOfInt32DoubleArrayDoubleIListOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.RunningVarianceIncremental(IList`1&lt;Double[]&gt; samples, Action`3&lt;Int32,Double[],Double&gt; onCalculated, IList`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.UpdateVarianceDecrementalDoubleRefDoubleRefDoubleRefDoubleDouble">
            <summary>Définit le shim de RunningWeightedVariance.UpdateVarianceDecremental(Double&amp; SSE, Double&amp; sumWeight, Double&amp; mean, Double sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.UpdateVarianceIncrementalDoubleRefDoubleRefDoubleRefDoubleDouble">
            <summary>Définit le shim de RunningWeightedVariance.UpdateVarianceIncremental(Double&amp; SSE, Double&amp; sumWeight, Double&amp; mean, Double sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.UpdateVarianceSumDecrementalDoubleRefDoubleRefDoubleArrayRefDoubleArrayDouble">
            <summary>Définit le shim de RunningWeightedVariance.UpdateVarianceSumDecremental(Double&amp; SSE, Double&amp; sumWeight, Double[]&amp; mean, Double[] sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.UpdateVarianceSumIncrementalDoubleRefDoubleRefDoubleArrayRefDoubleArrayDouble">
            <summary>Définit le shim de RunningWeightedVariance.UpdateVarianceSumIncremental(Double&amp; SSE, Double&amp; sumWeight, Double[]&amp; mean, Double[] sample, Double weight)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.VarianceIEnumerableOfDoubleArrayIEnumerableOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.Variance(IEnumerable`1&lt;Double[]&gt; samples, IEnumerable`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Fakes.ShimRunningWeightedVariance.VarianceIEnumerableOfDoubleIEnumerableOfDouble">
            <summary>Définit le shim de RunningWeightedVariance.Variance(IEnumerable`1&lt;Double&gt; samples, IEnumerable`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.ConstantAcceleration2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.#ctor(Accord.Extensions.Statistics.Filters.ConstantAcceleration2DModel)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.AllInstances.Clone">
            <summary>Définit le shim de ConstantAcceleration2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.AllInstances.EvaluateDoubleMdArray2">
            <summary>Définit le shim de ConstantAcceleration2DModel.Evaluate(Double[,] transitionMat)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.Clone">
            <summary>Définit le shim de ConstantAcceleration2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.Constructor">
            <summary>Définit le shim de ConstantAcceleration2DModel.ConstantAcceleration2DModel()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.EvaluateDoubleMdArray2">
            <summary>Définit le shim de ConstantAcceleration2DModel.Evaluate(Double[,] transitionMat)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.FromArrayDoubleArray">
            <summary>Définit le shim de ConstantAcceleration2DModel.FromArray(Double[] arr)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.GetPositionMeasurementMatrix">
            <summary>Définit le shim de ConstantAcceleration2DModel.GetPositionMeasurementMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.GetProcessNoiseDoubleDouble">
            <summary>Définit le shim de ConstantAcceleration2DModel.GetProcessNoise(Double noise, Double timeInterval)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.GetTransitionMatrixDouble">
            <summary>Définit le shim de ConstantAcceleration2DModel.GetTransitionMatrix(Double timeInterval)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantAcceleration2DModel.ToArrayConstantAcceleration2DModel">
            <summary>Définit le shim de ConstantAcceleration2DModel.ToArray(ConstantAcceleration2DModel modelState)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.ConstantVelocity2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.#ctor(Accord.Extensions.Statistics.Filters.ConstantVelocity2DModel)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.AllInstances.Clone">
            <summary>Définit le shim de ConstantVelocity2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.AllInstances.EvaluateDoubleMdArray2">
            <summary>Définit le shim de ConstantVelocity2DModel.Evaluate(Double[,] transitionMat)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.Clone">
            <summary>Définit le shim de ConstantVelocity2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.Constructor">
            <summary>Définit le shim de ConstantVelocity2DModel.ConstantVelocity2DModel()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.EvaluateDoubleMdArray2">
            <summary>Définit le shim de ConstantVelocity2DModel.Evaluate(Double[,] transitionMat)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.FromArrayDoubleArray">
            <summary>Définit le shim de ConstantVelocity2DModel.FromArray(Double[] arr)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.GetPositionMeasurementMatrix">
            <summary>Définit le shim de ConstantVelocity2DModel.GetPositionMeasurementMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.GetProcessNoiseDoubleDouble">
            <summary>Définit le shim de ConstantVelocity2DModel.GetProcessNoise(Double accelerationNoise, Double timeInterval)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.GetTransitionMatrixDouble">
            <summary>Définit le shim de ConstantVelocity2DModel.GetTransitionMatrix(Double timeInterval)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimConstantVelocity2DModel.ToArrayConstantVelocity2DModel">
            <summary>Définit le shim de ConstantVelocity2DModel.ToArray(ConstantVelocity2DModel modelState)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.DiscreteKalmanFilter`2</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.#ctor(Accord.Extensions.Statistics.Filters.DiscreteKalmanFilter{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances.CorrectDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.Correct(Double[] innovationVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances.CorrectDoubleArrayDoubleDoubleMdArray2">
            <summary>Définit le shim de DiscreteKalmanFilter`2.Correct(Double[] innovationVector, Double covarianceMixtureFactor, Double[,] innovationCovariance)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances.CorrectInternalDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances.correctDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.correct(Double[] innovationVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.AllInstances.predictInternalDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.ConstructorT0DoubleMdArray2Int32Int32FuncOfT0DoubleArrayFuncOfDoubleArrayT0FuncOfT1DoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.DiscreteKalmanFilter`2(!0 initialState, Double[,] initialStateError, Int32 measurementVectorDimension, Int32 controlVectorDimension, Func`2&lt;!0,Double[]&gt; stateConvertFunc, Func`2&lt;Double[],!0&gt; stateConvertBackFunc, Func`2&lt;!1,Double[]&gt; measurementConvertFunc)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.CorrectDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.Correct(Double[] innovationVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.CorrectDoubleArrayDoubleDoubleMdArray2">
            <summary>Définit le shim de DiscreteKalmanFilter`2.Correct(Double[] innovationVector, Double covarianceMixtureFactor, Double[,] innovationCovariance)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.CorrectInternalDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.correctDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.correct(Double[] innovationVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimDiscreteKalmanFilter`2.predictInternalDoubleArray">
            <summary>Définit le shim de DiscreteKalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.EntropyTrackerRemoval</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.RemoveOf1ListOfM0FuncOfM0DoubleDoubleDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Func{``0,System.Double},System.Double,System.Double,System.Boolean})">
            <summary>Définit le shim de EntropyTrackerRemoval.Remove(List`1&lt;!!0&gt; tracks, Func`2&lt;!!0,Double&gt; calculateEntropy, Double minEntropyDecrease, Double maxEntropyIncrease)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.RemoveOf3ListOfM0FuncOfM2DoubleArrayDoubleDouble``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Func{``2,System.Double[]},System.Double,System.Double,System.Boolean})">
            <summary>Définit le shim de EntropyTrackerRemoval.Remove(List`1&lt;!!0&gt; tracks, Func`2&lt;!!2,Double[]&gt; stateConverter, Double minEntropyDecrease, Double maxEntropyIncrease)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimEntropyTrackerRemoval.RemoveOf4ListOfM0DoubleDouble``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double,System.Double,System.Boolean})">
            <summary>Définit le shim de EntropyTrackerRemoval.Remove(List`1&lt;!!0&gt; tracks, Double minEntropyDecrease, Double maxEntropyIncrease)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.JPDAF</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.AddFiltersOf1ListOfM0DoubleMdArray2ActionOfInt32Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Action{System.Int32},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.AddFilters(List`1&lt;!!0&gt; particleFilters, Double[,] associationProbabilites, Action`1&lt;Int32&gt; particleFilterAddFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.AddFiltersOf1ListOfM0DoubleMdArray2FuncOfInt32M0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Func{System.Int32,``0},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.AddFilters(List`1&lt;!!0&gt; particleFilters, Double[,] associationProbabilites, Func`2&lt;Int32,!!0&gt; particleFilterCreatorFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.AddFiltersOf3ListOfM0DoubleMdArray2ActionOfInt32Double``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Action{System.Int32},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.AddFilters(List`1&lt;!!0&gt; kalmanFilters, Double[,] associationProbabilites, Action`1&lt;Int32&gt; kalmanFilterAddFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.AddFiltersOf3ListOfM0DoubleMdArray2FuncOfInt32M0Double``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Func{System.Int32,``0},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.AddFilters(List`1&lt;!!0&gt; kalmanFilters, Double[,] associationProbabilites, Func`2&lt;Int32,!!0&gt; kalmanFilterCreatorFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.SelectOf3IEnumerableOfM0FuncOfInt32M0Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{System.Int32,``0,System.Boolean},System.Collections.Generic.IEnumerable{System.Int32}})">
            <summary>Définit le shim de JPDAF.Select(IEnumerable`1&lt;!!0&gt; kalmanFilters, Func`3&lt;Int32,!!0,Boolean&gt; selector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.UpdateOf3IListOfM0ListOfM2DoubleDouble``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.List{``2},System.Double,System.Double,System.Double[0:,0:]})">
            <summary>Définit le shim de JPDAF.Update(IList`1&lt;!!0&gt; kalmanFilters, List`1&lt;!!2&gt; measurements, Double detectionProbability, Double falseAlarmProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.UpdateOf3IListOfM0ListOfM2FuncOfM1M2DoubleFuncOfM0M0DoubleDoubleFuncOfM2M0Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.List{``2},System.Func{``1,``2,System.Double},System.Func{``0,``0},System.Double,System.Double,System.Func{``2,``0,System.Boolean},System.Double[0:,0:]})">
            <summary>Définit le shim de JPDAF.Update(IList`1&lt;!!0&gt; particleFilters, List`1&lt;!!2&gt; measurements, Func`3&lt;!!1,!!2,Double&gt; likelihoodFunc, Func`2&lt;!!0,!!0&gt; resample, Double detectionProbability, Double falseAlarmProbability, Func`3&lt;!!2,!!0,Boolean&gt; considerAssociation)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.addFiltersOf1ListOfM0DoubleMdArray2ActionOfInt32Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Action{System.Int32},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.addFilters(List`1&lt;!!0&gt; filters, Double[,] associationProbabilites, Action`1&lt;Int32&gt; filterCreatorFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.addFiltersOf1ListOfM0DoubleMdArray2FuncOfInt32M0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Double[0:,0:],System.Func{System.Int32,``0},System.Double,System.Boolean})">
            <summary>Définit le shim de JPDAF.addFilters(List`1&lt;!!0&gt; filters, Double[,] associationProbabilites, Func`2&lt;Int32,!!0&gt; filterCreatorFunc, Double minMarginalMeasurementlProbability)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.calculateAssciationProbabilitiesDoubleMdArray2DoubleDouble">
            <summary>Définit le shim de JPDAF.calculateAssciationProbabilities(Double[,] probsZX, Double detectionProbability, Double falseAlarmProbability)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.calculateInnovationCovarianceDoubleMdArray2DoubleArrayMdArray2DoubleArrayInt32">
            <summary>Définit le shim de JPDAF.calculateInnovationCovariance(Double[,] assocProbs, Double[][,] innovZX, Double[] weightedInnovation, Int32 trackIdx)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.calculateWeightedInnovationDoubleMdArray2DoubleArrayMdArray2Int32">
            <summary>Définit le shim de JPDAF.calculateWeightedInnovation(Double[,] assocProbs, Double[][,] innovZX, Int32 trackIdx)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.calculateZXMatrixOf2IListOfIListOfM0IListOfM1FuncOfM0M1DoubleDoubleMdArray2OutFuncOfInt32Int32Boolean``2(Microsoft.QualityTools.Testing.Fakes.Delegates.AccordExtensionsStatisticsDelegates.Out3Func6{System.Collections.Generic.IList{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``1},System.Func{``0,``1,System.Double},System.Double[0:,0:],System.Func{System.Int32,System.Int32,System.Boolean},System.Double[][0:,0:]})">
            <summary>Définit le shim de JPDAF.calculateZXMatrix(IList`1&lt;IList`1&lt;!!0&gt;&gt; particleFilters, IList`1&lt;!!1&gt; measurements, Func`3&lt;!!0,!!1,Double&gt; likelihoodFunc, Double[,]&amp; probsZX, Func`3&lt;Int32,Int32,Boolean&gt; considerAssociation)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.calculateZXMatrixOf3IListOfM0IListOfM2DoubleMdArray2Out``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``2},System.Double[0:,0:],System.Double[][0:,0:]})">
            <summary>Définit le shim de JPDAF.calculateZXMatrix(IList`1&lt;!!0&gt; kalmanFilters, IList`1&lt;!!2&gt; measurements, Double[,]&amp; probsZX)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.generatePossibleAssociationsInt32BooleanMdArray2ActionOfBooleanMdArray2FuncOfInt32Int32Boolean">
            <summary>Définit le shim de JPDAF.generatePossibleAssociations(Int32 trackIdx, Boolean[,] usedElem, Action`1&lt;Boolean[,]&gt; executionFunc, Func`3&lt;Int32,Int32,Boolean&gt; considerAssociation)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.removeFiltersOf1ListOfM0IListOfDoubleFuncOfInt32DoubleBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Collections.Generic.IList{System.Double},System.Func{System.Int32,System.Double,System.Boolean},System.Boolean})">
            <summary>Définit le shim de JPDAF.removeFilters(List`1&lt;!!0&gt; filters, IList`1&lt;Double&gt; filtersEntropies, Func`3&lt;Int32,Double,Boolean&gt; removeSelector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.selectOf1IEnumerableOfM0FuncOfInt32M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{System.Int32,``0,System.Boolean},System.Collections.Generic.IEnumerable{System.Int32}})">
            <summary>Définit le shim de JPDAF.select(IEnumerable`1&lt;!!0&gt; filters, Func`3&lt;Int32,!!0,Boolean&gt; selector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimJPDAF.updateProbabilityAssociationMatrixDoubleMdArray2DoubleDoubleBooleanMdArray2DoubleMdArray2DoubleRefInt32Ref">
            <summary>Définit le shim de JPDAF.updateProbabilityAssociationMatrix(Double[,] probsZX, Double detectionProbability, Double falseAlarmProbability, Boolean[,] usedElem, Double[,] assocProbMat, Double&amp; assocSum, Int32&amp; numCalls)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.KalmanFilter`2</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.#ctor(Accord.Extensions.Statistics.Filters.KalmanFilter{`0,`1})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.CalculateDeltaDoubleArray">
            <summary>Définit le shim de KalmanFilter`2.CalculateDelta(Double[] measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.CalculateDeltaT1">
            <summary>Définit le shim de KalmanFilter`2.CalculateDelta(!1 measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.CalculateEntropy">
            <summary>Définit le shim de KalmanFilter`2.CalculateEntropy()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.CalculateMahalanobisDistanceT1DoubleArrayOut">
            <summary>Définit le shim de KalmanFilter`2.CalculateMahalanobisDistance(!1 measurement, Double[]&amp; delta)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ControlMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_ControlMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ControlMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ControlMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ControlVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_ControlVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ControlVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_ControlVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.CorrectT1">
            <summary>Définit le shim de KalmanFilter`2.Correct(!1 measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.EstimateCovarianceGet">
            <summary>Définit le shim de KalmanFilter`2.get_EstimateCovariance()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.EstimateCovarianceSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_EstimateCovariance(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.GetEllipseFuncOfT0PointFDoubleDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.GetEllipse(Func`2&lt;!0,PointF&gt; positionSelector, Double confidence, Double[,] positionSelectionMatrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.IsMeasurementInsideGateT1DoubleArrayOutDoubleOut">
            <summary>Définit le shim de KalmanFilter`2.IsMeasurementInsideGate(!1 measurement, Double[]&amp; delta, Double&amp; mahalanobisDistance)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.KalmanGainGet">
            <summary>Définit le shim de KalmanFilter`2.get_KalmanGain()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.KalmanGainSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_KalmanGain(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementNoiseGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementNoise()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementNoiseSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementNoise(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.MeasurementVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.Predict">
            <summary>Définit le shim de KalmanFilter`2.Predict()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.PredictDoubleArray">
            <summary>Définit le shim de KalmanFilter`2.Predict(Double[] controlVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ProcessNoiseGet">
            <summary>Définit le shim de KalmanFilter`2.get_ProcessNoise()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ProcessNoiseSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ProcessNoise(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ResidualCovarianceGet">
            <summary>Définit le shim de KalmanFilter`2.get_ResidualCovariance()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ResidualCovarianceInvGet">
            <summary>Définit le shim de KalmanFilter`2.get_ResidualCovarianceInv()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ResidualCovarianceInvSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ResidualCovarianceInv(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.ResidualCovarianceSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ResidualCovariance(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.StateGet">
            <summary>Définit le shim de KalmanFilter`2.get_State()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.StateVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_StateVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.StateVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_StateVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.TransitionMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_TransitionMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.TransitionMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_TransitionMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.checkPrerequisites">
            <summary>Définit le shim de KalmanFilter`2.checkPrerequisites()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.AllInstances.initalizeT0DoubleMdArray2Int32Int32FuncOfT0DoubleArrayFuncOfDoubleArrayT0FuncOfT1DoubleArray">
            <summary>Définit le shim de KalmanFilter`2.initalize(!0 initialState, Double[,] initialStateError, Int32 measurementVectorDimension, Int32 controlVectorDimension, Func`2&lt;!0,Double[]&gt; stateConvertFunc, Func`2&lt;Double[],!0&gt; stateConvertBackFunc, Func`2&lt;!1,Double[]&gt; measurementConvertFunc)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CalculateDeltaDoubleArray">
            <summary>Définit le shim de KalmanFilter`2.CalculateDelta(Double[] measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CalculateDeltaT1">
            <summary>Définit le shim de KalmanFilter`2.CalculateDelta(!1 measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CalculateEntropy">
            <summary>Définit le shim de KalmanFilter`2.CalculateEntropy()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CalculateEntropyDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.CalculateEntropy(Double[,] errorCovariance)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CalculateMahalanobisDistanceT1DoubleArrayOut">
            <summary>Définit le shim de KalmanFilter`2.CalculateMahalanobisDistance(!1 measurement, Double[]&amp; delta)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ConstructorT0DoubleMdArray2Int32Int32FuncOfT0DoubleArrayFuncOfDoubleArrayT0FuncOfT1DoubleArray">
            <summary>Définit le shim de KalmanFilter`2.KalmanFilter`2(!0 initialState, Double[,] initialStateError, Int32 measurementVectorDimension, Int32 controlVectorDimension, Func`2&lt;!0,Double[]&gt; stateConvertFunc, Func`2&lt;Double[],!0&gt; stateConvertBackFunc, Func`2&lt;!1,Double[]&gt; measurementConvertFunc)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ControlMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_ControlMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ControlMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ControlMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ControlVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_ControlVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ControlVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_ControlVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.CorrectT1">
            <summary>Définit le shim de KalmanFilter`2.Correct(!1 measurement)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.EstimateCovarianceGet">
            <summary>Définit le shim de KalmanFilter`2.get_EstimateCovariance()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.EstimateCovarianceSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_EstimateCovariance(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.GetEllipseFuncOfT0PointFDoubleDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.GetEllipse(Func`2&lt;!0,PointF&gt; positionSelector, Double confidence, Double[,] positionSelectionMatrix)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.IsMeasurementInsideGateT1DoubleArrayOutDoubleOut">
            <summary>Définit le shim de KalmanFilter`2.IsMeasurementInsideGate(!1 measurement, Double[]&amp; delta, Double&amp; mahalanobisDistance)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.KalmanGainGet">
            <summary>Définit le shim de KalmanFilter`2.get_KalmanGain()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.KalmanGainSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_KalmanGain(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementNoiseGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementNoise()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementNoiseSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementNoise(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_MeasurementVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.MeasurementVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_MeasurementVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.Predict">
            <summary>Définit le shim de KalmanFilter`2.Predict()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.PredictDoubleArray">
            <summary>Définit le shim de KalmanFilter`2.Predict(Double[] controlVector)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ProcessNoiseGet">
            <summary>Définit le shim de KalmanFilter`2.get_ProcessNoise()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ProcessNoiseSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ProcessNoise(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ResidualCovarianceGet">
            <summary>Définit le shim de KalmanFilter`2.get_ResidualCovariance()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ResidualCovarianceInvGet">
            <summary>Définit le shim de KalmanFilter`2.get_ResidualCovarianceInv()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ResidualCovarianceInvSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ResidualCovarianceInv(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.ResidualCovarianceSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_ResidualCovariance(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.StateGet">
            <summary>Définit le shim de KalmanFilter`2.get_State()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.StateVectorDimensionGet">
            <summary>Définit le shim de KalmanFilter`2.get_StateVectorDimension()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.StateVectorDimensionSetInt32">
            <summary>Définit le shim de KalmanFilter`2.set_StateVectorDimension(Int32 value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.StaticConstructor">
            <summary>Définit le shim de KalmanFilter`2.KalmanFilter`2()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.TransitionMatrixGet">
            <summary>Définit le shim de KalmanFilter`2.get_TransitionMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.TransitionMatrixSetDoubleMdArray2">
            <summary>Définit le shim de KalmanFilter`2.set_TransitionMatrix(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.checkPrerequisites">
            <summary>Définit le shim de KalmanFilter`2.checkPrerequisites()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilter`2.initalizeT0DoubleMdArray2Int32Int32FuncOfT0DoubleArrayFuncOfDoubleArrayT0FuncOfT1DoubleArray">
            <summary>Définit le shim de KalmanFilter`2.initalize(!0 initialState, Double[,] initialStateError, Int32 measurementVectorDimension, Int32 controlVectorDimension, Func`2&lt;!0,Double[]&gt; stateConvertFunc, Func`2&lt;Double[],!0&gt; stateConvertBackFunc, Func`2&lt;!1,Double[]&gt; measurementConvertFunc)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.KalmanFilterExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimKalmanFilterExtensions.CalculateDistanceMatrixOf3IListOfM0IListOfM2Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``2},System.Boolean,System.Double[0:,0:]})">
            <summary>Définit le shim de KalmanFilterExtensions.CalculateDistanceMatrix(IList`1&lt;!!0&gt; trackers, IList`1&lt;!!2&gt; measurements, Boolean gateDistances)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.ParticleFilter</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.CalculateEntropyOf1IEnumerableOfM0FuncOfM0DoubleArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double[]},System.Double})">
            <summary>Définit le shim de ParticleFilter.CalculateEntropy(IEnumerable`1&lt;!!0&gt; particles, Func`2&lt;!!0,Double[]&gt; stateSelector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.CreateParticlesOf1ListOfM0Int32FuncOfDoubleArrayM0IListOfISampleableDistributionOfDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.List{``0},System.Int32,System.Func{System.Double[],``0},System.Collections.Generic.IList{Accord.Statistics.Distributions.ISampleableDistribution{System.Double}}})">
            <summary>Définit le shim de ParticleFilter.CreateParticles(List`1&lt;!!0&gt; collection, Int32 numberOfParticles, Func`2&lt;Double[],!!0&gt; creator, IList`1&lt;ISampleableDistribution`1&lt;Double&gt;&gt; distributions)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.DrawOf1IListOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IList{``0}})">
            <summary>Définit le shim de ParticleFilter.Draw(IList`1&lt;!!0&gt; particles, Int32 sampleCount)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.GetNormalizedWeightsIEnumerableOfIParticle">
            <summary>Définit le shim de ParticleFilter.GetNormalizedWeights(IEnumerable`1&lt;IParticle&gt; particles)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.PredictOf1IListOfM0Single``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Single,System.Collections.Generic.List{``0}})">
            <summary>Définit le shim de ParticleFilter.Predict(IList`1&lt;!!0&gt; particles, Single effectiveCountMinRatio)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.PredictOf1IListOfM0SingleInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Single,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>Définit le shim de ParticleFilter.Predict(IList`1&lt;!!0&gt; particles, Single effectiveCountMinRatio, Int32 sampleCount)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.ResampleOf1IListOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.List{``0}})">
            <summary>Définit le shim de ParticleFilter.Resample(IList`1&lt;!!0&gt; particles, Int32 sampleCount)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.UpdateOf1IEnumerableOfM0FuncOfM0Double``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double}})">
            <summary>Définit le shim de ParticleFilter.Update(IEnumerable`1&lt;!!0&gt; particles, Func`2&lt;!!0,Double&gt; measure)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimParticleFilter.effectiveParticleCountIEnumerableOfDouble">
            <summary>Définit le shim de ParticleFilter.effectiveParticleCount(IEnumerable`1&lt;Double&gt; weights)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.PerspectiveProjection2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.#ctor(Accord.Extensions.Statistics.Filters.PerspectiveProjection2DModel)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.AllInstances.Clone">
            <summary>Définit le shim de PerspectiveProjection2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.AllInstances.EstimateTransitionMatrixDoubleDouble">
            <summary>Définit le shim de PerspectiveProjection2DModel.EstimateTransitionMatrix(Double velocityMultiplierConst, Double delta)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.AllInstances.EvaluateDoubleDouble">
            <summary>Définit le shim de PerspectiveProjection2DModel.Evaluate(Double timeInterval, Double velocityMultiplierConst)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.CalculateVelocityMultiplierConstantDoubleDoubleDouble">
            <summary>Définit le shim de PerspectiveProjection2DModel.CalculateVelocityMultiplierConstant(Double objectWorldWidth, Double focalLength, Double meterToPixelMultiplier)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.Clone">
            <summary>Définit le shim de PerspectiveProjection2DModel.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.Constructor">
            <summary>Définit le shim de PerspectiveProjection2DModel.PerspectiveProjection2DModel()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.EstimateTransitionMatrixDoubleDouble">
            <summary>Définit le shim de PerspectiveProjection2DModel.EstimateTransitionMatrix(Double velocityMultiplierConst, Double delta)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.EvaluateDoubleDouble">
            <summary>Définit le shim de PerspectiveProjection2DModel.Evaluate(Double timeInterval, Double velocityMultiplierConst)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.FromArrayDoubleArray">
            <summary>Définit le shim de PerspectiveProjection2DModel.FromArray(Double[] arr)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.GetMeasurementMatrix">
            <summary>Définit le shim de PerspectiveProjection2DModel.GetMeasurementMatrix()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModel.ToArrayPerspectiveProjection2DModel">
            <summary>Définit le shim de PerspectiveProjection2DModel.ToArray(PerspectiveProjection2DModel modelState)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions">
            <summary>Type shim de Accord.Extensions.Statistics.Filters.PerspectiveProjection2DModelExtensions</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.ShimPerspectiveProjection2DModelExtensions.TranslatePerspectiveProjection2DModelPointF">
            <summary>Définit le shim de PerspectiveProjection2DModelExtensions.Translate(PerspectiveProjection2DModel state, PointF offset)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.ConstantAcceleration2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConstantAcceleration2DModel</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantAcceleration2DModel.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.ConstantVelocity2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConstantVelocity2DModel</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubConstantVelocity2DModel.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.DiscreteKalmanFilter`2</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.#ctor(`0,System.Double[0:,0:],System.Int32,System.Int32,System.Func{`0,System.Double[]},System.Func{System.Double[],`0},System.Func{`1,System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.CorrectInternal(System.Double[])">
            <summary>Définit le stub de DiscreteKalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.CorrectInternalDoubleArray">
            <summary>Définit le stub de DiscreteKalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDiscreteKalmanFilter</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.PredictInternalDoubleArray">
            <summary>Définit le stub de DiscreteKalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubDiscreteKalmanFilter`2.predictInternal(System.Double[])">
            <summary>Définit le stub de DiscreteKalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.IEntropyTrack</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.#ctor">
            <summary>Initialise une nouvelle instance de type StubIEntropyTrack</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.AttachBackingFieldToInitialEntropy">
            <summary>Attache les délégués pour émuler StubIEntropyTrack.InitialEntropy en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.AttachBackingFieldToIsTentative">
            <summary>Attache les délégués pour émuler StubIEntropyTrack.IsTentative en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.Accord#Extensions#Statistics#Filters#IEntropyTrack#InitialEntropy">
            <summary>Définit le stub de IEntropyTrack.get_InitialEntropy()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.InitialEntropyGet">
            <summary>Définit le stub de IEntropyTrack.get_InitialEntropy()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.InitialEntropySetDouble">
            <summary>Définit le stub de IEntropyTrack.set_InitialEntropy(Double value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.Accord#Extensions#Statistics#Filters#IEntropyTrack#IsTentative">
            <summary>Définit le stub de IEntropyTrack.get_IsTentative()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.IsTentativeGet">
            <summary>Définit le stub de IEntropyTrack.get_IsTentative()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack.IsTentativeSetNullableOfBoolean">
            <summary>Définit le stub de IEntropyTrack.set_IsTentative(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.IEntropyTrack`1</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.#ctor">
            <summary>Initialise une nouvelle instance de type StubIEntropyTrack</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.AttachBackingFieldToInitialEntropy">
            <summary>Attache les délégués pour émuler StubIEntropyTrack.InitialEntropy en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.AttachBackingFieldToIsTentative">
            <summary>Attache les délégués pour émuler StubIEntropyTrack.IsTentative en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.Accord#Extensions#Statistics#Filters#IEntropyTrack#InitialEntropy">
            <summary>Définit le stub de IEntropyTrack.get_InitialEntropy()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.InitialEntropyGet">
            <summary>Définit le stub de IEntropyTrack.get_InitialEntropy()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.InitialEntropySetDouble">
            <summary>Définit le stub de IEntropyTrack.set_InitialEntropy(Double value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.Accord#Extensions#Statistics#Filters#IEntropyTrack#IsTentative">
            <summary>Définit le stub de IEntropyTrack.get_IsTentative()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.IsTentativeGet">
            <summary>Définit le stub de IEntropyTrack.get_IsTentative()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.IsTentativeSetNullableOfBoolean">
            <summary>Définit le stub de IEntropyTrack.set_IsTentative(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.Accord#Extensions#Statistics#Filters#IEntropyTrack{TTracker}#Tracker">
            <summary>Définit le stub de IEntropyTrack`1.get_Tracker()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIEntropyTrack`1.TrackerGet">
            <summary>Définit le stub de IEntropyTrack`1.get_Tracker()</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.IParticle</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.#ctor">
            <summary>Initialise une nouvelle instance de type StubIParticle</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Accord#Extensions#Statistics#Filters#IParticle#Diffuse">
            <summary>Définit le stub de IParticle.Diffuse()</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Accord#Extensions#Statistics#Filters#IParticle#Drift">
            <summary>Définit le stub de IParticle.Drift()</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.AttachBackingFieldToWeight">
            <summary>Attache les délégués pour émuler StubIParticle.Weight en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Diffuse">
            <summary>Définit le stub de IParticle.Diffuse()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Drift">
            <summary>Définit le stub de IParticle.Drift()</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.System#ICloneable#Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.Accord#Extensions#Statistics#Filters#IParticle#Weight">
            <summary>Définit le stub de IParticle.get_Weight()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.WeightGet">
            <summary>Définit le stub de IParticle.get_Weight()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle.WeightSetDouble">
            <summary>Définit le stub de IParticle.set_Weight(Double value)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.IParticle`1</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.#ctor">
            <summary>Initialise une nouvelle instance de type StubIParticle</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Accord#Extensions#Statistics#Filters#IParticle#Diffuse">
            <summary>Définit le stub de IParticle.Diffuse()</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Accord#Extensions#Statistics#Filters#IParticle#Drift">
            <summary>Définit le stub de IParticle.Drift()</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.AttachBackingFieldToState">
            <summary>Attache les délégués pour émuler StubIParticle.State en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.AttachBackingFieldToWeight">
            <summary>Attache les délégués pour émuler StubIParticle.Weight en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Diffuse">
            <summary>Définit le stub de IParticle.Diffuse()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Drift">
            <summary>Définit le stub de IParticle.Drift()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Accord#Extensions#Statistics#Filters#IParticle{TState}#State">
            <summary>Définit le stub de IParticle`1.get_State()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.StateGet">
            <summary>Définit le stub de IParticle`1.get_State()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.StateSetT0">
            <summary>Définit le stub de IParticle`1.set_State(!0 value)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.System#ICloneable#Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.Accord#Extensions#Statistics#Filters#IParticle#Weight">
            <summary>Définit le stub de IParticle.get_Weight()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.WeightGet">
            <summary>Définit le stub de IParticle.get_Weight()</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubIParticle`1.WeightSetDouble">
            <summary>Définit le stub de IParticle.set_Weight(Double value)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.KalmanFilter`2</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.#ctor(`0,System.Double[0:,0:],System.Int32,System.Int32,System.Func{`0,System.Double[]},System.Func{System.Double[],`0},System.Func{`1,System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.CorrectInternal(System.Double[])">
            <summary>Définit le stub de KalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.CorrectInternalDoubleArray">
            <summary>Définit le stub de KalmanFilter`2.CorrectInternal(Double[] measurement)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubKalmanFilter</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="F:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.PredictInternalDoubleArray">
            <summary>Définit le stub de KalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubKalmanFilter`2.predictInternal(System.Double[])">
            <summary>Définit le stub de KalmanFilter`2.predictInternal(Double[] controlVector)</summary>
        </member>
        <member name="T:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel">
            <summary>Type stub de Accord.Extensions.Statistics.Filters.PerspectiveProjection2DModel</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubPerspectiveProjection2DModel</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Extensions.Statistics.Filters.Fakes.StubPerspectiveProjection2DModel.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AccordExtensionsStatisticsDelegates">
            <summary>Contient des délégués personnalisés utilisés pour les stubs et les shims de Accord.Extensions.Statistics</summary>
        </member>
    </members>
</doc>

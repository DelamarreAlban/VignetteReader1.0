<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Math.3.0.2.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:AForge.Math.Fakes.ShimContinuousHistogram">
            <summary>Type shim de AForge.Math.ContinuousHistogram</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimContinuousHistogram.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimContinuousHistogram.#ctor(AForge.Math.ContinuousHistogram)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.GetRangeSingle">
            <summary>Définit le shim de ContinuousHistogram.GetRange(Single percent)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.MaxGet">
            <summary>Définit le shim de ContinuousHistogram.get_Max()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.MeanGet">
            <summary>Définit le shim de ContinuousHistogram.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.MedianGet">
            <summary>Définit le shim de ContinuousHistogram.get_Median()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.MinGet">
            <summary>Définit le shim de ContinuousHistogram.get_Min()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.RangeGet">
            <summary>Définit le shim de ContinuousHistogram.get_Range()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.StdDevGet">
            <summary>Définit le shim de ContinuousHistogram.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.Update">
            <summary>Définit le shim de ContinuousHistogram.Update()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.AllInstances.ValuesGet">
            <summary>Définit le shim de ContinuousHistogram.get_Values()</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimContinuousHistogram.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimContinuousHistogram.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.ConstructorInt32ArrayRange">
            <summary>Définit le shim de ContinuousHistogram.ContinuousHistogram(Int32[] values, Range range)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.GetRangeSingle">
            <summary>Définit le shim de ContinuousHistogram.GetRange(Single percent)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.MaxGet">
            <summary>Définit le shim de ContinuousHistogram.get_Max()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.MeanGet">
            <summary>Définit le shim de ContinuousHistogram.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.MedianGet">
            <summary>Définit le shim de ContinuousHistogram.get_Median()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.MinGet">
            <summary>Définit le shim de ContinuousHistogram.get_Min()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.RangeGet">
            <summary>Définit le shim de ContinuousHistogram.get_Range()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.StdDevGet">
            <summary>Définit le shim de ContinuousHistogram.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.Update">
            <summary>Définit le shim de ContinuousHistogram.Update()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimContinuousHistogram.ValuesGet">
            <summary>Définit le shim de ContinuousHistogram.get_Values()</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimFourierTransform">
            <summary>Type shim de AForge.Math.FourierTransform</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimFourierTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimFourierTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimFourierTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.DFT2ComplexMdArray2FourierTransformDirection">
            <summary>Définit le shim de FourierTransform.DFT2(Complex[,] data, Direction direction)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.DFTComplexArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform.DFT(Complex[] data, Direction direction)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.FFT2ComplexMdArray2FourierTransformDirection">
            <summary>Définit le shim de FourierTransform.FFT2(Complex[,] data, Direction direction)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.FFTComplexArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform.FFT(Complex[] data, Direction direction)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.GetComplexRotationInt32FourierTransformDirection">
            <summary>Définit le shim de FourierTransform.GetComplexRotation(Int32 numberOfBits, Direction direction)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.GetReversedBitsInt32">
            <summary>Définit le shim de FourierTransform.GetReversedBits(Int32 numberOfBits)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.ReorderDataComplexArray">
            <summary>Définit le shim de FourierTransform.ReorderData(Complex[] data)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimFourierTransform.StaticConstructor">
            <summary>Définit le shim de FourierTransform.FourierTransform()</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimGaussian">
            <summary>Type shim de AForge.Math.Gaussian</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimGaussian.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimGaussian.#ctor(AForge.Math.Gaussian)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimGaussian.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.Function2DDoubleDouble">
            <summary>Définit le shim de Gaussian.Function2D(Double x, Double y)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.FunctionDouble">
            <summary>Définit le shim de Gaussian.Function(Double x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.Kernel2DInt32">
            <summary>Définit le shim de Gaussian.Kernel2D(Int32 size)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.KernelInt32">
            <summary>Définit le shim de Gaussian.Kernel(Int32 size)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.SigmaGet">
            <summary>Définit le shim de Gaussian.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.AllInstances.SigmaSetDouble">
            <summary>Définit le shim de Gaussian.set_Sigma(Double value)</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimGaussian.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimGaussian.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.Constructor">
            <summary>Définit le shim de Gaussian.Gaussian()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.ConstructorDouble">
            <summary>Définit le shim de Gaussian.Gaussian(Double sigma)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.Function2DDoubleDouble">
            <summary>Définit le shim de Gaussian.Function2D(Double x, Double y)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.FunctionDouble">
            <summary>Définit le shim de Gaussian.Function(Double x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.Kernel2DInt32">
            <summary>Définit le shim de Gaussian.Kernel2D(Int32 size)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.KernelInt32">
            <summary>Définit le shim de Gaussian.Kernel(Int32 size)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.SigmaGet">
            <summary>Définit le shim de Gaussian.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimGaussian.SigmaSetDouble">
            <summary>Définit le shim de Gaussian.set_Sigma(Double value)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimHistogram">
            <summary>Type shim de AForge.Math.Histogram</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimHistogram.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimHistogram.#ctor(AForge.Math.Histogram)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimHistogram.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.GetRangeDouble">
            <summary>Définit le shim de Histogram.GetRange(Double percent)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.MaxGet">
            <summary>Définit le shim de Histogram.get_Max()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.MeanGet">
            <summary>Définit le shim de Histogram.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.MedianGet">
            <summary>Définit le shim de Histogram.get_Median()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.MinGet">
            <summary>Définit le shim de Histogram.get_Min()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.StdDevGet">
            <summary>Définit le shim de Histogram.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.TotalCountGet">
            <summary>Définit le shim de Histogram.get_TotalCount()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.Update">
            <summary>Définit le shim de Histogram.Update()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.AllInstances.ValuesGet">
            <summary>Définit le shim de Histogram.get_Values()</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimHistogram.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimHistogram.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.ConstructorInt32Array">
            <summary>Définit le shim de Histogram.Histogram(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.GetRangeDouble">
            <summary>Définit le shim de Histogram.GetRange(Double percent)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.MaxGet">
            <summary>Définit le shim de Histogram.get_Max()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.MeanGet">
            <summary>Définit le shim de Histogram.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.MedianGet">
            <summary>Définit le shim de Histogram.get_Median()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.MinGet">
            <summary>Définit le shim de Histogram.get_Min()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.StdDevGet">
            <summary>Définit le shim de Histogram.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.TotalCountGet">
            <summary>Définit le shim de Histogram.get_TotalCount()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.Update">
            <summary>Définit le shim de Histogram.Update()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimHistogram.ValuesGet">
            <summary>Définit le shim de Histogram.get_Values()</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimMatrix3x3">
            <summary>Type shim de AForge.Math.Matrix3x3</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix3x3.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.AddMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.Add(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.AddMatrix3x3Single">
            <summary>Définit le shim de Matrix3x3.Add(Matrix3x3 matrix, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.AdditionOpMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.op_Addition(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.AdditionOpMatrix3x3Single">
            <summary>Définit le shim de Matrix3x3.op_Addition(Matrix3x3 matrix, Single value)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimMatrix3x3.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix3x3.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix3x3.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateDiagonalVector3">
            <summary>Définit le shim de Matrix3x3.CreateDiagonal(Vector3 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateFromColumnsVector3Vector3Vector3">
            <summary>Définit le shim de Matrix3x3.CreateFromColumns(Vector3 column0, Vector3 column1, Vector3 column2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateFromRowsVector3Vector3Vector3">
            <summary>Définit le shim de Matrix3x3.CreateFromRows(Vector3 row0, Vector3 row1, Vector3 row2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateFromYawPitchRollSingleSingleSingle">
            <summary>Définit le shim de Matrix3x3.CreateFromYawPitchRoll(Single yaw, Single pitch, Single roll)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateRotationXSingle">
            <summary>Définit le shim de Matrix3x3.CreateRotationX(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateRotationYSingle">
            <summary>Définit le shim de Matrix3x3.CreateRotationY(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.CreateRotationZSingle">
            <summary>Définit le shim de Matrix3x3.CreateRotationZ(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.EqualityOpMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.op_Equality(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.IdentityGet">
            <summary>Définit le shim de Matrix3x3.get_Identity()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.InequalityOpMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.op_Inequality(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.Multiply(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyMatrix3x3Single">
            <summary>Définit le shim de Matrix3x3.Multiply(Matrix3x3 matrix, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyMatrix3x3Vector3">
            <summary>Définit le shim de Matrix3x3.Multiply(Matrix3x3 matrix, Vector3 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyOpMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.op_Multiply(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyOpMatrix3x3Single">
            <summary>Définit le shim de Matrix3x3.op_Multiply(Matrix3x3 matrix, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.MultiplyOpMatrix3x3Vector3">
            <summary>Définit le shim de Matrix3x3.op_Multiply(Matrix3x3 matrix, Vector3 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.SubtractMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.Subtract(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix3x3.SubtractionOpMatrix3x3Matrix3x3">
            <summary>Définit le shim de Matrix3x3.op_Subtraction(Matrix3x3 matrix1, Matrix3x3 matrix2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimMatrix4x4">
            <summary>Type shim de AForge.Math.Matrix4x4</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix4x4.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.AddMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.Add(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.AdditionOpMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.op_Addition(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimMatrix4x4.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix4x4.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimMatrix4x4.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateDiagonalVector4">
            <summary>Définit le shim de Matrix4x4.CreateDiagonal(Vector4 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateFromColumnsVector4Vector4Vector4Vector4">
            <summary>Définit le shim de Matrix4x4.CreateFromColumns(Vector4 column0, Vector4 column1, Vector4 column2, Vector4 column3)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateFromRotationMatrix3x3">
            <summary>Définit le shim de Matrix4x4.CreateFromRotation(Matrix3x3 rotationMatrix)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateFromRowsVector4Vector4Vector4Vector4">
            <summary>Définit le shim de Matrix4x4.CreateFromRows(Vector4 row0, Vector4 row1, Vector4 row2, Vector4 row3)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateFromYawPitchRollSingleSingleSingle">
            <summary>Définit le shim de Matrix4x4.CreateFromYawPitchRoll(Single yaw, Single pitch, Single roll)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateLookAtVector3Vector3">
            <summary>Définit le shim de Matrix4x4.CreateLookAt(Vector3 cameraPosition, Vector3 cameraTarget)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreatePerspectiveSingleSingleSingleSingle">
            <summary>Définit le shim de Matrix4x4.CreatePerspective(Single width, Single height, Single nearPlaneDistance, Single farPlaneDistance)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateRotationXSingle">
            <summary>Définit le shim de Matrix4x4.CreateRotationX(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateRotationYSingle">
            <summary>Définit le shim de Matrix4x4.CreateRotationY(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateRotationZSingle">
            <summary>Définit le shim de Matrix4x4.CreateRotationZ(Single radians)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.CreateTranslationVector3">
            <summary>Définit le shim de Matrix4x4.CreateTranslation(Vector3 position)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.EqualityOpMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.op_Equality(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.IdentityGet">
            <summary>Définit le shim de Matrix4x4.get_Identity()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.InequalityOpMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.op_Inequality(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.MultiplyMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.Multiply(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.MultiplyMatrix4x4Vector4">
            <summary>Définit le shim de Matrix4x4.Multiply(Matrix4x4 matrix, Vector4 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.MultiplyOpMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.op_Multiply(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.MultiplyOpMatrix4x4Vector4">
            <summary>Définit le shim de Matrix4x4.op_Multiply(Matrix4x4 matrix, Vector4 vector)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.SubtractMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.Subtract(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimMatrix4x4.SubtractionOpMatrix4x4Matrix4x4">
            <summary>Définit le shim de Matrix4x4.op_Subtraction(Matrix4x4 matrix1, Matrix4x4 matrix2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimPerlinNoise">
            <summary>Type shim de AForge.Math.PerlinNoise</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimPerlinNoise.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimPerlinNoise.#ctor(AForge.Math.PerlinNoise)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimPerlinNoise.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.Function2DDoubleDouble">
            <summary>Définit le shim de PerlinNoise.Function2D(Double x, Double y)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.FunctionDouble">
            <summary>Définit le shim de PerlinNoise.Function(Double x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.InitAmplitudeGet">
            <summary>Définit le shim de PerlinNoise.get_InitAmplitude()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.InitAmplitudeSetDouble">
            <summary>Définit le shim de PerlinNoise.set_InitAmplitude(Double value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.InitFrequencyGet">
            <summary>Définit le shim de PerlinNoise.get_InitFrequency()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.InitFrequencySetDouble">
            <summary>Définit le shim de PerlinNoise.set_InitFrequency(Double value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.OctavesGet">
            <summary>Définit le shim de PerlinNoise.get_Octaves()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.OctavesSetInt32">
            <summary>Définit le shim de PerlinNoise.set_Octaves(Int32 value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.PersistenceGet">
            <summary>Définit le shim de PerlinNoise.get_Persistence()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.AllInstances.PersistenceSetDouble">
            <summary>Définit le shim de PerlinNoise.set_Persistence(Double value)</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimPerlinNoise.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimPerlinNoise.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.Constructor">
            <summary>Définit le shim de PerlinNoise.PerlinNoise()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.ConstructorInt32Double">
            <summary>Définit le shim de PerlinNoise.PerlinNoise(Int32 octaves, Double persistence)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.ConstructorInt32DoubleDoubleDouble">
            <summary>Définit le shim de PerlinNoise.PerlinNoise(Int32 octaves, Double persistence, Double initFrequency, Double initAmplitude)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.CosineInterpolateDoubleDoubleDouble">
            <summary>Définit le shim de PerlinNoise.CosineInterpolate(Double x1, Double x2, Double a)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.Function2DDoubleDouble">
            <summary>Définit le shim de PerlinNoise.Function2D(Double x, Double y)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.FunctionDouble">
            <summary>Définit le shim de PerlinNoise.Function(Double x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.InitAmplitudeGet">
            <summary>Définit le shim de PerlinNoise.get_InitAmplitude()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.InitAmplitudeSetDouble">
            <summary>Définit le shim de PerlinNoise.set_InitAmplitude(Double value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.InitFrequencyGet">
            <summary>Définit le shim de PerlinNoise.get_InitFrequency()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.InitFrequencySetDouble">
            <summary>Définit le shim de PerlinNoise.set_InitFrequency(Double value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.NoiseInt32">
            <summary>Définit le shim de PerlinNoise.Noise(Int32 x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.NoiseInt32Int32">
            <summary>Définit le shim de PerlinNoise.Noise(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.OctavesGet">
            <summary>Définit le shim de PerlinNoise.get_Octaves()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.OctavesSetInt32">
            <summary>Définit le shim de PerlinNoise.set_Octaves(Int32 value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.PersistenceGet">
            <summary>Définit le shim de PerlinNoise.get_Persistence()</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.PersistenceSetDouble">
            <summary>Définit le shim de PerlinNoise.set_Persistence(Double value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.SmoothedNoiseDouble">
            <summary>Définit le shim de PerlinNoise.SmoothedNoise(Double x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimPerlinNoise.SmoothedNoiseDoubleDouble">
            <summary>Définit le shim de PerlinNoise.SmoothedNoise(Double x, Double y)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimStatistics">
            <summary>Type shim de AForge.Math.Statistics</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimStatistics.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimStatistics.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimStatistics.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.EntropyInt32Array">
            <summary>Définit le shim de Statistics.Entropy(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.GetRangeInt32ArrayDouble">
            <summary>Définit le shim de Statistics.GetRange(Int32[] values, Double percent)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.MeanInt32Array">
            <summary>Définit le shim de Statistics.Mean(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.MedianInt32Array">
            <summary>Définit le shim de Statistics.Median(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.ModeInt32Array">
            <summary>Définit le shim de Statistics.Mode(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.StdDevInt32Array">
            <summary>Définit le shim de Statistics.StdDev(Int32[] values)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimStatistics.StdDevInt32ArrayDouble">
            <summary>Définit le shim de Statistics.StdDev(Int32[] values, Double mean)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimTools">
            <summary>Type shim de AForge.Math.Tools</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimTools.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimTools.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimTools.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimTools.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimTools.IsPowerOf2Int32">
            <summary>Définit le shim de Tools.IsPowerOf2(Int32 x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimTools.Log2Int32">
            <summary>Définit le shim de Tools.Log2(Int32 x)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimTools.Pow2Int32">
            <summary>Définit le shim de Tools.Pow2(Int32 power)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimVector3">
            <summary>Type shim de AForge.Math.Vector3</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector3.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.AddVector3Single">
            <summary>Définit le shim de Vector3.Add(Vector3 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.AddVector3Vector3">
            <summary>Définit le shim de Vector3.Add(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.AdditionOpVector3Single">
            <summary>Définit le shim de Vector3.op_Addition(Vector3 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.AdditionOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Addition(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimVector3.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector3.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector3.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.CrossVector3Vector3">
            <summary>Définit le shim de Vector3.Cross(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.DivideVector3Single">
            <summary>Définit le shim de Vector3.Divide(Vector3 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.DivideVector3Vector3">
            <summary>Définit le shim de Vector3.Divide(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.DivisionOpVector3Single">
            <summary>Définit le shim de Vector3.op_Division(Vector3 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.DivisionOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Division(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.DotVector3Vector3">
            <summary>Définit le shim de Vector3.Dot(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.EqualityOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Equality(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.InequalityOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Inequality(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.MultiplyOpVector3Single">
            <summary>Définit le shim de Vector3.op_Multiply(Vector3 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.MultiplyOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Multiply(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.MultiplyVector3Single">
            <summary>Définit le shim de Vector3.Multiply(Vector3 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.MultiplyVector3Vector3">
            <summary>Définit le shim de Vector3.Multiply(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.SubtractVector3Single">
            <summary>Définit le shim de Vector3.Subtract(Vector3 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.SubtractVector3Vector3">
            <summary>Définit le shim de Vector3.Subtract(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.SubtractionOpVector3Single">
            <summary>Définit le shim de Vector3.op_Subtraction(Vector3 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector3.SubtractionOpVector3Vector3">
            <summary>Définit le shim de Vector3.op_Subtraction(Vector3 vector1, Vector3 vector2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimVector4">
            <summary>Type shim de AForge.Math.Vector4</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector4.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.AddVector4Single">
            <summary>Définit le shim de Vector4.Add(Vector4 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.AddVector4Vector4">
            <summary>Définit le shim de Vector4.Add(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.AdditionOpVector4Single">
            <summary>Définit le shim de Vector4.op_Addition(Vector4 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.AdditionOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Addition(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.ShimVector4.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector4.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Fakes.ShimVector4.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.DivideVector4Single">
            <summary>Définit le shim de Vector4.Divide(Vector4 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.DivideVector4Vector4">
            <summary>Définit le shim de Vector4.Divide(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.DivisionOpVector4Single">
            <summary>Définit le shim de Vector4.op_Division(Vector4 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.DivisionOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Division(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.DotVector4Vector4">
            <summary>Définit le shim de Vector4.Dot(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.EqualityOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Equality(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.InequalityOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Inequality(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.MultiplyOpVector4Single">
            <summary>Définit le shim de Vector4.op_Multiply(Vector4 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.MultiplyOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Multiply(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.MultiplyVector4Single">
            <summary>Définit le shim de Vector4.Multiply(Vector4 vector, Single factor)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.MultiplyVector4Vector4">
            <summary>Définit le shim de Vector4.Multiply(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.SubtractVector4Single">
            <summary>Définit le shim de Vector4.Subtract(Vector4 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.SubtractVector4Vector4">
            <summary>Définit le shim de Vector4.Subtract(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.SubtractionOpVector4Single">
            <summary>Définit le shim de Vector4.op_Subtraction(Vector4 vector, Single value)</summary>
        </member>
        <member name="P:AForge.Math.Fakes.ShimVector4.SubtractionOpVector4Vector4">
            <summary>Définit le shim de Vector4.op_Subtraction(Vector4 vector1, Vector4 vector2)</summary>
        </member>
        <member name="T:AForge.Math.Fakes.StubContinuousHistogram">
            <summary>Type stub de AForge.Math.ContinuousHistogram</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubContinuousHistogram.#ctor(System.Int32[],AForge.Range)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubContinuousHistogram.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubContinuousHistogram.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubContinuousHistogram</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubContinuousHistogram.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubContinuousHistogram.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Fakes.StubGaussian">
            <summary>Type stub de AForge.Math.Gaussian</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubGaussian.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubGaussian.#ctor(System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubGaussian.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubGaussian.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGaussian</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubGaussian.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubGaussian.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Fakes.StubHistogram">
            <summary>Type stub de AForge.Math.Histogram</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubHistogram.#ctor(System.Int32[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubHistogram.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubHistogram.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubHistogram</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubHistogram.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubHistogram.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Fakes.StubPerlinNoise">
            <summary>Type stub de AForge.Math.PerlinNoise</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubPerlinNoise.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubPerlinNoise.#ctor(System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubPerlinNoise.#ctor(System.Int32,System.Double,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubPerlinNoise.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Fakes.StubPerlinNoise.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubPerlinNoise</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubPerlinNoise.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Fakes.StubPerlinNoise.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer">
            <summary>Type shim de AForge.Math.Geometry.ClosePointsMergingOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.#ctor(AForge.Math.Geometry.ClosePointsMergingOptimizer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.AllInstances.MaxDistanceToMergeGet">
            <summary>Définit le shim de ClosePointsMergingOptimizer.get_MaxDistanceToMerge()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.AllInstances.MaxDistanceToMergeSetSingle">
            <summary>Définit le shim de ClosePointsMergingOptimizer.set_MaxDistanceToMerge(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.AllInstances.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de ClosePointsMergingOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.Bind(AForge.Math.Geometry.IShapeOptimizer)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.Constructor">
            <summary>Définit le shim de ClosePointsMergingOptimizer.ClosePointsMergingOptimizer()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.ConstructorSingle">
            <summary>Définit le shim de ClosePointsMergingOptimizer.ClosePointsMergingOptimizer(Single maxDistanceToMerge)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.MaxDistanceToMergeGet">
            <summary>Définit le shim de ClosePointsMergingOptimizer.get_MaxDistanceToMerge()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.MaxDistanceToMergeSetSingle">
            <summary>Définit le shim de ClosePointsMergingOptimizer.set_MaxDistanceToMerge(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimClosePointsMergingOptimizer.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de ClosePointsMergingOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimCoplanarPosit">
            <summary>Type shim de AForge.Math.Geometry.CoplanarPosit</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.#ctor(AForge.Math.Geometry.CoplanarPosit)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.AlternateEstimatedRotationGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimatedRotation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.AlternateEstimatedTranslationGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimatedTranslation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.AlternateEstimationErrorGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimationError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.BestEstimatedRotationGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimatedRotation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.BestEstimatedTranslationGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimatedTranslation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.BestEstimationErrorGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimationError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.EstimatePosePointArrayMatrix3x3OutVector3Out">
            <summary>Définit le shim de CoplanarPosit.EstimatePose(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.FocalLengthGet">
            <summary>Définit le shim de CoplanarPosit.get_FocalLength()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.FocalLengthSetSingle">
            <summary>Définit le shim de CoplanarPosit.set_FocalLength(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.GetErrorPointArrayMatrix3x3Vector3">
            <summary>Définit le shim de CoplanarPosit.GetError(Point[] imagePoints, Matrix3x3 rotation, Vector3 translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.IteratePointArrayMatrix3x3RefVector3Ref">
            <summary>Définit le shim de CoplanarPosit.Iterate(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.ModelGet">
            <summary>Définit le shim de CoplanarPosit.get_Model()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AllInstances.POSPointArrayVector3Matrix3x3OutMatrix3x3OutVector3OutVector3Out">
            <summary>Définit le shim de CoplanarPosit.POS(Point[] imagePoints, Vector3 eps, Matrix3x3&amp; rotation1, Matrix3x3&amp; rotation2, Vector3&amp; translation1, Vector3&amp; translation2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AlternateEstimatedRotationGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimatedRotation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AlternateEstimatedTranslationGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimatedTranslation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.AlternateEstimationErrorGet">
            <summary>Définit le shim de CoplanarPosit.get_AlternateEstimationError()</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.BestEstimatedRotationGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimatedRotation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.BestEstimatedTranslationGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimatedTranslation()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.BestEstimationErrorGet">
            <summary>Définit le shim de CoplanarPosit.get_BestEstimationError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.ConstructorVector3ArraySingle">
            <summary>Définit le shim de CoplanarPosit.CoplanarPosit(Vector3[] model, Single focalLength)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.EstimatePosePointArrayMatrix3x3OutVector3Out">
            <summary>Définit le shim de CoplanarPosit.EstimatePose(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.FocalLengthGet">
            <summary>Définit le shim de CoplanarPosit.get_FocalLength()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.FocalLengthSetSingle">
            <summary>Définit le shim de CoplanarPosit.set_FocalLength(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.GetErrorPointArrayMatrix3x3Vector3">
            <summary>Définit le shim de CoplanarPosit.GetError(Point[] imagePoints, Matrix3x3 rotation, Vector3 translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.IteratePointArrayMatrix3x3RefVector3Ref">
            <summary>Définit le shim de CoplanarPosit.Iterate(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimCoplanarPosit.ModelGet">
            <summary>Définit le shim de CoplanarPosit.get_Model()</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer">
            <summary>Type shim de AForge.Math.Geometry.FlatAnglesOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.#ctor(AForge.Math.Geometry.FlatAnglesOptimizer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.AllInstances.MaxAngleToKeepGet">
            <summary>Définit le shim de FlatAnglesOptimizer.get_MaxAngleToKeep()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.AllInstances.MaxAngleToKeepSetSingle">
            <summary>Définit le shim de FlatAnglesOptimizer.set_MaxAngleToKeep(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.AllInstances.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de FlatAnglesOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.Bind(AForge.Math.Geometry.IShapeOptimizer)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.Constructor">
            <summary>Définit le shim de FlatAnglesOptimizer.FlatAnglesOptimizer()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.ConstructorSingle">
            <summary>Définit le shim de FlatAnglesOptimizer.FlatAnglesOptimizer(Single maxAngleToKeep)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.MaxAngleToKeepGet">
            <summary>Définit le shim de FlatAnglesOptimizer.get_MaxAngleToKeep()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.MaxAngleToKeepSetSingle">
            <summary>Définit le shim de FlatAnglesOptimizer.set_MaxAngleToKeep(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimFlatAnglesOptimizer.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de FlatAnglesOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimGeometryTools">
            <summary>Type shim de AForge.Math.Geometry.GeometryTools</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGeometryTools.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGeometryTools.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGeometryTools.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGeometryTools.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGeometryTools.GetAngleBetweenLinesPointPointPointPoint">
            <summary>Définit le shim de GeometryTools.GetAngleBetweenLines(Point a1, Point a2, Point b1, Point b2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGeometryTools.GetAngleBetweenVectorsPointPointPoint">
            <summary>Définit le shim de GeometryTools.GetAngleBetweenVectors(Point startPoint, Point vector1end, Point vector2end)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull">
            <summary>Type shim de AForge.Math.Geometry.GrahamConvexHull</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.#ctor(AForge.Math.Geometry.GrahamConvexHull)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.AllInstances.FindHullListOfIntPoint">
            <summary>Définit le shim de GrahamConvexHull.FindHull(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.Bind(AForge.Math.Geometry.IConvexHullAlgorithm)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.Constructor">
            <summary>Définit le shim de GrahamConvexHull.GrahamConvexHull()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimGrahamConvexHull.FindHullListOfIntPoint">
            <summary>Définit le shim de GrahamConvexHull.FindHull(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLine">
            <summary>Type shim de AForge.Math.Geometry.Line</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLine.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLine.#ctor(AForge.Math.Geometry.Line)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLine.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.DistanceToPointPoint">
            <summary>Définit le shim de Line.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.EqualsObject">
            <summary>Définit le shim de Line.Equals(Object obj)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.GetAngleBetweenLinesLine">
            <summary>Définit le shim de Line.GetAngleBetweenLines(Line secondLine)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.GetHashCode01">
            <summary>Définit le shim de Line.GetHashCode()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.GetIntersectionWithLine">
            <summary>Définit le shim de Line.GetIntersectionWith(Line secondLine)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.GetIntersectionWithLineSegment">
            <summary>Définit le shim de Line.GetIntersectionWith(LineSegment other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.InterceptGet">
            <summary>Définit le shim de Line.get_Intercept()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.IsHorizontalGet">
            <summary>Définit le shim de Line.get_IsHorizontal()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.IsVerticalGet">
            <summary>Définit le shim de Line.get_IsVertical()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.SlopeGet">
            <summary>Définit le shim de Line.get_Slope()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.AllInstances.ToString01">
            <summary>Définit le shim de Line.ToString()</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLine.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLine.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.ConstructorPointPoint">
            <summary>Définit le shim de Line.Line(Point start, Point end)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.ConstructorPointSingle">
            <summary>Définit le shim de Line.Line(Point point, Single theta)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.ConstructorSingleSingle">
            <summary>Définit le shim de Line.Line(Single slope, Single intercept)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.ConstructorSingleSingleBoolean">
            <summary>Définit le shim de Line.Line(Single radius, Single theta, Boolean unused)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.DistanceToPointPoint">
            <summary>Définit le shim de Line.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.EqualityOpLineLine">
            <summary>Définit le shim de Line.op_Equality(Line line1, Line line2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.EqualsObject">
            <summary>Définit le shim de Line.Equals(Object obj)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.FromPointThetaPointSingle">
            <summary>Définit le shim de Line.FromPointTheta(Point point, Single theta)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.FromPointsPointPoint">
            <summary>Définit le shim de Line.FromPoints(Point point1, Point point2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.FromRThetaSingleSingle">
            <summary>Définit le shim de Line.FromRTheta(Single radius, Single theta)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.FromSlopeInterceptSingleSingle">
            <summary>Définit le shim de Line.FromSlopeIntercept(Single slope, Single intercept)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.GetAngleBetweenLinesLine">
            <summary>Définit le shim de Line.GetAngleBetweenLines(Line secondLine)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.GetHashCode">
            <summary>Définit le shim de Line.GetHashCode()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.GetIntersectionWithLine">
            <summary>Définit le shim de Line.GetIntersectionWith(Line secondLine)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.GetIntersectionWithLineSegment">
            <summary>Définit le shim de Line.GetIntersectionWith(LineSegment other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.InequalityOpLineLine">
            <summary>Définit le shim de Line.op_Inequality(Line line1, Line line2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.InterceptGet">
            <summary>Définit le shim de Line.get_Intercept()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.IsHorizontalGet">
            <summary>Définit le shim de Line.get_IsHorizontal()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.IsVerticalGet">
            <summary>Définit le shim de Line.get_IsVertical()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.SlopeGet">
            <summary>Définit le shim de Line.get_Slope()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLine.ToString">
            <summary>Définit le shim de Line.ToString()</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLineSegment">
            <summary>Type shim de AForge.Math.Geometry.LineSegment</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineSegment.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineSegment.#ctor(AForge.Math.Geometry.LineSegment)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.DistanceToPointPoint">
            <summary>Définit le shim de LineSegment.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.EndGet">
            <summary>Définit le shim de LineSegment.get_End()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.EqualsObject">
            <summary>Définit le shim de LineSegment.Equals(Object obj)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.GetHashCode01">
            <summary>Définit le shim de LineSegment.GetHashCode()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.GetIntersectionWithLine">
            <summary>Définit le shim de LineSegment.GetIntersectionWith(Line other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.GetIntersectionWithLineSegment">
            <summary>Définit le shim de LineSegment.GetIntersectionWith(LineSegment other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.LengthGet">
            <summary>Définit le shim de LineSegment.get_Length()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.StartGet">
            <summary>Définit le shim de LineSegment.get_Start()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.AllInstances.ToString01">
            <summary>Définit le shim de LineSegment.ToString()</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineSegment.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineSegment.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.ConstructorPointPoint">
            <summary>Définit le shim de LineSegment.LineSegment(Point start, Point end)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.DistanceToPointPoint">
            <summary>Définit le shim de LineSegment.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.EndGet">
            <summary>Définit le shim de LineSegment.get_End()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.EqualityOpLineSegmentLineSegment">
            <summary>Définit le shim de LineSegment.op_Equality(LineSegment line1, LineSegment line2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.EqualsObject">
            <summary>Définit le shim de LineSegment.Equals(Object obj)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.ExplicitOpLineSegmentLine">
            <summary>Définit le shim de LineSegment.op_Explicit(LineSegment segment)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.GetHashCode">
            <summary>Définit le shim de LineSegment.GetHashCode()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.GetIntersectionWithLine">
            <summary>Définit le shim de LineSegment.GetIntersectionWith(Line other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.GetIntersectionWithLineSegment">
            <summary>Définit le shim de LineSegment.GetIntersectionWith(LineSegment other)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.InequalityOpLineSegmentLineSegment">
            <summary>Définit le shim de LineSegment.op_Inequality(LineSegment line1, LineSegment line2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.LengthGet">
            <summary>Définit le shim de LineSegment.get_Length()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.StartGet">
            <summary>Définit le shim de LineSegment.get_Start()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineSegment.ToString">
            <summary>Définit le shim de LineSegment.ToString()</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer">
            <summary>Type shim de AForge.Math.Geometry.LineStraighteningOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.#ctor(AForge.Math.Geometry.LineStraighteningOptimizer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.AllInstances.MaxDistanceToRemoveGet">
            <summary>Définit le shim de LineStraighteningOptimizer.get_MaxDistanceToRemove()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.AllInstances.MaxDistanceToRemoveSetSingle">
            <summary>Définit le shim de LineStraighteningOptimizer.set_MaxDistanceToRemove(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.AllInstances.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de LineStraighteningOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.Bind(AForge.Math.Geometry.IShapeOptimizer)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.Constructor">
            <summary>Définit le shim de LineStraighteningOptimizer.LineStraighteningOptimizer()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.ConstructorSingle">
            <summary>Définit le shim de LineStraighteningOptimizer.LineStraighteningOptimizer(Single maxDistanceToRemove)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.MaxDistanceToRemoveGet">
            <summary>Définit le shim de LineStraighteningOptimizer.get_MaxDistanceToRemove()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.MaxDistanceToRemoveSetSingle">
            <summary>Définit le shim de LineStraighteningOptimizer.set_MaxDistanceToRemove(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimLineStraighteningOptimizer.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de LineStraighteningOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimPointsCloud">
            <summary>Type shim de AForge.Math.Geometry.PointsCloud</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPointsCloud.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPointsCloud.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPointsCloud.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.FindQuadrilateralCornersIEnumerableOfIntPoint">
            <summary>Définit le shim de PointsCloud.FindQuadrilateralCorners(IEnumerable`1&lt;IntPoint&gt; cloud)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetBoundingRectangleIEnumerableOfIntPointIntPointOutIntPointOut">
            <summary>Définit le shim de PointsCloud.GetBoundingRectangle(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint&amp; minXY, IntPoint&amp; maxXY)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetCenterOfGravityIEnumerableOfIntPoint">
            <summary>Définit le shim de PointsCloud.GetCenterOfGravity(IEnumerable`1&lt;IntPoint&gt; cloud)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetFurthestPointFromLineIEnumerableOfIntPointIntPointIntPoint">
            <summary>Définit le shim de PointsCloud.GetFurthestPointFromLine(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint linePoint1, IntPoint linePoint2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetFurthestPointFromLineIEnumerableOfIntPointIntPointIntPointSingleOut">
            <summary>Définit le shim de PointsCloud.GetFurthestPointFromLine(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint linePoint1, IntPoint linePoint2, Single&amp; distance)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetFurthestPointIEnumerableOfIntPointIntPoint">
            <summary>Définit le shim de PointsCloud.GetFurthestPoint(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint referencePoint)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetFurthestPointsFromLineIEnumerableOfIntPointIntPointIntPointIntPointOutIntPointOut">
            <summary>Définit le shim de PointsCloud.GetFurthestPointsFromLine(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint linePoint1, IntPoint linePoint2, IntPoint&amp; furthestPoint1, IntPoint&amp; furthestPoint2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.GetFurthestPointsFromLineIEnumerableOfIntPointIntPointIntPointIntPointOutSingleOutIntPointOutSingleOut">
            <summary>Définit le shim de PointsCloud.GetFurthestPointsFromLine(IEnumerable`1&lt;IntPoint&gt; cloud, IntPoint linePoint1, IntPoint linePoint2, IntPoint&amp; furthestPoint1, Single&amp; distance1, IntPoint&amp; furthestPoint2, Single&amp; distance2)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.QuadrilateralRelativeDistortionLimitGet">
            <summary>Définit le shim de PointsCloud.get_QuadrilateralRelativeDistortionLimit()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.QuadrilateralRelativeDistortionLimitSetSingle">
            <summary>Définit le shim de PointsCloud.set_QuadrilateralRelativeDistortionLimit(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.ShiftIListOfIntPointIntPoint">
            <summary>Définit le shim de PointsCloud.Shift(IList`1&lt;IntPoint&gt; cloud, IntPoint shift)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPointsCloud.StaticConstructor">
            <summary>Définit le shim de PointsCloud.PointsCloud()</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimPosit">
            <summary>Type shim de AForge.Math.Geometry.Posit</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPosit.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPosit.#ctor(AForge.Math.Geometry.Posit)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimPosit.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.AllInstances.EstimatePosePointArrayMatrix3x3OutVector3Out">
            <summary>Définit le shim de Posit.EstimatePose(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.AllInstances.FocalLengthGet">
            <summary>Définit le shim de Posit.get_FocalLength()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.AllInstances.FocalLengthSetSingle">
            <summary>Définit le shim de Posit.set_FocalLength(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.AllInstances.ModelGet">
            <summary>Définit le shim de Posit.get_Model()</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPosit.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimPosit.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.ConstructorVector3ArraySingle">
            <summary>Définit le shim de Posit.Posit(Vector3[] model, Single focalLength)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.EstimatePosePointArrayMatrix3x3OutVector3Out">
            <summary>Définit le shim de Posit.EstimatePose(Point[] points, Matrix3x3&amp; rotation, Vector3&amp; translation)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.FocalLengthGet">
            <summary>Définit le shim de Posit.get_FocalLength()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.FocalLengthSetSingle">
            <summary>Définit le shim de Posit.set_FocalLength(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimPosit.ModelGet">
            <summary>Définit le shim de Posit.get_Model()</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker">
            <summary>Type shim de AForge.Math.Geometry.SimpleShapeChecker</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.#ctor(AForge.Math.Geometry.SimpleShapeChecker)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.AngleErrorGet">
            <summary>Définit le shim de SimpleShapeChecker.get_AngleError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.AngleErrorSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_AngleError(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.CheckIfPointsFitShapeListOfIntPointListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckIfPointsFitShape(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.CheckPolygonSubTypeListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckPolygonSubType(List`1&lt;IntPoint&gt; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.CheckShapeTypeListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckShapeType(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.GetShapeCornersListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.GetShapeCorners(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsCircleListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsCircle(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsCircleListOfIntPointPointOutSingleOut">
            <summary>Définit le shim de SimpleShapeChecker.IsCircle(List`1&lt;IntPoint&gt; edgePoints, Point&amp; center, Single&amp; radius)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsConvexPolygonListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsConvexPolygon(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsQuadrilateralListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsQuadrilateral(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsQuadrilateralListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsQuadrilateral(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsTriangleListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsTriangle(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.IsTriangleListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsTriangle(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.LengthErrorGet">
            <summary>Définit le shim de SimpleShapeChecker.get_LengthError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.LengthErrorSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_LengthError(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.MinAcceptableDistortionGet">
            <summary>Définit le shim de SimpleShapeChecker.get_MinAcceptableDistortion()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.MinAcceptableDistortionSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_MinAcceptableDistortion(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.RelativeDistortionLimitGet">
            <summary>Définit le shim de SimpleShapeChecker.get_RelativeDistortionLimit()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AllInstances.RelativeDistortionLimitSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_RelativeDistortionLimit(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AngleErrorGet">
            <summary>Définit le shim de SimpleShapeChecker.get_AngleError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.AngleErrorSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_AngleError(Single value)</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.CheckIfPointsFitShapeListOfIntPointListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckIfPointsFitShape(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.CheckPolygonSubTypeListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckPolygonSubType(List`1&lt;IntPoint&gt; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.CheckShapeTypeListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.CheckShapeType(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.Constructor">
            <summary>Définit le shim de SimpleShapeChecker.SimpleShapeChecker()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.GetShapeCornersListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.GetShapeCorners(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsCircleListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsCircle(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsCircleListOfIntPointPointOutSingleOut">
            <summary>Définit le shim de SimpleShapeChecker.IsCircle(List`1&lt;IntPoint&gt; edgePoints, Point&amp; center, Single&amp; radius)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsConvexPolygonListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsConvexPolygon(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsQuadrilateralListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsQuadrilateral(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsQuadrilateralListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsQuadrilateral(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsTriangleListOfIntPoint">
            <summary>Définit le shim de SimpleShapeChecker.IsTriangle(List`1&lt;IntPoint&gt; edgePoints)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.IsTriangleListOfIntPointListOfIntPointOut">
            <summary>Définit le shim de SimpleShapeChecker.IsTriangle(List`1&lt;IntPoint&gt; edgePoints, List`1&lt;IntPoint&gt;&amp; corners)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.LengthErrorGet">
            <summary>Définit le shim de SimpleShapeChecker.get_LengthError()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.LengthErrorSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_LengthError(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.MinAcceptableDistortionGet">
            <summary>Définit le shim de SimpleShapeChecker.get_MinAcceptableDistortion()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.MinAcceptableDistortionSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_MinAcceptableDistortion(Single value)</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.RelativeDistortionLimitGet">
            <summary>Définit le shim de SimpleShapeChecker.get_RelativeDistortionLimit()</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.ShimSimpleShapeChecker.RelativeDistortionLimitSetSingle">
            <summary>Définit le shim de SimpleShapeChecker.set_RelativeDistortionLimit(Single value)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer">
            <summary>Type stub de AForge.Math.Geometry.ClosePointsMergingOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.#ctor(System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubClosePointsMergingOptimizer</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubClosePointsMergingOptimizer.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubCoplanarPosit">
            <summary>Type stub de AForge.Math.Geometry.CoplanarPosit</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubCoplanarPosit.#ctor(AForge.Math.Vector3[],System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubCoplanarPosit.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubCoplanarPosit.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCoplanarPosit</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubCoplanarPosit.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubCoplanarPosit.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer">
            <summary>Type stub de AForge.Math.Geometry.FlatAnglesOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.#ctor(System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubFlatAnglesOptimizer</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubFlatAnglesOptimizer.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubGrahamConvexHull">
            <summary>Type stub de AForge.Math.Geometry.GrahamConvexHull</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubGrahamConvexHull.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubGrahamConvexHull.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubGrahamConvexHull.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGrahamConvexHull</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubGrahamConvexHull.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubGrahamConvexHull.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubIConvexHullAlgorithm">
            <summary>Type stub de AForge.Math.Geometry.IConvexHullAlgorithm</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubIConvexHullAlgorithm.#ctor">
            <summary>Initialise une nouvelle instance de type StubIConvexHullAlgorithm</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubIConvexHullAlgorithm.AForge#Math#Geometry#IConvexHullAlgorithm#FindHull(System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Définit le stub de IConvexHullAlgorithm.FindHull(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="F:AForge.Math.Geometry.Fakes.StubIConvexHullAlgorithm.FindHullListOfIntPoint">
            <summary>Définit le stub de IConvexHullAlgorithm.FindHull(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubIShapeOptimizer">
            <summary>Type stub de AForge.Math.Geometry.IShapeOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubIShapeOptimizer.#ctor">
            <summary>Initialise une nouvelle instance de type StubIShapeOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubIShapeOptimizer.AForge#Math#Geometry#IShapeOptimizer#OptimizeShape(System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Définit le stub de IShapeOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="F:AForge.Math.Geometry.Fakes.StubIShapeOptimizer.OptimizeShapeListOfIntPoint">
            <summary>Définit le stub de IShapeOptimizer.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer">
            <summary>Type stub de AForge.Math.Geometry.LineStraighteningOptimizer</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.#ctor(System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubLineStraighteningOptimizer</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubLineStraighteningOptimizer.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubPosit">
            <summary>Type stub de AForge.Math.Geometry.Posit</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubPosit.#ctor(AForge.Math.Vector3[],System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubPosit.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubPosit.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubPosit</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubPosit.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubPosit.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker">
            <summary>Type stub de AForge.Math.Geometry.SimpleShapeChecker</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubSimpleShapeChecker</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Geometry.Fakes.StubSimpleShapeChecker.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimCosineDistance">
            <summary>Type shim de AForge.Math.Metrics.CosineDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineDistance.#ctor(AForge.Math.Metrics.CosineDistance)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimCosineDistance.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineDistance.AllInstances.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de CosineDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineDistance.Bind(AForge.Math.Metrics.IDistance)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineDistance.Constructor">
            <summary>Définit le shim de CosineDistance.CosineDistance()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de CosineDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimCosineSimilarity">
            <summary>Type shim de AForge.Math.Metrics.CosineSimilarity</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.#ctor(AForge.Math.Metrics.CosineSimilarity)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.AllInstances.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de CosineSimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.Bind(AForge.Math.Metrics.ISimilarity)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.Constructor">
            <summary>Définit le shim de CosineSimilarity.CosineSimilarity()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimCosineSimilarity.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de CosineSimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimEuclideanDistance">
            <summary>Type shim de AForge.Math.Metrics.EuclideanDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.#ctor(AForge.Math.Metrics.EuclideanDistance)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.AllInstances.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de EuclideanDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.Bind(AForge.Math.Metrics.IDistance)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.Constructor">
            <summary>Définit le shim de EuclideanDistance.EuclideanDistance()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de EuclideanDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity">
            <summary>Type shim de AForge.Math.Metrics.EuclideanSimilarity</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.#ctor(AForge.Math.Metrics.EuclideanSimilarity)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.AllInstances.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de EuclideanSimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.Bind(AForge.Math.Metrics.ISimilarity)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.Constructor">
            <summary>Définit le shim de EuclideanSimilarity.EuclideanSimilarity()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimEuclideanSimilarity.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de EuclideanSimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimHammingDistance">
            <summary>Type shim de AForge.Math.Metrics.HammingDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimHammingDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimHammingDistance.#ctor(AForge.Math.Metrics.HammingDistance)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimHammingDistance.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimHammingDistance.AllInstances.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de HammingDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimHammingDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimHammingDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimHammingDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimHammingDistance.Bind(AForge.Math.Metrics.IDistance)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimHammingDistance.Constructor">
            <summary>Définit le shim de HammingDistance.HammingDistance()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimHammingDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de HammingDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimJaccardDistance">
            <summary>Type shim de AForge.Math.Metrics.JaccardDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimJaccardDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimJaccardDistance.#ctor(AForge.Math.Metrics.JaccardDistance)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimJaccardDistance.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimJaccardDistance.AllInstances.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de JaccardDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimJaccardDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimJaccardDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimJaccardDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimJaccardDistance.Bind(AForge.Math.Metrics.IDistance)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimJaccardDistance.Constructor">
            <summary>Définit le shim de JaccardDistance.JaccardDistance()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimJaccardDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de JaccardDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimManhattanDistance">
            <summary>Type shim de AForge.Math.Metrics.ManhattanDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimManhattanDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimManhattanDistance.#ctor(AForge.Math.Metrics.ManhattanDistance)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimManhattanDistance.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimManhattanDistance.AllInstances.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de ManhattanDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimManhattanDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimManhattanDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimManhattanDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimManhattanDistance.Bind(AForge.Math.Metrics.IDistance)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimManhattanDistance.Constructor">
            <summary>Définit le shim de ManhattanDistance.ManhattanDistance()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimManhattanDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le shim de ManhattanDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation">
            <summary>Type shim de AForge.Math.Metrics.PearsonCorrelation</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.#ctor(AForge.Math.Metrics.PearsonCorrelation)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.AllInstances.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de PearsonCorrelation.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.Bind(AForge.Math.Metrics.ISimilarity)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.Constructor">
            <summary>Définit le shim de PearsonCorrelation.PearsonCorrelation()</summary>
        </member>
        <member name="P:AForge.Math.Metrics.Fakes.ShimPearsonCorrelation.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le shim de PearsonCorrelation.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.StubIDistance">
            <summary>Type stub de AForge.Math.Metrics.IDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.StubIDistance.#ctor">
            <summary>Initialise une nouvelle instance de type StubIDistance</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.StubIDistance.AForge#Math#Metrics#IDistance#GetDistance(System.Double[],System.Double[])">
            <summary>Définit le stub de IDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="F:AForge.Math.Metrics.Fakes.StubIDistance.GetDistanceDoubleArrayDoubleArray">
            <summary>Définit le stub de IDistance.GetDistance(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Metrics.Fakes.StubISimilarity">
            <summary>Type stub de AForge.Math.Metrics.ISimilarity</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.StubISimilarity.#ctor">
            <summary>Initialise une nouvelle instance de type StubISimilarity</summary>
        </member>
        <member name="M:AForge.Math.Metrics.Fakes.StubISimilarity.AForge#Math#Metrics#ISimilarity#GetSimilarityScore(System.Double[],System.Double[])">
            <summary>Définit le stub de ISimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="F:AForge.Math.Metrics.Fakes.StubISimilarity.GetSimilarityScoreDoubleArrayDoubleArray">
            <summary>Définit le stub de ISimilarity.GetSimilarityScore(Double[] p, Double[] q)</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimExponentialGenerator">
            <summary>Type shim de AForge.Math.Random.ExponentialGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimExponentialGenerator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimExponentialGenerator.#ctor(AForge.Math.Random.ExponentialGenerator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances.MeanGet">
            <summary>Définit le shim de ExponentialGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances.Next">
            <summary>Définit le shim de ExponentialGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances.RateGet">
            <summary>Définit le shim de ExponentialGenerator.get_Rate()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances.SetSeedInt32">
            <summary>Définit le shim de ExponentialGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.AllInstances.VarianceGet">
            <summary>Définit le shim de ExponentialGenerator.get_Variance()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimExponentialGenerator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimExponentialGenerator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimExponentialGenerator.Bind(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.ConstructorSingle">
            <summary>Définit le shim de ExponentialGenerator.ExponentialGenerator(Single rate)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.ConstructorSingleInt32">
            <summary>Définit le shim de ExponentialGenerator.ExponentialGenerator(Single rate, Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.MeanGet">
            <summary>Définit le shim de ExponentialGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.Next">
            <summary>Définit le shim de ExponentialGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.RateGet">
            <summary>Définit le shim de ExponentialGenerator.get_Rate()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.SetSeedInt32">
            <summary>Définit le shim de ExponentialGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimExponentialGenerator.VarianceGet">
            <summary>Définit le shim de ExponentialGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimGaussianGenerator">
            <summary>Type shim de AForge.Math.Random.GaussianGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimGaussianGenerator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimGaussianGenerator.#ctor(AForge.Math.Random.GaussianGenerator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances.MeanGet">
            <summary>Définit le shim de GaussianGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances.Next">
            <summary>Définit le shim de GaussianGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances.SetSeedInt32">
            <summary>Définit le shim de GaussianGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances.StdDevGet">
            <summary>Définit le shim de GaussianGenerator.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.AllInstances.VarianceGet">
            <summary>Définit le shim de GaussianGenerator.get_Variance()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimGaussianGenerator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimGaussianGenerator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimGaussianGenerator.Bind(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.ConstructorSingleSingle">
            <summary>Définit le shim de GaussianGenerator.GaussianGenerator(Single mean, Single stdDev)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.ConstructorSingleSingleInt32">
            <summary>Définit le shim de GaussianGenerator.GaussianGenerator(Single mean, Single stdDev, Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.MeanGet">
            <summary>Définit le shim de GaussianGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.Next">
            <summary>Définit le shim de GaussianGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.SetSeedInt32">
            <summary>Définit le shim de GaussianGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.StdDevGet">
            <summary>Définit le shim de GaussianGenerator.get_StdDev()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimGaussianGenerator.VarianceGet">
            <summary>Définit le shim de GaussianGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimStandardGenerator">
            <summary>Type shim de AForge.Math.Random.StandardGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimStandardGenerator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimStandardGenerator.#ctor(AForge.Math.Random.StandardGenerator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimStandardGenerator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.AllInstances.MeanGet">
            <summary>Définit le shim de StandardGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.AllInstances.Next">
            <summary>Définit le shim de StandardGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.AllInstances.SetSeedInt32">
            <summary>Définit le shim de StandardGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.AllInstances.VarianceGet">
            <summary>Définit le shim de StandardGenerator.get_Variance()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimStandardGenerator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimStandardGenerator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimStandardGenerator.Bind(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.Constructor">
            <summary>Définit le shim de StandardGenerator.StandardGenerator()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.ConstructorInt32">
            <summary>Définit le shim de StandardGenerator.StandardGenerator(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.MeanGet">
            <summary>Définit le shim de StandardGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.Next">
            <summary>Définit le shim de StandardGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.SetSeedInt32">
            <summary>Définit le shim de StandardGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimStandardGenerator.VarianceGet">
            <summary>Définit le shim de StandardGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimUniformGenerator">
            <summary>Type shim de AForge.Math.Random.UniformGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformGenerator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformGenerator.#ctor(AForge.Math.Random.UniformGenerator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances.MeanGet">
            <summary>Définit le shim de UniformGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances.Next">
            <summary>Définit le shim de UniformGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances.RangeGet">
            <summary>Définit le shim de UniformGenerator.get_Range()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances.SetSeedInt32">
            <summary>Définit le shim de UniformGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.AllInstances.VarianceGet">
            <summary>Définit le shim de UniformGenerator.get_Variance()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformGenerator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformGenerator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformGenerator.Bind(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.ConstructorRange">
            <summary>Définit le shim de UniformGenerator.UniformGenerator(Range range)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.ConstructorRangeInt32">
            <summary>Définit le shim de UniformGenerator.UniformGenerator(Range range, Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.MeanGet">
            <summary>Définit le shim de UniformGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.Next">
            <summary>Définit le shim de UniformGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.RangeGet">
            <summary>Définit le shim de UniformGenerator.get_Range()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.SetSeedInt32">
            <summary>Définit le shim de UniformGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformGenerator.VarianceGet">
            <summary>Définit le shim de UniformGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimUniformOneGenerator">
            <summary>Type shim de AForge.Math.Random.UniformOneGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformOneGenerator.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformOneGenerator.#ctor(AForge.Math.Random.UniformOneGenerator)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.ShimUniformOneGenerator.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.AllInstances.MeanGet">
            <summary>Définit le shim de UniformOneGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.AllInstances.Next">
            <summary>Définit le shim de UniformOneGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.AllInstances.SetSeedInt32">
            <summary>Définit le shim de UniformOneGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.AllInstances.VarianceGet">
            <summary>Définit le shim de UniformOneGenerator.get_Variance()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformOneGenerator.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformOneGenerator.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.ShimUniformOneGenerator.Bind(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.Constructor">
            <summary>Définit le shim de UniformOneGenerator.UniformOneGenerator()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.ConstructorInt32">
            <summary>Définit le shim de UniformOneGenerator.UniformOneGenerator(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.MeanGet">
            <summary>Définit le shim de UniformOneGenerator.get_Mean()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.Next">
            <summary>Définit le shim de UniformOneGenerator.Next()</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.SetSeedInt32">
            <summary>Définit le shim de UniformOneGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.ShimUniformOneGenerator.VarianceGet">
            <summary>Définit le shim de UniformOneGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubExponentialGenerator">
            <summary>Type stub de AForge.Math.Random.ExponentialGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubExponentialGenerator.#ctor(System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubExponentialGenerator.#ctor(System.Single,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubExponentialGenerator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubExponentialGenerator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubExponentialGenerator</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubExponentialGenerator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubExponentialGenerator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubGaussianGenerator">
            <summary>Type stub de AForge.Math.Random.GaussianGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubGaussianGenerator.#ctor(System.Single,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubGaussianGenerator.#ctor(System.Single,System.Single,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubGaussianGenerator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubGaussianGenerator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGaussianGenerator</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubGaussianGenerator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubGaussianGenerator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubIRandomNumberGenerator">
            <summary>Type stub de AForge.Math.Random.IRandomNumberGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.#ctor">
            <summary>Initialise une nouvelle instance de type StubIRandomNumberGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.AForge#Math#Random#IRandomNumberGenerator#Next">
            <summary>Définit le stub de IRandomNumberGenerator.Next()</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.AForge#Math#Random#IRandomNumberGenerator#SetSeed(System.Int32)">
            <summary>Définit le stub de IRandomNumberGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.AForge#Math#Random#IRandomNumberGenerator#Mean">
            <summary>Définit le stub de IRandomNumberGenerator.get_Mean()</summary>
        </member>
        <member name="F:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.MeanGet">
            <summary>Définit le stub de IRandomNumberGenerator.get_Mean()</summary>
        </member>
        <member name="F:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.Next">
            <summary>Définit le stub de IRandomNumberGenerator.Next()</summary>
        </member>
        <member name="F:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.SetSeedInt32">
            <summary>Définit le stub de IRandomNumberGenerator.SetSeed(Int32 seed)</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.AForge#Math#Random#IRandomNumberGenerator#Variance">
            <summary>Définit le stub de IRandomNumberGenerator.get_Variance()</summary>
        </member>
        <member name="F:AForge.Math.Random.Fakes.StubIRandomNumberGenerator.VarianceGet">
            <summary>Définit le stub de IRandomNumberGenerator.get_Variance()</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubStandardGenerator">
            <summary>Type stub de AForge.Math.Random.StandardGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubStandardGenerator.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubStandardGenerator.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubStandardGenerator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubStandardGenerator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubStandardGenerator</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubStandardGenerator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubStandardGenerator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubUniformGenerator">
            <summary>Type stub de AForge.Math.Random.UniformGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformGenerator.#ctor(AForge.Range)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformGenerator.#ctor(AForge.Range,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformGenerator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformGenerator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubUniformGenerator</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformGenerator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformGenerator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:AForge.Math.Random.Fakes.StubUniformOneGenerator">
            <summary>Type stub de AForge.Math.Random.UniformOneGenerator</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformOneGenerator.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformOneGenerator.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformOneGenerator.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:AForge.Math.Random.Fakes.StubUniformOneGenerator.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubUniformOneGenerator</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformOneGenerator.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:AForge.Math.Random.Fakes.StubUniformOneGenerator.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatNode">
            <summary>Type shim de Accord.IO.MatNode</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.#ctor(Accord.IO.MatNode)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatNode.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.CountGet">
            <summary>Définit le shim de MatNode.get_Count()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.FieldsGet">
            <summary>Définit le shim de MatNode.get_Fields()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.GetEnumerator">
            <summary>Définit le shim de MatNode.GetEnumerator()</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.AllInstances.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Accord.IO.MatNode,``0})">
            <summary>Définit le shim de MatNode.GetValue()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.ItemGetInt32">
            <summary>Définit le shim de MatNode.get_Item(Int32 name)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.ItemGetString">
            <summary>Définit le shim de MatNode.get_Item(String name)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.NameGet">
            <summary>Définit le shim de MatNode.get_Name()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.NameSetString">
            <summary>Définit le shim de MatNode.set_Name(String value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de MatNode.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.ValueGet">
            <summary>Définit le shim de MatNode.get_Value()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.ValueTypeGet">
            <summary>Définit le shim de MatNode.get_ValueType()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.read">
            <summary>Définit le shim de MatNode.read()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.AllInstances.readBinaryReader">
            <summary>Définit le shim de MatNode.read(BinaryReader reader)</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.Bind(System.Collections.Generic.IEnumerable{Accord.IO.MatNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.CountGet">
            <summary>Définit le shim de MatNode.get_Count()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.FieldsGet">
            <summary>Définit le shim de MatNode.get_Fields()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.GetEnumerator">
            <summary>Définit le shim de MatNode.GetEnumerator()</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatNode.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Définit le shim de MatNode.GetValue()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.ItemGetInt32">
            <summary>Définit le shim de MatNode.get_Item(Int32 name)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.ItemGetString">
            <summary>Définit le shim de MatNode.get_Item(String name)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.NameGet">
            <summary>Définit le shim de MatNode.get_Name()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.NameSetString">
            <summary>Définit le shim de MatNode.set_Name(String value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de MatNode.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.ValueGet">
            <summary>Définit le shim de MatNode.get_Value()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.ValueTypeGet">
            <summary>Définit le shim de MatNode.get_ValueType()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.alignBinaryReaderInt32">
            <summary>Définit le shim de MatNode.align(BinaryReader reader, Int32 rreadBytes)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.read">
            <summary>Définit le shim de MatNode.read()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatNode.readBinaryReader">
            <summary>Définit le shim de MatNode.read(BinaryReader reader)</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatReader">
            <summary>Type shim de Accord.IO.MatReader</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatReader.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatReader.#ctor(Accord.IO.MatReader)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatReader.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.BaseStreamGet">
            <summary>Définit le shim de MatReader.get_BaseStream()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.BigEndianGet">
            <summary>Définit le shim de MatReader.get_BigEndian()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.BigEndianSetBoolean">
            <summary>Définit le shim de MatReader.set_BigEndian(Boolean value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.DescriptionGet">
            <summary>Définit le shim de MatReader.get_Description()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.DescriptionSetString">
            <summary>Définit le shim de MatReader.set_Description(String value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.Dispose">
            <summary>Définit le shim de MatReader.Dispose()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.DisposeBoolean">
            <summary>Définit le shim de MatReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.FieldsGet">
            <summary>Définit le shim de MatReader.get_Fields()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.ItemGetInt32">
            <summary>Définit le shim de MatReader.get_Item(Int32 key)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.ItemGetString">
            <summary>Définit le shim de MatReader.get_Item(String key)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.TransposeGet">
            <summary>Définit le shim de MatReader.get_Transpose()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.VersionGet">
            <summary>Définit le shim de MatReader.get_Version()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.AllInstances.VersionSetInt32">
            <summary>Définit le shim de MatReader.set_Version(Int32 value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.BaseStreamGet">
            <summary>Définit le shim de MatReader.get_BaseStream()</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatReader.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatReader.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.BigEndianGet">
            <summary>Définit le shim de MatReader.get_BigEndian()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.BigEndianSetBoolean">
            <summary>Définit le shim de MatReader.set_BigEndian(Boolean value)</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatReader.Bind(System.IDisposable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.ConstructorBinaryReaderBoolean">
            <summary>Définit le shim de MatReader.MatReader(BinaryReader reader, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.ConstructorStream">
            <summary>Définit le shim de MatReader.MatReader(Stream input)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.ConstructorStreamBoolean">
            <summary>Définit le shim de MatReader.MatReader(Stream input, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.DescriptionGet">
            <summary>Définit le shim de MatReader.get_Description()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.DescriptionSetString">
            <summary>Définit le shim de MatReader.set_Description(String value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.Dispose">
            <summary>Définit le shim de MatReader.Dispose()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.DisposeBoolean">
            <summary>Définit le shim de MatReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.FieldsGet">
            <summary>Définit le shim de MatReader.get_Fields()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.ItemGetInt32">
            <summary>Définit le shim de MatReader.get_Item(Int32 key)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.ItemGetString">
            <summary>Définit le shim de MatReader.get_Item(String key)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.TransposeGet">
            <summary>Définit le shim de MatReader.get_Transpose()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.VersionGet">
            <summary>Définit le shim de MatReader.get_Version()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatReader.VersionSetInt32">
            <summary>Définit le shim de MatReader.set_Version(Int32 value)</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatSparse">
            <summary>Type shim de Accord.IO.MatSparse</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatSparse.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatSparse.#ctor(Accord.IO.MatSparse)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.IO.Fakes.ShimMatSparse.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.ColumnsGet">
            <summary>Définit le shim de MatSparse.get_Columns()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.ColumnsSetInt32Array">
            <summary>Définit le shim de MatSparse.set_Columns(Int32[] value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.RowsGet">
            <summary>Définit le shim de MatSparse.get_Rows()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.RowsSetInt32Array">
            <summary>Définit le shim de MatSparse.set_Rows(Int32[] value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.ValuesGet">
            <summary>Définit le shim de MatSparse.get_Values()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.AllInstances.ValuesSetArray">
            <summary>Définit le shim de MatSparse.set_Values(Array value)</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatSparse.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.IO.Fakes.ShimMatSparse.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.ColumnsGet">
            <summary>Définit le shim de MatSparse.get_Columns()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.ColumnsSetInt32Array">
            <summary>Définit le shim de MatSparse.set_Columns(Int32[] value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.ConstructorInt32ArrayInt32ArrayArray">
            <summary>Définit le shim de MatSparse.MatSparse(Int32[] ir, Int32[] ic, Array values)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.RowsGet">
            <summary>Définit le shim de MatSparse.get_Rows()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.RowsSetInt32Array">
            <summary>Définit le shim de MatSparse.set_Rows(Int32[] value)</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.ValuesGet">
            <summary>Définit le shim de MatSparse.get_Values()</summary>
        </member>
        <member name="P:Accord.IO.Fakes.ShimMatSparse.ValuesSetArray">
            <summary>Définit le shim de MatSparse.set_Values(Array value)</summary>
        </member>
        <member name="T:Accord.IO.Fakes.StubMatReader">
            <summary>Type stub de Accord.IO.MatReader</summary>
        </member>
        <member name="M:Accord.IO.Fakes.StubMatReader.#ctor(System.IO.Stream)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.IO.Fakes.StubMatReader.#ctor(System.IO.BinaryReader,System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.IO.Fakes.StubMatReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.IO.Fakes.StubMatReader.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.IO.Fakes.StubMatReader.Dispose(System.Boolean)">
            <summary>Définit le stub de MatReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Accord.IO.Fakes.StubMatReader.DisposeBoolean">
            <summary>Définit le stub de MatReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Accord.IO.Fakes.StubMatReader.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMatReader</summary>
        </member>
        <member name="P:Accord.IO.Fakes.StubMatReader.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.IO.Fakes.StubMatReader.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimArrayComparer`1">
            <summary>Type shim de Accord.Math.Comparers.ArrayComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.#ctor(Accord.Math.Comparers.ArrayComparer{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.AllInstances.EqualsT0ArrayT0Array">
            <summary>Définit le shim de ArrayComparer`1.Equals(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.AllInstances.GetHashCodeT0Array">
            <summary>Définit le shim de ArrayComparer`1.GetHashCode(!0[] obj)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.Constructor">
            <summary>Définit le shim de ArrayComparer`1.ArrayComparer`1()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.EqualsT0ArrayT0Array">
            <summary>Définit le shim de ArrayComparer`1.Equals(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimArrayComparer`1.GetHashCodeT0Array">
            <summary>Définit le shim de ArrayComparer`1.GetHashCode(!0[] obj)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimCustomComparer`1">
            <summary>Type shim de Accord.Math.Comparers.CustomComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.#ctor(Accord.Math.Comparers.CustomComparer{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.AllInstances.CompareT0T0">
            <summary>Définit le shim de CustomComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.AllInstances.EqualsT0T0">
            <summary>Définit le shim de CustomComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.AllInstances.GetHashCodeT0">
            <summary>Définit le shim de CustomComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.CompareT0T0">
            <summary>Définit le shim de CustomComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.ConstructorFuncOfT0T0Int32">
            <summary>Définit le shim de CustomComparer`1.CustomComparer`1(Func`3&lt;!0,!0,Int32&gt; comparer)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.EqualsT0T0">
            <summary>Définit le shim de CustomComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimCustomComparer`1.GetHashCodeT0">
            <summary>Définit le shim de CustomComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimElementComparer">
            <summary>Type shim de Accord.Math.Comparers.ElementComparer</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.#ctor(Accord.Math.Comparers.ElementComparer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimElementComparer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.Bind(System.Collections.Generic.IComparer{System.Double[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer.Bind(System.Collections.Generic.IEqualityComparer{System.Double[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer.Constructor">
            <summary>Définit le shim de ElementComparer.ElementComparer()</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimElementComparer`1">
            <summary>Type shim de Accord.Math.Comparers.ElementComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.#ctor(Accord.Math.Comparers.ElementComparer{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances.CompareT0ArrayT0Array">
            <summary>Définit le shim de ElementComparer`1.Compare(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances.EqualsT0ArrayT0Array">
            <summary>Définit le shim de ElementComparer`1.Equals(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances.GetHashCodeT0Array">
            <summary>Définit le shim de ElementComparer`1.GetHashCode(!0[] obj)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances.IndexGet">
            <summary>Définit le shim de ElementComparer`1.get_Index()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.AllInstances.IndexSetInt32">
            <summary>Définit le shim de ElementComparer`1.set_Index(Int32 value)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.Bind(System.Collections.Generic.IComparer{`0[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimElementComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.CompareT0ArrayT0Array">
            <summary>Définit le shim de ElementComparer`1.Compare(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.Constructor">
            <summary>Définit le shim de ElementComparer`1.ElementComparer`1()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.EqualsT0ArrayT0Array">
            <summary>Définit le shim de ElementComparer`1.Equals(!0[] x, !0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.GetHashCodeT0Array">
            <summary>Définit le shim de ElementComparer`1.GetHashCode(!0[] obj)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.IndexGet">
            <summary>Définit le shim de ElementComparer`1.get_Index()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimElementComparer`1.IndexSetInt32">
            <summary>Définit le shim de ElementComparer`1.set_Index(Int32 value)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimGeneralComparer">
            <summary>Type shim de Accord.Math.Comparers.GeneralComparer</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.#ctor(Accord.Math.Comparers.GeneralComparer)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimGeneralComparer.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.AllInstances.CompareDoubleDouble">
            <summary>Définit le shim de GeneralComparer.Compare(Double x, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.AllInstances.CompareInt32Int32">
            <summary>Définit le shim de GeneralComparer.Compare(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.AllInstances.DirectionGet">
            <summary>Définit le shim de GeneralComparer.get_Direction()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.AllInstances.DirectionSetComparerDirection">
            <summary>Définit le shim de GeneralComparer.set_Direction(ComparerDirection value)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.Bind(System.Collections.Generic.IComparer{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer.Bind(System.Collections.Generic.IComparer{System.Int32})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.CompareDoubleDouble">
            <summary>Définit le shim de GeneralComparer.Compare(Double x, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.CompareInt32Int32">
            <summary>Définit le shim de GeneralComparer.Compare(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.ConstructorComparerDirection">
            <summary>Définit le shim de GeneralComparer.GeneralComparer(ComparerDirection direction)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.ConstructorComparerDirectionBoolean">
            <summary>Définit le shim de GeneralComparer.GeneralComparer(ComparerDirection direction, Boolean useAbsoluteValues)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.ConstructorComparerDirectionFuncOfDoubleDouble">
            <summary>Définit le shim de GeneralComparer.GeneralComparer(ComparerDirection direction, Func`2&lt;Double,Double&gt; map)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.DirectionGet">
            <summary>Définit le shim de GeneralComparer.get_Direction()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer.DirectionSetComparerDirection">
            <summary>Définit le shim de GeneralComparer.set_Direction(ComparerDirection value)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer._ctorb__0Double">
            <summary>Définit le shim de GeneralComparer.&lt;.ctor&gt;b__0(Double a)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1">
            <summary>Type shim de Accord.Math.Comparers.GeneralComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.#ctor(Accord.Math.Comparers.GeneralComparer{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.AllInstances.CompareT0T0">
            <summary>Définit le shim de GeneralComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.AllInstances.DirectionGet">
            <summary>Définit le shim de GeneralComparer`1.get_Direction()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.AllInstances.DirectionSetComparerDirection">
            <summary>Définit le shim de GeneralComparer`1.set_Direction(ComparerDirection value)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.CompareT0T0">
            <summary>Définit le shim de GeneralComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.ConstructorComparerDirection">
            <summary>Définit le shim de GeneralComparer`1.GeneralComparer`1(ComparerDirection direction)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.DirectionGet">
            <summary>Définit le shim de GeneralComparer`1.get_Direction()</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimGeneralComparer`1.DirectionSetComparerDirection">
            <summary>Définit le shim de GeneralComparer`1.set_Direction(ComparerDirection value)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimStableComparer`1">
            <summary>Type shim de Accord.Math.Comparers.StableComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimStableComparer`1.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimStableComparer`1.#ctor(Accord.Math.Comparers.StableComparer{`0})">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.ShimStableComparer`1.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimStableComparer`1.AllInstances.CompareKeyValuePairOfInt32T0KeyValuePairOfInt32T0">
            <summary>Définit le shim de StableComparer`1.Compare(KeyValuePair`2&lt;Int32,!0&gt; x, KeyValuePair`2&lt;Int32,!0&gt; y)</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimStableComparer`1.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimStableComparer`1.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimStableComparer`1.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.ShimStableComparer`1.Bind(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{System.Int32,`0}})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimStableComparer`1.CompareKeyValuePairOfInt32T0KeyValuePairOfInt32T0">
            <summary>Définit le shim de StableComparer`1.Compare(KeyValuePair`2&lt;Int32,!0&gt; x, KeyValuePair`2&lt;Int32,!0&gt; y)</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.ShimStableComparer`1.ConstructorComparisonOfT0">
            <summary>Définit le shim de StableComparer`1.StableComparer`1(Comparison`1&lt;!0&gt; comparison)</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubArrayComparer`1">
            <summary>Type stub de Accord.Math.Comparers.ArrayComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubArrayComparer`1.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubArrayComparer`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubArrayComparer`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubArrayComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubArrayComparer`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubArrayComparer`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubCustomComparer`1">
            <summary>Type stub de Accord.Math.Comparers.CustomComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubCustomComparer`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubCustomComparer`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubCustomComparer`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCustomComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubCustomComparer`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubCustomComparer`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubElementComparer">
            <summary>Type stub de Accord.Math.Comparers.ElementComparer</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubElementComparer.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubElementComparer.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubElementComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubElementComparer`1">
            <summary>Type stub de Accord.Math.Comparers.ElementComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubElementComparer`1.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubElementComparer`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubElementComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubElementComparer`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubGeneralComparer">
            <summary>Type stub de Accord.Math.Comparers.GeneralComparer</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer.#ctor(Accord.Math.Comparers.ComparerDirection)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer.#ctor(Accord.Math.Comparers.ComparerDirection,System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer.#ctor(Accord.Math.Comparers.ComparerDirection,System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGeneralComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubGeneralComparer`1">
            <summary>Type stub de Accord.Math.Comparers.GeneralComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer`1.#ctor(Accord.Math.Comparers.ComparerDirection)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubGeneralComparer`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGeneralComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubGeneralComparer`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Comparers.Fakes.StubStableComparer`1">
            <summary>Type stub de Accord.Math.Comparers.StableComparer`1</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubStableComparer`1.#ctor(System.Comparison{`0})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubStableComparer`1.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Comparers.Fakes.StubStableComparer`1.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubStableComparer</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubStableComparer`1.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Comparers.Fakes.StubStableComparer`1.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Convergence.Fakes.ShimGeneralConvergence">
            <summary>Type shim de Accord.Math.Convergence.GeneralConvergence</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.#ctor(Accord.Math.Convergence.GeneralConvergence)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AbsoluteFunctionToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_AbsoluteFunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AbsoluteFunctionToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_AbsoluteFunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AbsoluteParameterToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_AbsoluteParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AbsoluteParameterToleranceSetDoubleArray">
            <summary>Définit le shim de GeneralConvergence.set_AbsoluteParameterTolerance(Double[] value)</summary>
        </member>
        <member name="T:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.AbsoluteFunctionToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_AbsoluteFunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.AbsoluteFunctionToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_AbsoluteFunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.AbsoluteParameterToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_AbsoluteParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.AbsoluteParameterToleranceSetDoubleArray">
            <summary>Définit le shim de GeneralConvergence.set_AbsoluteParameterTolerance(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.CancelGet">
            <summary>Définit le shim de GeneralConvergence.get_Cancel()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.CancelSetBoolean">
            <summary>Définit le shim de GeneralConvergence.set_Cancel(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.EvaluationsGet">
            <summary>Définit le shim de GeneralConvergence.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.EvaluationsSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_Evaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.MaximumEvaluationsGet">
            <summary>Définit le shim de GeneralConvergence.get_MaximumEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.MaximumEvaluationsSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_MaximumEvaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.MaximumTimeGet">
            <summary>Définit le shim de GeneralConvergence.get_MaximumTime()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.MaximumTimeSetTimeSpan">
            <summary>Définit le shim de GeneralConvergence.set_MaximumTime(TimeSpan value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de GeneralConvergence.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.RelativeFunctionToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_RelativeFunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.RelativeFunctionToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_RelativeFunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.RelativeParameterToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_RelativeParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.RelativeParameterToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_RelativeParameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.StartTimeGet">
            <summary>Définit le shim de GeneralConvergence.get_StartTime()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.AllInstances.StartTimeSetDateTime">
            <summary>Définit le shim de GeneralConvergence.set_StartTime(DateTime value)</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.CancelGet">
            <summary>Définit le shim de GeneralConvergence.get_Cancel()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.CancelSetBoolean">
            <summary>Définit le shim de GeneralConvergence.set_Cancel(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.ConstructorInt32">
            <summary>Définit le shim de GeneralConvergence.GeneralConvergence(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.EvaluationsGet">
            <summary>Définit le shim de GeneralConvergence.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.EvaluationsSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_Evaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.MaximumEvaluationsGet">
            <summary>Définit le shim de GeneralConvergence.get_MaximumEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.MaximumEvaluationsSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_MaximumEvaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.MaximumTimeGet">
            <summary>Définit le shim de GeneralConvergence.get_MaximumTime()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.MaximumTimeSetTimeSpan">
            <summary>Définit le shim de GeneralConvergence.set_MaximumTime(TimeSpan value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.NumberOfVariablesGet">
            <summary>Définit le shim de GeneralConvergence.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.NumberOfVariablesSetInt32">
            <summary>Définit le shim de GeneralConvergence.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.RelativeFunctionToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_RelativeFunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.RelativeFunctionToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_RelativeFunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.RelativeParameterToleranceGet">
            <summary>Définit le shim de GeneralConvergence.get_RelativeParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.RelativeParameterToleranceSetDouble">
            <summary>Définit le shim de GeneralConvergence.set_RelativeParameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.StartTimeGet">
            <summary>Définit le shim de GeneralConvergence.get_StartTime()</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.ShimGeneralConvergence.StartTimeSetDateTime">
            <summary>Définit le shim de GeneralConvergence.set_StartTime(DateTime value)</summary>
        </member>
        <member name="T:Accord.Math.Convergence.Fakes.StubGeneralConvergence">
            <summary>Type stub de Accord.Math.Convergence.GeneralConvergence</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.StubGeneralConvergence.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.StubGeneralConvergence.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Convergence.Fakes.StubGeneralConvergence.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGeneralConvergence</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.StubGeneralConvergence.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Convergence.Fakes.StubGeneralConvergence.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.CholeskyDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.#ctor(Accord.Math.Decompositions.CholeskyDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.Clone">
            <summary>Définit le shim de CholeskyDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.DeterminantGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de CholeskyDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.LDLtDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.LDLt(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.LLtDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.LLt(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecomposition.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.NonsingularGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecomposition.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.SolveDoubleArrayBoolean">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.SolveDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.SolveDoubleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.AllInstances.SymmetricGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Symmetric()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Clone">
            <summary>Définit le shim de CholeskyDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Constructor">
            <summary>Définit le shim de CholeskyDecomposition.CholeskyDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.ConstructorDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.CholeskyDecomposition(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecomposition.CholeskyDecomposition(Double[,] value, Boolean robust)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.ConstructorDoubleMdArray2BooleanBoolean">
            <summary>Définit le shim de CholeskyDecomposition.CholeskyDecomposition(Double[,] value, Boolean robust, Boolean lowerTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.DeterminantGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.DiagonalGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.FromLeftTriangularMatrixDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.FromLeftTriangularMatrix(Double[,] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.Inverse">
            <summary>Définit le shim de CholeskyDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.LDLtDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.LDLt(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.LLtDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.LLt(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecomposition.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.NonsingularGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecomposition.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.SolveDoubleArray">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.SolveDoubleArrayBoolean">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.SolveDoubleMdArray2">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.SolveDoubleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecomposition.Solve(Double[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecomposition.SymmetricGet">
            <summary>Définit le shim de CholeskyDecomposition.get_Symmetric()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.CholeskyDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.#ctor(Accord.Math.Decompositions.CholeskyDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de CholeskyDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.DeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.DiagonalGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de CholeskyDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.LDLtDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.LDLt(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.LLtDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.LLt(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.NonsingularGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.SolveDecimalArrayBoolean">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.SolveDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.SolveDecimalMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.AllInstances.SymmetricGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Symmetric()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Clone">
            <summary>Définit le shim de CholeskyDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Constructor">
            <summary>Définit le shim de CholeskyDecompositionD.CholeskyDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.ConstructorDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.CholeskyDecompositionD(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.ConstructorDecimalMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionD.CholeskyDecompositionD(Decimal[,] value, Boolean robust)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.ConstructorDecimalMdArray2BooleanBoolean">
            <summary>Définit le shim de CholeskyDecompositionD.CholeskyDecompositionD(Decimal[,] value, Boolean robust, Boolean lowerTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.DeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.DiagonalGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.FromLeftTriangularMatrixDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.FromLeftTriangularMatrix(Decimal[,] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.Inverse">
            <summary>Définit le shim de CholeskyDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.LDLtDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.LDLt(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.LLtDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.LLt(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.NonsingularGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.SolveDecimalArrayBoolean">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.SolveDecimalMdArray2">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.SolveDecimalMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionD.Solve(Decimal[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionD.SymmetricGet">
            <summary>Définit le shim de CholeskyDecompositionD.get_Symmetric()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.CholeskyDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.#ctor(Accord.Math.Decompositions.CholeskyDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de CholeskyDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.DeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de CholeskyDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.LDLtSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.LDLt(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.LLtSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.LLt(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.NonsingularGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.SolveSingleArrayBoolean">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.SolveSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.SolveSingleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.AllInstances.SymmetricGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Symmetric()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Clone">
            <summary>Définit le shim de CholeskyDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Constructor">
            <summary>Définit le shim de CholeskyDecompositionF.CholeskyDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.ConstructorSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.CholeskyDecompositionF(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.ConstructorSingleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionF.CholeskyDecompositionF(Single[,] value, Boolean robust)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.ConstructorSingleMdArray2BooleanBoolean">
            <summary>Définit le shim de CholeskyDecompositionF.CholeskyDecompositionF(Single[,] value, Boolean robust, Boolean lowerTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.DeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.DiagonalGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.FromLeftTriangularMatrixSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.FromLeftTriangularMatrix(Single[,] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.Inverse">
            <summary>Définit le shim de CholeskyDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.LDLtSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.LDLt(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.LLtSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.LLt(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.LeftTriangularFactorGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.NonsingularGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.PositiveDefiniteGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.SolveSingleArray">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.SolveSingleArrayBoolean">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.SolveSingleMdArray2">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.SolveSingleMdArray2Boolean">
            <summary>Définit le shim de CholeskyDecompositionF.Solve(Single[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimCholeskyDecompositionF.SymmetricGet">
            <summary>Définit le shim de CholeskyDecompositionF.get_Symmetric()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.EigenvalueDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.#ctor(Accord.Math.Decompositions.EigenvalueDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.Clone">
            <summary>Définit le shim de EigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.EigenvectorsGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.RealEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.hqr2">
            <summary>Définit le shim de EigenvalueDecomposition.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.orthes">
            <summary>Définit le shim de EigenvalueDecomposition.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.tql2">
            <summary>Définit le shim de EigenvalueDecomposition.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.AllInstances.tred2">
            <summary>Définit le shim de EigenvalueDecomposition.tred2()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.Clone">
            <summary>Définit le shim de EigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.Constructor">
            <summary>Définit le shim de EigenvalueDecomposition.EigenvalueDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.ConstructorDoubleMdArray2">
            <summary>Définit le shim de EigenvalueDecomposition.EigenvalueDecomposition(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de EigenvalueDecomposition.EigenvalueDecomposition(Double[,] value, Boolean assumeSymmetric)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.ConstructorDoubleMdArray2BooleanBoolean">
            <summary>Définit le shim de EigenvalueDecomposition.EigenvalueDecomposition(Double[,] value, Boolean assumeSymmetric, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.EigenvectorsGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.RealEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.cdivDoubleDoubleDoubleDoubleDoubleOutDoubleOut">
            <summary>Définit le shim de EigenvalueDecomposition.cdiv(Double xr, Double xi, Double yr, Double yi, Double&amp; cdivr, Double&amp; cdivi)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.hqr2">
            <summary>Définit le shim de EigenvalueDecomposition.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.orthes">
            <summary>Définit le shim de EigenvalueDecomposition.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.tql2">
            <summary>Définit le shim de EigenvalueDecomposition.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecomposition.tred2">
            <summary>Définit le shim de EigenvalueDecomposition.tred2()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.EigenvalueDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.#ctor(Accord.Math.Decompositions.EigenvalueDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de EigenvalueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.EigenvectorsGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.RealEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.hqr2">
            <summary>Définit le shim de EigenvalueDecompositionF.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.orthes">
            <summary>Définit le shim de EigenvalueDecompositionF.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.tql2">
            <summary>Définit le shim de EigenvalueDecompositionF.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.AllInstances.tred2">
            <summary>Définit le shim de EigenvalueDecompositionF.tred2()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.Clone">
            <summary>Définit le shim de EigenvalueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.Constructor">
            <summary>Définit le shim de EigenvalueDecompositionF.EigenvalueDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.ConstructorSingleMdArray2">
            <summary>Définit le shim de EigenvalueDecompositionF.EigenvalueDecompositionF(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.ConstructorSingleMdArray2Boolean">
            <summary>Définit le shim de EigenvalueDecompositionF.EigenvalueDecompositionF(Single[,] value, Boolean assumeSymmetric)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.ConstructorSingleMdArray2BooleanBoolean">
            <summary>Définit le shim de EigenvalueDecompositionF.EigenvalueDecompositionF(Single[,] value, Boolean assumeSymmetric, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.EigenvectorsGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.RealEigenvaluesGet">
            <summary>Définit le shim de EigenvalueDecompositionF.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.cdivSingleSingleSingleSingleSingleOutSingleOut">
            <summary>Définit le shim de EigenvalueDecompositionF.cdiv(Single xr, Single xi, Single yr, Single yi, Single&amp; cdivr, Single&amp; cdivi)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.hqr2">
            <summary>Définit le shim de EigenvalueDecompositionF.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.orthes">
            <summary>Définit le shim de EigenvalueDecompositionF.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.tql2">
            <summary>Définit le shim de EigenvalueDecompositionF.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimEigenvalueDecompositionF.tred2">
            <summary>Définit le shim de EigenvalueDecompositionF.tred2()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.GeneralizedEigenvalueDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.#ctor(Accord.Math.Decompositions.GeneralizedEigenvalueDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.BetasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_Betas()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.Clone">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.EigenvectorsGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.ImaginaryAlphasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_ImaginaryAlphas()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.IsDegenerateGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_IsDegenerate()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.IsSingularGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.RealAlphasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_RealAlphas()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.AllInstances.RealEigenvaluesGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.BetasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_Betas()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.Clone">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.Constructor">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.GeneralizedEigenvalueDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.ConstructorDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.GeneralizedEigenvalueDecomposition(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.EigenvectorsGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.ImaginaryAlphasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_ImaginaryAlphas()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.IsDegenerateGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_IsDegenerate()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.IsSingularGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.RealAlphasGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_RealAlphas()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.RealEigenvaluesGet">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.qzhesInt32DoubleMdArray2DoubleMdArray2BooleanDoubleMdArray2">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.qzhes(Int32 n, Double[,] a, Double[,] b, Boolean matz, Double[,] z)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.qzitInt32DoubleMdArray2DoubleMdArray2DoubleBooleanDoubleMdArray2Int32Ref">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.qzit(Int32 n, Double[,] a, Double[,] b, Double eps1, Boolean matz, Double[,] z, Int32&amp; ierr)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.qzvalInt32DoubleMdArray2DoubleMdArray2DoubleArrayDoubleArrayDoubleArrayBooleanDoubleMdArray2">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.qzval(Int32 n, Double[,] a, Double[,] b, Double[] alfr, Double[] alfi, Double[] beta, Boolean matz, Double[,] z)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGeneralizedEigenvalueDecomposition.qzvecInt32DoubleMdArray2DoubleMdArray2DoubleArrayDoubleArrayDoubleArrayDoubleMdArray2">
            <summary>Définit le shim de GeneralizedEigenvalueDecomposition.qzvec(Int32 n, Double[,] a, Double[,] b, Double[] alfr, Double[] alfi, Double[] beta, Double[,] z)</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization">
            <summary>Type shim de Accord.Math.Decompositions.GramSchmidtOrthogonalization</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.#ctor(Accord.Math.Decompositions.GramSchmidtOrthogonalization)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de GramSchmidtOrthogonalization.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de GramSchmidtOrthogonalization.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.ConstructorDoubleMdArray2">
            <summary>Définit le shim de GramSchmidtOrthogonalization.GramSchmidtOrthogonalization(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de GramSchmidtOrthogonalization.GramSchmidtOrthogonalization(Double[,] value, Boolean modified)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.OrthogonalFactorGet">
            <summary>Définit le shim de GramSchmidtOrthogonalization.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimGramSchmidtOrthogonalization.UpperTriangularFactorGet">
            <summary>Définit le shim de GramSchmidtOrthogonalization.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.JaggedCholeskyDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.#ctor(Accord.Math.Decompositions.JaggedCholeskyDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.Clone">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.InverseDiagonalDoubleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseDiagonal(Double[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.LDLtDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.LDLt(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.LLtDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.LLt(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.SolveDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.AllInstances.SolveDoubleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[] value, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Clone">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Constructor">
            <summary>Définit le shim de JaggedCholeskyDecomposition.JaggedCholeskyDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.ConstructorDoubleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.JaggedCholeskyDecomposition(Double[][] value, Boolean robust, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.FromLeftTriangularMatrixDoubleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecomposition.FromLeftTriangularMatrix(Double[][] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.InverseDiagonalDoubleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseDiagonal(Double[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.LDLtDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.LDLt(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.LLtDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.LLt(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecomposition.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.SolveDoubleArray">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.SolveDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecomposition.SolveDoubleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecomposition.Solve(Double[] value, Boolean inPlace)</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.JaggedCholeskyDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.#ctor(Accord.Math.Decompositions.JaggedCholeskyDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.InverseDiagonalDecimalArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseDiagonal(Decimal[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.LDLtDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.LDLt(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.LLtDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.LLt(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.SolveDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.AllInstances.SolveDecimalArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[] value, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Clone">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Constructor">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.JaggedCholeskyDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.ConstructorDecimalArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.JaggedCholeskyDecompositionD(Decimal[][] value, Boolean robust, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.FromLeftTriangularMatrixDecimalArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.FromLeftTriangularMatrix(Decimal[][] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.InverseDiagonalDecimalArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseDiagonal(Decimal[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.LDLtDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.LDLt(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.LLtDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.LLt(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.SolveDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionD.SolveDecimalArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionD.Solve(Decimal[] value, Boolean inPlace)</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.JaggedCholeskyDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.#ctor(Accord.Math.Decompositions.JaggedCholeskyDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.InverseDiagonalSingleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseDiagonal(Single[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.LDLtSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.LDLt(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.LLtSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.LLt(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.SolveSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.AllInstances.SolveSingleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[] value, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Clone">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Constructor">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.JaggedCholeskyDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.ConstructorSingleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.JaggedCholeskyDecompositionF(Single[][] value, Boolean robust, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.DeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.DiagonalGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.FromLeftTriangularMatrixSingleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.FromLeftTriangularMatrix(Single[][] leftTriangular)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.Inverse">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.InverseDiagonalBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseDiagonal(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.InverseDiagonalSingleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseDiagonal(Single[] result, Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.InverseTraceBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.InverseTrace(Boolean destroy)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.IsNotDefinedGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_IsNotDefined()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.LDLtSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.LDLt(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.LLtSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.LLt(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.LeftTriangularFactorGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_LeftTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.NonsingularGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.PositiveDefiniteGet">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.get_PositiveDefinite()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.SolveSingleArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.SolveSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[][] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedCholeskyDecompositionF.SolveSingleArrayBoolean">
            <summary>Définit le shim de JaggedCholeskyDecompositionF.Solve(Single[] value, Boolean inPlace)</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.JaggedEigenvalueDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.#ctor(Accord.Math.Decompositions.JaggedEigenvalueDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.Clone">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.EigenvectorsGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.RealEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.hqr2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.orthes">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.tql2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.AllInstances.tred2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.tred2()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.Clone">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.Constructor">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.JaggedEigenvalueDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.ConstructorDoubleArrayArray">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.JaggedEigenvalueDecomposition(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.ConstructorDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.JaggedEigenvalueDecomposition(Double[][] value, Boolean assumeSymmetric)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.ConstructorDoubleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.JaggedEigenvalueDecomposition(Double[][] value, Boolean assumeSymmetric, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.EigenvectorsGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.RealEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.cdivDoubleDoubleDoubleDoubleDoubleOutDoubleOut">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.cdiv(Double xr, Double xi, Double yr, Double yi, Double&amp; cdivr, Double&amp; cdivi)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.hqr2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.orthes">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.tql2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecomposition.tred2">
            <summary>Définit le shim de JaggedEigenvalueDecomposition.tred2()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.JaggedEigenvalueDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.#ctor(Accord.Math.Decompositions.JaggedEigenvalueDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.EigenvectorsGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.RealEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.hqr2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.orthes">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.tql2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.AllInstances.tred2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.tred2()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.Clone">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.Constructor">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.JaggedEigenvalueDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.ConstructorSingleArrayArray">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.JaggedEigenvalueDecompositionF(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.ConstructorSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.JaggedEigenvalueDecompositionF(Single[][] value, Boolean assumeSymmetric)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.ConstructorSingleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.JaggedEigenvalueDecompositionF(Single[][] value, Boolean assumeSymmetric, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.EigenvectorsGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_Eigenvectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.ImaginaryEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_ImaginaryEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.RealEigenvaluesGet">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.get_RealEigenvalues()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.cdivSingleSingleSingleSingleSingleOutSingleOut">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.cdiv(Single xr, Single xi, Single yr, Single yi, Single&amp; cdivr, Single&amp; cdivi)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.hqr2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.hqr2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.orthes">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.orthes()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.tql2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.tql2()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedEigenvalueDecompositionF.tred2">
            <summary>Définit le shim de JaggedEigenvalueDecompositionF.tred2()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.JaggedLuDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.#ctor(Accord.Math.Decompositions.JaggedLuDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.Clone">
            <summary>Définit le shim de JaggedLuDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de JaggedLuDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de JaggedLuDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedLuDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.SolveTransposeDoubleArrayArray">
            <summary>Définit le shim de JaggedLuDecomposition.SolveTranspose(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Clone">
            <summary>Définit le shim de JaggedLuDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Constructor">
            <summary>Définit le shim de JaggedLuDecomposition.JaggedLuDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.ConstructorDoubleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedLuDecomposition.JaggedLuDecomposition(Double[][] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.Inverse">
            <summary>Définit le shim de JaggedLuDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.SolveDoubleArray">
            <summary>Définit le shim de JaggedLuDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedLuDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.SolveTransposeDoubleArrayArray">
            <summary>Définit le shim de JaggedLuDecomposition.SolveTranspose(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecomposition.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.JaggedLuDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.#ctor(Accord.Math.Decompositions.JaggedLuDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de JaggedLuDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de JaggedLuDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de JaggedLuDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.SolveTransposeDecimalArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionD.SolveTranspose(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Clone">
            <summary>Définit le shim de JaggedLuDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Constructor">
            <summary>Définit le shim de JaggedLuDecompositionD.JaggedLuDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.ConstructorDecimalArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedLuDecompositionD.JaggedLuDecompositionD(Decimal[][] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.Inverse">
            <summary>Définit le shim de JaggedLuDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de JaggedLuDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.SolveTransposeDecimalArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionD.SolveTranspose(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionD.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.JaggedLuDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.#ctor(Accord.Math.Decompositions.JaggedLuDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de JaggedLuDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de JaggedLuDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de JaggedLuDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.SolveTransposeSingleArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionF.SolveTranspose(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Clone">
            <summary>Définit le shim de JaggedLuDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Constructor">
            <summary>Définit le shim de JaggedLuDecompositionF.JaggedLuDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.ConstructorSingleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedLuDecompositionF.JaggedLuDecompositionF(Single[][] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.DeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.Inverse">
            <summary>Définit le shim de JaggedLuDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.LowerTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.NonsingularGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.PivotPermutationVectorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.SolveSingleArray">
            <summary>Définit le shim de JaggedLuDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.SolveTransposeSingleArrayArray">
            <summary>Définit le shim de JaggedLuDecompositionF.SolveTranspose(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedLuDecompositionF.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedLuDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.JaggedQrDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.#ctor(Accord.Math.Decompositions.JaggedQrDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.Clone">
            <summary>Définit le shim de JaggedQrDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.FullRankGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de JaggedQrDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de JaggedQrDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedQrDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.SolveTransposeDoubleArrayArray">
            <summary>Définit le shim de JaggedQrDecomposition.SolveTranspose(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Clone">
            <summary>Définit le shim de JaggedQrDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Constructor">
            <summary>Définit le shim de JaggedQrDecomposition.JaggedQrDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.ConstructorDoubleArrayArray">
            <summary>Définit le shim de JaggedQrDecomposition.JaggedQrDecomposition(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.ConstructorDoubleArrayArrayBoolean">
            <summary>Définit le shim de JaggedQrDecomposition.JaggedQrDecomposition(Double[][] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.FullRankGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.Inverse">
            <summary>Définit le shim de JaggedQrDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.SolveDoubleArray">
            <summary>Définit le shim de JaggedQrDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedQrDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.SolveTransposeDoubleArrayArray">
            <summary>Définit le shim de JaggedQrDecomposition.SolveTranspose(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecomposition.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.JaggedQrDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.#ctor(Accord.Math.Decompositions.JaggedQrDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de JaggedQrDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.FullRankGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de JaggedQrDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de JaggedQrDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.SolveTransposeDecimalArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionD.SolveTranspose(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Clone">
            <summary>Définit le shim de JaggedQrDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Constructor">
            <summary>Définit le shim de JaggedQrDecompositionD.JaggedQrDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.ConstructorDecimalArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionD.JaggedQrDecompositionD(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.ConstructorDecimalArrayArrayBoolean">
            <summary>Définit le shim de JaggedQrDecompositionD.JaggedQrDecompositionD(Decimal[][] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.FullRankGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.Inverse">
            <summary>Définit le shim de JaggedQrDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de JaggedQrDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.SolveDecimalArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionD.Solve(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.SolveTransposeDecimalArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionD.SolveTranspose(Decimal[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionD.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.JaggedQrDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.#ctor(Accord.Math.Decompositions.JaggedQrDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de JaggedQrDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.FullRankGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de JaggedQrDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de JaggedQrDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.SolveTransposeSingleArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionF.SolveTranspose(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Clone">
            <summary>Définit le shim de JaggedQrDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Constructor">
            <summary>Définit le shim de JaggedQrDecompositionF.JaggedQrDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.ConstructorSingleArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionF.JaggedQrDecompositionF(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.ConstructorSingleArrayArrayBoolean">
            <summary>Définit le shim de JaggedQrDecompositionF.JaggedQrDecompositionF(Single[][] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.DiagonalGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.FullRankGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.Inverse">
            <summary>Définit le shim de JaggedQrDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.OrthogonalFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.SolveSingleArray">
            <summary>Définit le shim de JaggedQrDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.SolveTransposeSingleArrayArray">
            <summary>Définit le shim de JaggedQrDecompositionF.SolveTranspose(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedQrDecompositionF.UpperTriangularFactorGet">
            <summary>Définit le shim de JaggedQrDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.JaggedSingularValueDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.#ctor(Accord.Math.Decompositions.JaggedSingularValueDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AbsoluteDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.AbsoluteDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.Clone">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.ConditionGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.IsSingularGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.LeftSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.LogPseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.OrderingGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.PseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.RankGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.RightSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.SolveForDiagonalDoubleArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.SolveForDiagonal(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.ThresholdGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.AllInstances.TwoNormGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_TwoNorm()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Clone">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ConditionGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Constructor">
            <summary>Définit le shim de JaggedSingularValueDecomposition.JaggedSingularValueDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ConstructorDoubleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.JaggedSingularValueDecomposition(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ConstructorDoubleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecomposition.JaggedSingularValueDecomposition(Double[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ConstructorDoubleArrayArrayBooleanBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecomposition.JaggedSingularValueDecomposition(Double[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ConstructorDoubleArrayArrayBooleanBooleanBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecomposition.JaggedSingularValueDecomposition(Double[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.DiagonalGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.Inverse">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.IsSingularGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.LeftSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.LogDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.LogPseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.OrderingGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.PseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.RankGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.RightSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.SolveDoubleArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.SolveDoubleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.Solve(Double[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.SolveForDiagonalDoubleArray">
            <summary>Définit le shim de JaggedSingularValueDecomposition.SolveForDiagonal(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.ThresholdGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecomposition.TwoNormGet">
            <summary>Définit le shim de JaggedSingularValueDecomposition.get_TwoNorm()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.JaggedSingularValueDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.#ctor(Accord.Math.Decompositions.JaggedSingularValueDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AbsoluteDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.AbsoluteDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.ConditionGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.IsSingularGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.LeftSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.LogPseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.OrderingGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.PseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.RankGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.RightSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.SolveForDiagonalSingleArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.SolveForDiagonal(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.ThresholdGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.AllInstances.TwoNormGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_TwoNorm()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Bind(Accord.Math.Decompositions.ISolverArrayDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Clone">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ConditionGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Constructor">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.JaggedSingularValueDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ConstructorSingleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.JaggedSingularValueDecompositionF(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ConstructorSingleArrayArrayBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.JaggedSingularValueDecompositionF(Single[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ConstructorSingleArrayArrayBooleanBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.JaggedSingularValueDecompositionF(Single[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ConstructorSingleArrayArrayBooleanBooleanBooleanBoolean">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.JaggedSingularValueDecompositionF(Single[][] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.DiagonalGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.Inverse">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.IsSingularGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.LeftSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.LogPseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.OrderingGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.PseudoDeterminantGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.RankGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.RightSingularVectorsGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.SolveForDiagonalSingleArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.SolveForDiagonal(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.SolveSingleArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.SolveSingleArrayArray">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.Solve(Single[][] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.ThresholdGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimJaggedSingularValueDecompositionF.TwoNormGet">
            <summary>Définit le shim de JaggedSingularValueDecompositionF.get_TwoNorm()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.LuDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.#ctor(Accord.Math.Decompositions.LuDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.Clone">
            <summary>Définit le shim de LuDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.DeterminantGet">
            <summary>Définit le shim de LuDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de LuDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de LuDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecomposition.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.NonsingularGet">
            <summary>Définit le shim de LuDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecomposition.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de LuDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.SolveDoubleMdArray2">
            <summary>Définit le shim de LuDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.SolveTransposeDoubleMdArray2">
            <summary>Définit le shim de LuDecomposition.SolveTranspose(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Clone">
            <summary>Définit le shim de LuDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Constructor">
            <summary>Définit le shim de LuDecomposition.LuDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.ConstructorDoubleMdArray2">
            <summary>Définit le shim de LuDecomposition.LuDecomposition(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de LuDecomposition.LuDecomposition(Double[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.ConstructorDoubleMdArray2BooleanBoolean">
            <summary>Définit le shim de LuDecomposition.LuDecomposition(Double[,] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.DeterminantGet">
            <summary>Définit le shim de LuDecomposition.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.Inverse">
            <summary>Définit le shim de LuDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.LogDeterminantGet">
            <summary>Définit le shim de LuDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecomposition.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.NonsingularGet">
            <summary>Définit le shim de LuDecomposition.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecomposition.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.SolveDoubleArray">
            <summary>Définit le shim de LuDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.SolveDoubleMdArray2">
            <summary>Définit le shim de LuDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.SolveTransposeDoubleMdArray2">
            <summary>Définit le shim de LuDecomposition.SolveTranspose(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecomposition.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.LuDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.#ctor(Accord.Math.Decompositions.LuDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de LuDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.DeterminantGet">
            <summary>Définit le shim de LuDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de LuDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de LuDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionD.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.NonsingularGet">
            <summary>Définit le shim de LuDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecompositionD.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de LuDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.SolveDecimalMdArray2">
            <summary>Définit le shim de LuDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.SolveTransposeDecimalMdArray2">
            <summary>Définit le shim de LuDecompositionD.SolveTranspose(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Clone">
            <summary>Définit le shim de LuDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Constructor">
            <summary>Définit le shim de LuDecompositionD.LuDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.ConstructorDecimalMdArray2">
            <summary>Définit le shim de LuDecompositionD.LuDecompositionD(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.ConstructorDecimalMdArray2Boolean">
            <summary>Définit le shim de LuDecompositionD.LuDecompositionD(Decimal[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.ConstructorDecimalMdArray2BooleanBoolean">
            <summary>Définit le shim de LuDecompositionD.LuDecompositionD(Decimal[,] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.DeterminantGet">
            <summary>Définit le shim de LuDecompositionD.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.Inverse">
            <summary>Définit le shim de LuDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.LogDeterminantGet">
            <summary>Définit le shim de LuDecompositionD.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionD.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.NonsingularGet">
            <summary>Définit le shim de LuDecompositionD.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecompositionD.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de LuDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.SolveDecimalMdArray2">
            <summary>Définit le shim de LuDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.SolveTransposeDecimalMdArray2">
            <summary>Définit le shim de LuDecompositionD.SolveTranspose(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionD.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.LuDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.#ctor(Accord.Math.Decompositions.LuDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de LuDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.DeterminantGet">
            <summary>Définit le shim de LuDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de LuDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de LuDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionF.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.NonsingularGet">
            <summary>Définit le shim de LuDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecompositionF.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de LuDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.SolveSingleMdArray2">
            <summary>Définit le shim de LuDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.SolveTransposeSingleMdArray2">
            <summary>Définit le shim de LuDecompositionF.SolveTranspose(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Clone">
            <summary>Définit le shim de LuDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Constructor">
            <summary>Définit le shim de LuDecompositionF.LuDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.ConstructorSingleMdArray2">
            <summary>Définit le shim de LuDecompositionF.LuDecompositionF(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.ConstructorSingleMdArray2Boolean">
            <summary>Définit le shim de LuDecompositionF.LuDecompositionF(Single[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.ConstructorSingleMdArray2BooleanBoolean">
            <summary>Définit le shim de LuDecompositionF.LuDecompositionF(Single[,] value, Boolean transpose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.DeterminantGet">
            <summary>Définit le shim de LuDecompositionF.get_Determinant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.Inverse">
            <summary>Définit le shim de LuDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de LuDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.LowerTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionF.get_LowerTriangularFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.NonsingularGet">
            <summary>Définit le shim de LuDecompositionF.get_Nonsingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.PivotPermutationVectorGet">
            <summary>Définit le shim de LuDecompositionF.get_PivotPermutationVector()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.SolveSingleArray">
            <summary>Définit le shim de LuDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.SolveSingleMdArray2">
            <summary>Définit le shim de LuDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.SolveTransposeSingleMdArray2">
            <summary>Définit le shim de LuDecompositionF.SolveTranspose(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimLuDecompositionF.UpperTriangularFactorGet">
            <summary>Définit le shim de LuDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization">
            <summary>Type shim de Accord.Math.Decompositions.NonnegativeMatrixFactorization</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.#ctor(Accord.Math.Decompositions.NonnegativeMatrixFactorization)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.AllInstances.LeftNonnegativeFactorsGet">
            <summary>Définit le shim de NonnegativeMatrixFactorization.get_LeftNonnegativeFactors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.AllInstances.RightNonnegativeFactorsGet">
            <summary>Définit le shim de NonnegativeMatrixFactorization.get_RightNonnegativeFactors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.AllInstances.computeInt32">
            <summary>Définit le shim de NonnegativeMatrixFactorization.compute(Int32 maxiter)</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.ConstructorDoubleMdArray2Int32">
            <summary>Définit le shim de NonnegativeMatrixFactorization.NonnegativeMatrixFactorization(Double[,] value, Int32 r)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.ConstructorDoubleMdArray2Int32Int32">
            <summary>Définit le shim de NonnegativeMatrixFactorization.NonnegativeMatrixFactorization(Double[,] value, Int32 r, Int32 maxiter)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.LeftNonnegativeFactorsGet">
            <summary>Définit le shim de NonnegativeMatrixFactorization.get_LeftNonnegativeFactors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.RightNonnegativeFactorsGet">
            <summary>Définit le shim de NonnegativeMatrixFactorization.get_RightNonnegativeFactors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimNonnegativeMatrixFactorization.computeInt32">
            <summary>Définit le shim de NonnegativeMatrixFactorization.compute(Int32 maxiter)</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.QrDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.#ctor(Accord.Math.Decompositions.QrDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.Clone">
            <summary>Définit le shim de QrDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de QrDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.FullRankGet">
            <summary>Définit le shim de QrDecomposition.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de QrDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecomposition.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de QrDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.SolveDoubleMdArray2">
            <summary>Définit le shim de QrDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.SolveTransposeDoubleMdArray2">
            <summary>Définit le shim de QrDecomposition.SolveTranspose(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Clone">
            <summary>Définit le shim de QrDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Constructor">
            <summary>Définit le shim de QrDecomposition.QrDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.ConstructorDoubleMdArray2">
            <summary>Définit le shim de QrDecomposition.QrDecomposition(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de QrDecomposition.QrDecomposition(Double[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.DiagonalGet">
            <summary>Définit le shim de QrDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.FullRankGet">
            <summary>Définit le shim de QrDecomposition.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.Inverse">
            <summary>Définit le shim de QrDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecomposition.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.SolveDoubleArray">
            <summary>Définit le shim de QrDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.SolveDoubleMdArray2">
            <summary>Définit le shim de QrDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.SolveTransposeDoubleMdArray2">
            <summary>Définit le shim de QrDecomposition.SolveTranspose(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecomposition.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecomposition.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD">
            <summary>Type shim de Accord.Math.Decompositions.QrDecompositionD</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.#ctor(Accord.Math.Decompositions.QrDecompositionD)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.Clone">
            <summary>Définit le shim de QrDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.DiagonalGet">
            <summary>Définit le shim de QrDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.FullRankGet">
            <summary>Définit le shim de QrDecompositionD.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.Inverse">
            <summary>Définit le shim de QrDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecompositionD.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.SolveDecimalArray">
            <summary>Définit le shim de QrDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.SolveDecimalMdArray2">
            <summary>Définit le shim de QrDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.SolveTransposeDecimalMdArray2">
            <summary>Définit le shim de QrDecompositionD.SolveTranspose(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Decimal})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Clone">
            <summary>Définit le shim de QrDecompositionD.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Constructor">
            <summary>Définit le shim de QrDecompositionD.QrDecompositionD()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.ConstructorDecimalMdArray2">
            <summary>Définit le shim de QrDecompositionD.QrDecompositionD(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.ConstructorDecimalMdArray2Boolean">
            <summary>Définit le shim de QrDecompositionD.QrDecompositionD(Decimal[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.DiagonalGet">
            <summary>Définit le shim de QrDecompositionD.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.FullRankGet">
            <summary>Définit le shim de QrDecompositionD.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.Inverse">
            <summary>Définit le shim de QrDecompositionD.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecompositionD.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.SolveDecimalArray">
            <summary>Définit le shim de QrDecompositionD.Solve(Decimal[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.SolveDecimalMdArray2">
            <summary>Définit le shim de QrDecompositionD.Solve(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.SolveTransposeDecimalMdArray2">
            <summary>Définit le shim de QrDecompositionD.SolveTranspose(Decimal[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionD.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecompositionD.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.QrDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.#ctor(Accord.Math.Decompositions.QrDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de QrDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de QrDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.FullRankGet">
            <summary>Définit le shim de QrDecompositionF.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de QrDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecompositionF.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de QrDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.SolveSingleMdArray2">
            <summary>Définit le shim de QrDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.SolveTransposeSingleMdArray2">
            <summary>Définit le shim de QrDecompositionF.SolveTranspose(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.AllInstances.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Clone">
            <summary>Définit le shim de QrDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Constructor">
            <summary>Définit le shim de QrDecompositionF.QrDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.ConstructorSingleMdArray2">
            <summary>Définit le shim de QrDecompositionF.QrDecompositionF(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.ConstructorSingleMdArray2Boolean">
            <summary>Définit le shim de QrDecompositionF.QrDecompositionF(Single[,] value, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.DiagonalGet">
            <summary>Définit le shim de QrDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.FullRankGet">
            <summary>Définit le shim de QrDecompositionF.get_FullRank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.Inverse">
            <summary>Définit le shim de QrDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.OrthogonalFactorGet">
            <summary>Définit le shim de QrDecompositionF.get_OrthogonalFactor()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.SolveSingleArray">
            <summary>Définit le shim de QrDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.SolveSingleMdArray2">
            <summary>Définit le shim de QrDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.SolveTransposeSingleMdArray2">
            <summary>Définit le shim de QrDecompositionF.SolveTranspose(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimQrDecompositionF.UpperTriangularFactorGet">
            <summary>Définit le shim de QrDecompositionF.get_UpperTriangularFactor()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition">
            <summary>Type shim de Accord.Math.Decompositions.SingularValueDecomposition</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.#ctor(Accord.Math.Decompositions.SingularValueDecomposition)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AbsoluteDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.AbsoluteDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.Clone">
            <summary>Définit le shim de SingularValueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.ConditionGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.DiagonalGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de SingularValueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.Inverse">
            <summary>Définit le shim de SingularValueDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.IsSingularGet">
            <summary>Définit le shim de SingularValueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.LeftSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.LogPseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.OrderingGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.PseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.RankGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.RightSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecomposition.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.SolveDoubleArray">
            <summary>Définit le shim de SingularValueDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.SolveDoubleMdArray2">
            <summary>Définit le shim de SingularValueDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.SolveForDiagonalDoubleArray">
            <summary>Définit le shim de SingularValueDecomposition.SolveForDiagonal(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.ThresholdGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.AllInstances.TwoNormGet">
            <summary>Définit le shim de SingularValueDecomposition.get_TwoNorm()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Clone">
            <summary>Définit le shim de SingularValueDecomposition.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ConditionGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Constructor">
            <summary>Définit le shim de SingularValueDecomposition.SingularValueDecomposition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ConstructorDoubleMdArray2">
            <summary>Définit le shim de SingularValueDecomposition.SingularValueDecomposition(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ConstructorDoubleMdArray2BooleanBoolean">
            <summary>Définit le shim de SingularValueDecomposition.SingularValueDecomposition(Double[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ConstructorDoubleMdArray2BooleanBooleanBoolean">
            <summary>Définit le shim de SingularValueDecomposition.SingularValueDecomposition(Double[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ConstructorDoubleMdArray2BooleanBooleanBooleanBoolean">
            <summary>Définit le shim de SingularValueDecomposition.SingularValueDecomposition(Double[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.DiagonalGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.DiagonalMatrixGet">
            <summary>Définit le shim de SingularValueDecomposition.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.Inverse">
            <summary>Définit le shim de SingularValueDecomposition.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.IsSingularGet">
            <summary>Définit le shim de SingularValueDecomposition.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.LeftSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.LogDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.LogPseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.OrderingGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.PseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecomposition.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.RankGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.RightSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecomposition.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.SolveDoubleArray">
            <summary>Définit le shim de SingularValueDecomposition.Solve(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.SolveDoubleMdArray2">
            <summary>Définit le shim de SingularValueDecomposition.Solve(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.SolveForDiagonalDoubleArray">
            <summary>Définit le shim de SingularValueDecomposition.SolveForDiagonal(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.ThresholdGet">
            <summary>Définit le shim de SingularValueDecomposition.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecomposition.TwoNormGet">
            <summary>Définit le shim de SingularValueDecomposition.get_TwoNorm()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF">
            <summary>Type shim de Accord.Math.Decompositions.SingularValueDecompositionF</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.#ctor(Accord.Math.Decompositions.SingularValueDecompositionF)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AbsoluteDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.AbsoluteDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_AbsoluteDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.Clone">
            <summary>Définit le shim de SingularValueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.ConditionGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.DiagonalGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.DiagonalMatrixGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.Inverse">
            <summary>Définit le shim de SingularValueDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.IsSingularGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.LeftSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.LogDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.LogPseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.OrderingGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.PseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.RankGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.RightSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.SolveForDiagonalSingleArray">
            <summary>Définit le shim de SingularValueDecompositionF.SolveForDiagonal(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.SolveSingleArray">
            <summary>Définit le shim de SingularValueDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.SolveSingleMdArray2">
            <summary>Définit le shim de SingularValueDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.ThresholdGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.AllInstances.TwoNormGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_TwoNorm()</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Bind(Accord.Math.Decompositions.ISolverMatrixDecomposition{System.Single})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Clone">
            <summary>Définit le shim de SingularValueDecompositionF.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ConditionGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Condition()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Constructor">
            <summary>Définit le shim de SingularValueDecompositionF.SingularValueDecompositionF()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ConstructorSingleMdArray2">
            <summary>Définit le shim de SingularValueDecompositionF.SingularValueDecompositionF(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ConstructorSingleMdArray2BooleanBoolean">
            <summary>Définit le shim de SingularValueDecompositionF.SingularValueDecompositionF(Single[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ConstructorSingleMdArray2BooleanBooleanBoolean">
            <summary>Définit le shim de SingularValueDecompositionF.SingularValueDecompositionF(Single[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ConstructorSingleMdArray2BooleanBooleanBooleanBoolean">
            <summary>Définit le shim de SingularValueDecompositionF.SingularValueDecompositionF(Single[,] value, Boolean computeLeftSingularVectors, Boolean computeRightSingularVectors, Boolean autoTranspose, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.DiagonalGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Diagonal()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.DiagonalMatrixGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_DiagonalMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.Inverse">
            <summary>Définit le shim de SingularValueDecompositionF.Inverse()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.IsSingularGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_IsSingular()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.LeftSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LeftSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.LogDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LogDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.LogPseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_LogPseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.OrderingGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Ordering()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.PseudoDeterminantGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_PseudoDeterminant()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.RankGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Rank()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.RightSingularVectorsGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_RightSingularVectors()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.SolveForDiagonalSingleArray">
            <summary>Définit le shim de SingularValueDecompositionF.SolveForDiagonal(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.SolveSingleArray">
            <summary>Définit le shim de SingularValueDecompositionF.Solve(Single[] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.SolveSingleMdArray2">
            <summary>Définit le shim de SingularValueDecompositionF.Solve(Single[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.ThresholdGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_Threshold()</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.ShimSingularValueDecompositionF.TwoNormGet">
            <summary>Définit le shim de SingularValueDecompositionF.get_TwoNorm()</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization">
            <summary>Type stub de Accord.Math.Decompositions.GramSchmidtOrthogonalization</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.#ctor(System.Double[0:,0:])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.#ctor(System.Double[0:,0:],System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGramSchmidtOrthogonalization</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubGramSchmidtOrthogonalization.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization">
            <summary>Type stub de Accord.Math.Decompositions.NonnegativeMatrixFactorization</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.#ctor(System.Double[0:,0:],System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.#ctor(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonnegativeMatrixFactorization</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Decompositions.Fakes.StubNonnegativeMatrixFactorization.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences">
            <summary>Type shim de Accord.Math.Differentiation.FiniteDifferences</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.#ctor(Accord.Math.Differentiation.FiniteDifferences)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.ComputeDoubleArray">
            <summary>Définit le shim de FiniteDifferences.Compute(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.ComputeDoubleArrayDoubleArray">
            <summary>Définit le shim de FiniteDifferences.Compute(Double[] x, Double[] gradient)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.FunctionGet">
            <summary>Définit le shim de FiniteDifferences.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de FiniteDifferences.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.OrdersGet">
            <summary>Définit le shim de FiniteDifferences.get_Orders()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.PointsGet">
            <summary>Définit le shim de FiniteDifferences.get_Points()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.PointsSetInt32">
            <summary>Définit le shim de FiniteDifferences.set_Points(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.StepSizesGet">
            <summary>Définit le shim de FiniteDifferences.get_StepSizes()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.derivativeDoubleArrayInt32Double">
            <summary>Définit le shim de FiniteDifferences.derivative(Double[] x, Int32 index, Double output)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.AllInstances.initFuncOfDoubleArrayDoubleInt32Int32Double">
            <summary>Définit le shim de FiniteDifferences.init(Func`2&lt;Double[],Double&gt; func, Int32 variables, Int32 order, Double stepSize)</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ComputeDoubleArray">
            <summary>Définit le shim de FiniteDifferences.Compute(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ComputeDoubleArrayDoubleArray">
            <summary>Définit le shim de FiniteDifferences.Compute(Double[] x, Double[] gradient)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32FuncOfDoubleArrayDoubleInt32">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables, Func`2&lt;Double[],Double&gt; function, Int32 order)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32FuncOfDoubleArrayDoubleInt32Double">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables, Func`2&lt;Double[],Double&gt; function, Int32 order, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32Int32">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables, Int32 order)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.ConstructorInt32Int32Double">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences(Int32 variables, Int32 order, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.CreateCoefficientsInt32">
            <summary>Définit le shim de FiniteDifferences.CreateCoefficients(Int32 points)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.DerivativeFuncOfDoubleDoubleDouble">
            <summary>Définit le shim de FiniteDifferences.Derivative(Func`2&lt;Double,Double&gt; function, Double value)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.DerivativeFuncOfDoubleDoubleDoubleInt32">
            <summary>Définit le shim de FiniteDifferences.Derivative(Func`2&lt;Double,Double&gt; function, Double value, Int32 order)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.DerivativeFuncOfDoubleDoubleDoubleInt32Double">
            <summary>Définit le shim de FiniteDifferences.Derivative(Func`2&lt;Double,Double&gt; function, Double value, Int32 order, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.FunctionGet">
            <summary>Définit le shim de FiniteDifferences.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de FiniteDifferences.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.InterpolateDoubleMdArray2ArrayDoubleArrayInt32Int32Double">
            <summary>Définit le shim de FiniteDifferences.Interpolate(Double[,][] coefficients, Double[] points, Int32 order, Int32 center, Double step)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.OrdersGet">
            <summary>Définit le shim de FiniteDifferences.get_Orders()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.PointsGet">
            <summary>Définit le shim de FiniteDifferences.get_Points()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.PointsSetInt32">
            <summary>Définit le shim de FiniteDifferences.set_Points(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.StaticConstructor">
            <summary>Définit le shim de FiniteDifferences.FiniteDifferences()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.StepSizesGet">
            <summary>Définit le shim de FiniteDifferences.get_StepSizes()</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.derivativeDoubleArrayInt32Double">
            <summary>Définit le shim de FiniteDifferences.derivative(Double[] x, Int32 index, Double output)</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.ShimFiniteDifferences.initFuncOfDoubleArrayDoubleInt32Int32Double">
            <summary>Définit le shim de FiniteDifferences.init(Func`2&lt;Double[],Double&gt; func, Int32 variables, Int32 order, Double stepSize)</summary>
        </member>
        <member name="T:Accord.Math.Differentiation.Fakes.StubFiniteDifferences">
            <summary>Type stub de Accord.Math.Differentiation.FiniteDifferences</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubFiniteDifferences</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Differentiation.Fakes.StubFiniteDifferences.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.ShimOctaveEnvironment">
            <summary>Type shim de Accord.Math.Environments.OctaveEnvironment</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.#ctor(Accord.Math.Environments.OctaveEnvironment)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.Constructor">
            <summary>Définit le shim de OctaveEnvironment.OctaveEnvironment()</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.StaticConstructor">
            <summary>Définit le shim de OctaveEnvironment.OctaveEnvironment()</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.UseOctaveDimensionIndexingGet">
            <summary>Définit le shim de OctaveEnvironment.get_UseOctaveDimensionIndexing()</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.UseOctaveDimensionIndexingSetBoolean">
            <summary>Définit le shim de OctaveEnvironment.set_UseOctaveDimensionIndexing(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._absb__10Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;abs&gt;b__10(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._absb__6Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;abs&gt;b__6(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._cosb__2Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;cos&gt;b__2(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._cosb__cDouble">
            <summary>Définit le shim de OctaveEnvironment.&lt;cos&gt;b__c(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._expb__4Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;exp&gt;b__4(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._expb__eDouble">
            <summary>Définit le shim de OctaveEnvironment.&lt;exp&gt;b__e(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._logb__12Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;log&gt;b__12(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._logb__8Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;log&gt;b__8(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._sinb__0Double">
            <summary>Définit le shim de OctaveEnvironment.&lt;sin&gt;b__0(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment._sinb__aDouble">
            <summary>Définit le shim de OctaveEnvironment.&lt;sin&gt;b__a(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.absDouble">
            <summary>Définit le shim de OctaveEnvironment.abs(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.absDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.abs(Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.ceilDouble">
            <summary>Définit le shim de OctaveEnvironment.ceil(Double f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.ceilDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.ceil(Double[] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.ceilDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.ceil(Double[,] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.cholDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.chol(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.cosDouble">
            <summary>Définit le shim de OctaveEnvironment.cos(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.cosDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.cos(Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2DoubleMdArray2Out">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,] b, Double[,]&amp; V)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2DoubleMdArray2OutDoubleArrayOut">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,] b, Double[,]&amp; V, Double[]&amp; im)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2DoubleMdArray2OutDoubleArrayOutDoubleArrayOut">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,] b, Double[,]&amp; V, Double[]&amp; alphar, Double[]&amp; beta)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2DoubleMdArray2OutDoubleArrayOutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,] b, Double[,]&amp; V, Double[]&amp; im, Double[]&amp; alphar, Double[]&amp; alphai, Double[]&amp; beta)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2Out">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,]&amp; V)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.eigDoubleMdArray2DoubleMdArray2OutDoubleArrayOut">
            <summary>Définit le shim de OctaveEnvironment.eig(Double[,] a, Double[,]&amp; V, Double[]&amp; im)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.expDouble">
            <summary>Définit le shim de OctaveEnvironment.exp(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.expDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.exp(Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.floorDouble">
            <summary>Définit le shim de OctaveEnvironment.floor(Double f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.floorDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.floor(Double[] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.floorDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.floor(Double[,] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.logDouble">
            <summary>Définit le shim de OctaveEnvironment.log(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.logDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.log(Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.prodDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.prod(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.qrDoubleMdArray2DoubleMdArray2OutDoubleMdArray2Out">
            <summary>Définit le shim de OctaveEnvironment.qr(Double[,] m, Double[,]&amp; Q, Double[,]&amp; R)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.qrDoubleMdArray2DoubleMdArray2OutDoubleMdArray2OutDoubleArrayOut">
            <summary>Définit le shim de OctaveEnvironment.qr(Double[,] m, Double[,]&amp; Q, Double[,]&amp; R, Double[]&amp; d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.rankDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.rank(Double[,] m)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.roundDouble">
            <summary>Définit le shim de OctaveEnvironment.round(Double f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.roundDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.round(Double[] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.roundDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.round(Double[,] f)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sinDouble">
            <summary>Définit le shim de OctaveEnvironment.sin(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sinDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.sin(Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sizeDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.size(Double[,] m)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sumDoubleArray">
            <summary>Définit le shim de OctaveEnvironment.sum(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sumDoubleMdArray2">
            <summary>Définit le shim de OctaveEnvironment.sum(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimOctaveEnvironment.sumDoubleMdArray2Int32">
            <summary>Définit le shim de OctaveEnvironment.sum(Double[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.ShimREnvironment">
            <summary>Type shim de Accord.Math.Environments.REnvironment</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimREnvironment.#ctor(Accord.Math.Environments.REnvironment)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.ShimREnvironment.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimREnvironment.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.ShimREnvironment.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimREnvironment.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.ShimREnvironment.Constructor">
            <summary>Définit le shim de REnvironment.REnvironment()</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.StubOctaveEnvironment">
            <summary>Type stub de Accord.Math.Environments.OctaveEnvironment</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.StubOctaveEnvironment.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubOctaveEnvironment.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.StubOctaveEnvironment.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubOctaveEnvironment</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubOctaveEnvironment.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubOctaveEnvironment.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Environments.Fakes.StubREnvironment">
            <summary>Type stub de Accord.Math.Environments.REnvironment</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.StubREnvironment.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubREnvironment.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Environments.Fakes.StubREnvironment.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubREnvironment</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubREnvironment.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Environments.Fakes.StubREnvironment.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimAbsoluteConvergence">
            <summary>Type shim de Accord.Math.AbsoluteConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.#ctor(Accord.Math.AbsoluteConvergence)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.Clear">
            <summary>Définit le shim de AbsoluteConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.CurrentIterationGet">
            <summary>Définit le shim de AbsoluteConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.CurrentIterationSetInt32">
            <summary>Définit le shim de AbsoluteConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.HasConvergedGet">
            <summary>Définit le shim de AbsoluteConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.IterationsGet">
            <summary>Définit le shim de AbsoluteConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de AbsoluteConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.NewValueGet">
            <summary>Définit le shim de AbsoluteConvergence.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.NewValueSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_NewValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.OldValueGet">
            <summary>Définit le shim de AbsoluteConvergence.get_OldValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.OldValueSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_OldValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.ToleranceGet">
            <summary>Définit le shim de AbsoluteConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.Bind(Accord.Math.ISingleValueConvergence)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimAbsoluteConvergence.Bind(Accord.Math.IConvergence{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.Clear">
            <summary>Définit le shim de AbsoluteConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.Constructor">
            <summary>Définit le shim de AbsoluteConvergence.AbsoluteConvergence()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.ConstructorInt32Double">
            <summary>Définit le shim de AbsoluteConvergence.AbsoluteConvergence(Int32 iterations, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.CurrentIterationGet">
            <summary>Définit le shim de AbsoluteConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.CurrentIterationSetInt32">
            <summary>Définit le shim de AbsoluteConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.HasConvergedGet">
            <summary>Définit le shim de AbsoluteConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.IterationsGet">
            <summary>Définit le shim de AbsoluteConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.IterationsSetInt32">
            <summary>Définit le shim de AbsoluteConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.NewValueGet">
            <summary>Définit le shim de AbsoluteConvergence.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.NewValueSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_NewValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.OldValueGet">
            <summary>Définit le shim de AbsoluteConvergence.get_OldValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.OldValueSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_OldValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.ToleranceGet">
            <summary>Définit le shim de AbsoluteConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimAbsoluteConvergence.ToleranceSetDouble">
            <summary>Définit le shim de AbsoluteConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimBessel">
            <summary>Type shim de Accord.Math.Bessel</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBessel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBessel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBessel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.I0Double">
            <summary>Définit le shim de Bessel.I0(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.IDouble">
            <summary>Définit le shim de Bessel.I(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.IInt32Double">
            <summary>Définit le shim de Bessel.I(Int32 n, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.J0Double">
            <summary>Définit le shim de Bessel.J0(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.JDouble">
            <summary>Définit le shim de Bessel.J(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.JInt32Double">
            <summary>Définit le shim de Bessel.J(Int32 n, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.Y0Double">
            <summary>Définit le shim de Bessel.Y0(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.YDouble">
            <summary>Définit le shim de Bessel.Y(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBessel.YInt32Double">
            <summary>Définit le shim de Bessel.Y(Int32 n, Double x)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimBeta">
            <summary>Type shim de Accord.Math.Beta</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBeta.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBeta.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimBeta.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.FunctionDoubleDouble">
            <summary>Définit le shim de Beta.Function(Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.IncbcfDoubleDoubleDouble">
            <summary>Définit le shim de Beta.Incbcf(Double a, Double b, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.IncbdDoubleDoubleDouble">
            <summary>Définit le shim de Beta.Incbd(Double a, Double b, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.IncompleteDoubleDoubleDouble">
            <summary>Définit le shim de Beta.Incomplete(Double a, Double b, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.IncompleteInverseDoubleDoubleDouble">
            <summary>Définit le shim de Beta.IncompleteInverse(Double aa, Double bb, Double yy0)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.LogDoubleDouble">
            <summary>Définit le shim de Beta.Log(Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.MultinomialDoubleArray">
            <summary>Définit le shim de Beta.Multinomial(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimBeta.PowerSeriesDoubleDoubleDouble">
            <summary>Définit le shim de Beta.PowerSeries(Double a, Double b, Double x)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpArrayFormatProvider">
            <summary>Type shim de Accord.Math.CSharpArrayFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.#ctor(Accord.Math.CSharpArrayFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.ConstructorIFormatProviderBooleanBoolean">
            <summary>Définit le shim de CSharpArrayFormatProvider.CSharpArrayFormatProvider(IFormatProvider innerProvider, Boolean includeTypeName, Boolean includeSemicolon)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de CSharpArrayFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de CSharpArrayFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpArrayFormatProvider.StaticConstructor">
            <summary>Définit le shim de CSharpArrayFormatProvider.CSharpArrayFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider">
            <summary>Type shim de Accord.Math.CSharpJaggedMatrixFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.#ctor(Accord.Math.CSharpJaggedMatrixFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de CSharpJaggedMatrixFormatProvider.CSharpJaggedMatrixFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de CSharpJaggedMatrixFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de CSharpJaggedMatrixFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpJaggedMatrixFormatProvider.StaticConstructor">
            <summary>Définit le shim de CSharpJaggedMatrixFormatProvider.CSharpJaggedMatrixFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider">
            <summary>Type shim de Accord.Math.CSharpMatrixFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.#ctor(Accord.Math.CSharpMatrixFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de CSharpMatrixFormatProvider.CSharpMatrixFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de CSharpMatrixFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de CSharpMatrixFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCSharpMatrixFormatProvider.StaticConstructor">
            <summary>Définit le shim de CSharpMatrixFormatProvider.CSharpMatrixFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCombinatorics">
            <summary>Type shim de Accord.Math.Combinatorics</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCombinatorics.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCombinatorics.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCombinatorics.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCombinatorics.CombinationsOf1M0ArrayInt32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{``0[]}})">
            <summary>Définit le shim de Combinatorics.Combinations(!!0[] values, Int32 k, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCombinatorics.PermutationsOf1M0ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Boolean,System.Collections.Generic.IEnumerable{``0[]}})">
            <summary>Définit le shim de Combinatorics.Permutations(!!0[] values, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.SequencesInt32ArrayBoolean">
            <summary>Définit le shim de Combinatorics.Sequences(Int32[] symbols, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.SequencesInt32Int32Boolean">
            <summary>Définit le shim de Combinatorics.Sequences(Int32 symbols, Int32 length, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.TruthTableInt32">
            <summary>Définit le shim de Combinatorics.TruthTable(Int32 length)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.TruthTableInt32Array">
            <summary>Définit le shim de Combinatorics.TruthTable(Int32[] symbols)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCombinatorics.TruthTableInt32Int32">
            <summary>Définit le shim de Combinatorics.TruthTable(Int32 symbols, Int32 length)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimComplexMatrix">
            <summary>Type shim de Accord.Math.ComplexMatrix</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimComplexMatrix.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.AbsComplexArray">
            <summary>Définit le shim de ComplexMatrix.Abs(Complex[] x)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimComplexMatrix.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimComplexMatrix.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ImComplexArray">
            <summary>Définit le shim de ComplexMatrix.Im(Complex[] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ImComplexMdArray2">
            <summary>Définit le shim de ComplexMatrix.Im(Complex[,] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.IsEqualComplexArrayArrayComplexArrayArrayDouble">
            <summary>Définit le shim de ComplexMatrix.IsEqual(Complex[][] objA, Complex[][] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.IsEqualComplexArrayComplexArrayDouble">
            <summary>Définit le shim de ComplexMatrix.IsEqual(Complex[] objA, Complex[] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.MagnitudeComplexArray">
            <summary>Définit le shim de ComplexMatrix.Magnitude(Complex[] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.MagnitudeComplexMdArray2">
            <summary>Définit le shim de ComplexMatrix.Magnitude(Complex[,] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.MultiplyComplexArrayComplexArray">
            <summary>Définit le shim de ComplexMatrix.Multiply(Complex[] a, Complex[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.PhaseComplexArray">
            <summary>Définit le shim de ComplexMatrix.Phase(Complex[] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.RangeComplexArray">
            <summary>Définit le shim de ComplexMatrix.Range(Complex[] array)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ReComplexArray">
            <summary>Définit le shim de ComplexMatrix.Re(Complex[] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ReComplexMdArray2">
            <summary>Définit le shim de ComplexMatrix.Re(Complex[,] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.SquaredMagnitudeComplex">
            <summary>Définit le shim de ComplexMatrix.SquaredMagnitude(Complex value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.SumComplexArray">
            <summary>Définit le shim de ComplexMatrix.Sum(Complex[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ToArrayComplexArray">
            <summary>Définit le shim de ComplexMatrix.ToArray(Complex[] c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ToComplexDoubleArray">
            <summary>Définit le shim de ComplexMatrix.ToComplex(Double[] real)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimComplexMatrix.ToComplexDoubleArrayDoubleArray">
            <summary>Définit le shim de ComplexMatrix.ToComplex(Double[] real, Double[] imag)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimConstants">
            <summary>Type shim de Accord.Math.Constants</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimConstants.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimConstants.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimConstants.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimConstants.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimCosineTransform">
            <summary>Type shim de Accord.Math.CosineTransform</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCosineTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCosineTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimCosineTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCosineTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCosineTransform.DCTDoubleArray">
            <summary>Définit le shim de CosineTransform.DCT(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCosineTransform.DCTDoubleMdArray2">
            <summary>Définit le shim de CosineTransform.DCT(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCosineTransform.IDCTDoubleArray">
            <summary>Définit le shim de CosineTransform.IDCT(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimCosineTransform.IDCTDoubleMdArray2">
            <summary>Définit le shim de CosineTransform.IDCT(Double[,] data)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDefaultArrayFormatProvider">
            <summary>Type shim de Accord.Math.DefaultArrayFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.#ctor(Accord.Math.DefaultArrayFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de DefaultArrayFormatProvider.DefaultArrayFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de DefaultArrayFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de DefaultArrayFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultArrayFormatProvider.StaticConstructor">
            <summary>Définit le shim de DefaultArrayFormatProvider.DefaultArrayFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider">
            <summary>Type shim de Accord.Math.DefaultMatrixFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.#ctor(Accord.Math.DefaultMatrixFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de DefaultMatrixFormatProvider.DefaultMatrixFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de DefaultMatrixFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de DefaultMatrixFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDefaultMatrixFormatProvider.StaticConstructor">
            <summary>Définit le shim de DefaultMatrixFormatProvider.DefaultMatrixFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDissimilarity">
            <summary>Type shim de Accord.Math.Dissimilarity</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDissimilarity.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDissimilarity.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDissimilarity.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.DiceInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.Dice(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.JaccardInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.Jaccard(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.KulczynskiInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.Kulczynski(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.MatchingInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.Matching(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.RogersTanimotoInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.RogersTanimoto(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.RusselRaoInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.RusselRao(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.SokalMichenerInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.SokalMichener(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.SokalSneathInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.SokalSneath(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDissimilarity.YuleInt32ArrayInt32Array">
            <summary>Définit le shim de Dissimilarity.Yule(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimDistance">
            <summary>Type shim de Accord.Math.Distance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDistance.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDistance.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDistance.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BhattacharyyaDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Bhattacharyya(Double[] histogram1, Double[] histogram2)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BhattacharyyaDoubleArrayDoubleMdArray2DoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Distance.Bhattacharyya(Double[] meanX, Double[,] covX, Double[] meanY, Double[,] covY)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BhattacharyyaDoubleArrayDoubleMdArray2DoubleDoubleArrayDoubleMdArray2Double">
            <summary>Définit le shim de Distance.Bhattacharyya(Double[] meanX, Double[,] covX, Double lnDetCovX, Double[] meanY, Double[,] covY, Double lnDetCovY)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BhattacharyyaDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Distance.Bhattacharyya(Double[,] x, Double[,] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BitwiseHammingBitArrayBitArray">
            <summary>Définit le shim de Distance.BitwiseHamming(BitArray x, BitArray y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BitwiseHammingByteArrayByteArray">
            <summary>Définit le shim de Distance.BitwiseHamming(Byte[] x, Byte[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.BrayCurtisDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.BrayCurtis(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.CanberraDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Canberra(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ChebyshevDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Chebyshev(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ChessboardDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Chessboard(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.CorrelationDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Correlation(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.CosineDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Cosine(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.EuclideanDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Euclidean(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.EuclideanDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Distance.Euclidean(Double x1, Double y1, Double x2, Double y2)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.HammingBooleanArrayBooleanArray">
            <summary>Définit le shim de Distance.Hamming(Boolean[] x, Boolean[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.HammingDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Hamming(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.HellingerDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Hellinger(Double[] histogram1, Double[] histogram2)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.IsMetricFuncOfDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de Distance.IsMetric(Func`3&lt;Double[],Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.IsMetricFuncOfInt32ArrayInt32ArrayDouble">
            <summary>Définit le shim de Distance.IsMetric(Func`3&lt;Int32[],Int32[],Double&gt; value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimDistance.LevenshteinOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],System.Double})">
            <summary>Définit le shim de Distance.Levenshtein(!!0[] x, !!0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.LevenshteinStringString">
            <summary>Définit le shim de Distance.Levenshtein(String x, String y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.MahalanobisDoubleArrayDoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Distance.Mahalanobis(Double[] x, Double[] y, Double[,] precision)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.MahalanobisDoubleArrayDoubleArraySingularValueDecomposition">
            <summary>Définit le shim de Distance.Mahalanobis(Double[] x, Double[] y, SingularValueDecomposition covariance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ManhattanDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.Manhattan(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ManhattanInt32ArrayInt32Array">
            <summary>Définit le shim de Distance.Manhattan(Int32[] x, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.MinkowskiDoubleArrayDoubleArrayInt32">
            <summary>Définit le shim de Distance.Minkowski(Double[] x, Double[] y, Int32 r)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ModularDoubleDoubleDouble">
            <summary>Définit le shim de Distance.Modular(Double a, Double b, Double modulo)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.ModularInt32Int32Int32">
            <summary>Définit le shim de Distance.Modular(Int32 a, Int32 b, Int32 modulo)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.SquareEuclideanDoubleArrayDoubleArray">
            <summary>Définit le shim de Distance.SquareEuclidean(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.SquareEuclideanDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Distance.SquareEuclidean(Double x1, Double x2, Double y1, Double y2)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.SquareMahalanobisDoubleArrayDoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Distance.SquareMahalanobis(Double[] x, Double[] y, Double[,] precision)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.SquareMahalanobisDoubleArrayDoubleArraySingularValueDecomposition">
            <summary>Définit le shim de Distance.SquareMahalanobis(Double[] x, Double[] y, SingularValueDecomposition covariance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.StaticConstructor">
            <summary>Définit le shim de Distance.Distance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.covDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Distance.cov(Double[,] matrix, Double[] means)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimDistance.meanDoubleMdArray2">
            <summary>Définit le shim de Distance.mean(Double[,] matrix)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimGabor">
            <summary>Type shim de Accord.Math.Gabor</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGabor.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGabor.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGabor.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Function1DDoubleDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Gabor.Function1D(Double x, Double mean, Double amplitude, Double position, Double width, Double phase, Double frequency)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Function2DInt32Int32DoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Gabor.Function2D(Int32 x, Int32 y, Double lambda, Double theta, Double psi, Double sigma, Double gamma)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.ImaginaryFunction2DInt32Int32DoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Gabor.ImaginaryFunction2D(Int32 x, Int32 y, Double lambda, Double theta, Double psi, Double sigma, Double gamma)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Kernel2DDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Gabor.Kernel2D(Double lambda, Double theta, Double psi, Double sigma, Double gamma)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Kernel2DDoubleDoubleDoubleDoubleDoubleBoolean">
            <summary>Définit le shim de Gabor.Kernel2D(Double lambda, Double theta, Double psi, Double sigma, Double gamma, Boolean normalized)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Kernel2DInt32DoubleDoubleDoubleDoubleDoubleBoolean">
            <summary>Définit le shim de Gabor.Kernel2D(Int32 size, Double lambda, Double theta, Double psi, Double sigma, Double gamma, Boolean normalized)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.Kernel2DInt32DoubleDoubleDoubleDoubleDoubleBooleanGaborKernelKind">
            <summary>Définit le shim de Gabor.Kernel2D(Int32 size, Double lambda, Double theta, Double psi, Double sigma, Double gamma, Boolean normalized, GaborKernelKind function)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGabor.RealFunction2DInt32Int32DoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Gabor.RealFunction2D(Int32 x, Int32 y, Double lambda, Double theta, Double psi, Double sigma, Double gamma)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimGamma">
            <summary>Type shim de Accord.Math.Gamma</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGamma.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGamma.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimGamma.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.DigammaDouble">
            <summary>Définit le shim de Gamma.Digamma(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.FunctionDouble">
            <summary>Définit le shim de Gamma.Function(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.InverseDoubleDouble">
            <summary>Définit le shim de Gamma.Inverse(Double a, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.InverseLowerIncompleteDoubleDouble">
            <summary>Définit le shim de Gamma.InverseLowerIncomplete(Double a, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.InverseUpperIncompleteDoubleDouble">
            <summary>Définit le shim de Gamma.InverseUpperIncomplete(Double a, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.LogDouble">
            <summary>Définit le shim de Gamma.Log(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.LogDoubleInt32">
            <summary>Définit le shim de Gamma.Log(Double x, Int32 p)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.LowerIncompleteDoubleDouble">
            <summary>Définit le shim de Gamma.LowerIncomplete(Double a, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.MultivariateDoubleInt32">
            <summary>Définit le shim de Gamma.Multivariate(Double x, Int32 p)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.RandomDoubleDouble">
            <summary>Définit le shim de Gamma.Random(Double d, Double c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.StirlingDouble">
            <summary>Définit le shim de Gamma.Stirling(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.TrigammaDouble">
            <summary>Définit le shim de Gamma.Trigamma(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.UpperIncompleteDoubleDouble">
            <summary>Définit le shim de Gamma.UpperIncomplete(Double a, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimGamma.inverseDoubleDouble">
            <summary>Définit le shim de Gamma.inverse(Double a, Double y)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimHartleyTransform">
            <summary>Type shim de Accord.Math.HartleyTransform</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHartleyTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHartleyTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHartleyTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHartleyTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHartleyTransform.DHTDoubleArray">
            <summary>Définit le shim de HartleyTransform.DHT(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHartleyTransform.DHTDoubleMdArray2">
            <summary>Définit le shim de HartleyTransform.DHT(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHartleyTransform.casDouble">
            <summary>Définit le shim de HartleyTransform.cas(Double theta)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimHilbertTransform">
            <summary>Type shim de Accord.Math.HilbertTransform</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHilbertTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHilbertTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimHilbertTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHilbertTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHilbertTransform.FHTComplexArrayFourierTransformDirection">
            <summary>Définit le shim de HilbertTransform.FHT(Complex[] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimHilbertTransform.FHTDoubleArrayFourierTransformDirection">
            <summary>Définit le shim de HilbertTransform.FHT(Double[] data, Direction direction)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimMatrix">
            <summary>Type shim de Accord.Math.Matrix</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AbsDoubleArray">
            <summary>Définit le shim de Matrix.Abs(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AbsDoubleMdArray2">
            <summary>Définit le shim de Matrix.Abs(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AbsInt32Array">
            <summary>Définit le shim de Matrix.Abs(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AbsInt32MdArray2">
            <summary>Définit le shim de Matrix.Abs(Int32[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleArrayArrayDouble">
            <summary>Définit le shim de Matrix.Add(Double[][] a, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Add(Double[][] a, Double[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleArrayDouble">
            <summary>Définit le shim de Matrix.Add(Double[] a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.Add(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleDoubleMdArray2">
            <summary>Définit le shim de Matrix.Add(Double x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleMdArray2Double">
            <summary>Définit le shim de Matrix.Add(Double[,] matrix, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de Matrix.Add(Double[,] matrix, Double[] vector, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.Add(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddToDiagonalDoubleArrayArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.AddToDiagonal(Double[][] matrix, Double scalar, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.AddToDiagonalDoubleMdArray2DoubleBoolean">
            <summary>Définit le shim de Matrix.AddToDiagonal(Double[,] matrix, Double scalar, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyInPlaceOf1M0ArrayFuncOfM0Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],System.Func{``0,System.Int32,``0}})">
            <summary>Définit le shim de Matrix.ApplyInPlace(!!0[] vector, Func`3&lt;!!0,Int32,!!0&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyInPlaceOf1M0ArrayFuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],System.Func{``0,``0}})">
            <summary>Définit le shim de Matrix.ApplyInPlace(!!0[] vector, Func`2&lt;!!0,!!0&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyInPlaceOf1M0MdArray2FuncOfM0Int32Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[0:,0:],System.Func{``0,System.Int32,System.Int32,``0}})">
            <summary>Définit le shim de Matrix.ApplyInPlace(!!0[,] matrix, Func`4&lt;!!0,Int32,Int32,!!0&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyInPlaceOf1M0MdArray2FuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[0:,0:],System.Func{``0,``0}})">
            <summary>Définit le shim de Matrix.ApplyInPlace(!!0[,] matrix, Func`2&lt;!!0,!!0&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyOf2IListOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Func{``0,``1},``1[]})">
            <summary>Définit le shim de Matrix.Apply(IList`1&lt;!!0&gt; vector, Func`2&lt;!!0,!!1&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyOf2M0ArrayFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,``1},``1[]})">
            <summary>Définit le shim de Matrix.Apply(!!0[] vector, Func`2&lt;!!0,!!1&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyOf2M0MdArray2FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Func{``0,``1},``1[0:,0:]})">
            <summary>Définit le shim de Matrix.Apply(!!0[,] matrix, Func`2&lt;!!0,!!1&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyWithIndexOf2M0ArrayFuncOfM0Int32M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,System.Int32,``1},``1[]})">
            <summary>Définit le shim de Matrix.ApplyWithIndex(!!0[] vector, Func`3&lt;!!0,Int32,!!1&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ApplyWithIndexOf2M0MdArray2FuncOfM0Int32Int32M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Func{``0,System.Int32,System.Int32,``1},``1[0:,0:]})">
            <summary>Définit le shim de Matrix.ApplyWithIndex(!!0[,] matrix, Func`4&lt;!!0,Int32,Int32,!!1&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.BottomOf1M0ArrayInt32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Boolean,System.Int32[]})">
            <summary>Définit le shim de Matrix.Bottom(!!0[] values, Int32 count, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CartesianProductOf1IEnumerableOfIEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}}})">
            <summary>Définit le shim de Matrix.CartesianProduct(IEnumerable`1&lt;IEnumerable`1&lt;!!0&gt;&gt; sequences)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CartesianProductOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.CartesianProduct(!!0[][] sequences)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CartesianProductOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],``0[][]})">
            <summary>Définit le shim de Matrix.CartesianProduct(!!0[] sequence1, !!0[] sequence2)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.CeilingDoubleArray">
            <summary>Définit le shim de Matrix.Ceiling(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.CeilingDoubleMdArray2">
            <summary>Définit le shim de Matrix.Ceiling(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.CenteringInt32">
            <summary>Définit le shim de Matrix.Centering(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ColumnVectorOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ColumnVector(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ColumnsOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32})">
            <summary>Définit le shim de Matrix.Columns(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ColumnsOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Définit le shim de Matrix.Columns(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[][] vectors)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0ArrayArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][][],``0[][]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[][][] matrices)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0ArrayArrayM0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[][] a, !!0[][] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0ArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0,``0[]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[] vector, !!0 element)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],``0[]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[] a, !!0[] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0[],``0[]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0 element, !!0[] vector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0MdArray2Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:][],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[,][] matrices)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0MdArray2M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[,] matrix, !!0[] vector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConcatenateOf1M0MdArray2M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Concatenate(!!0[,] a, !!0[,] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConvertOf2M0ArrayArrayConverterOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Converter{``0,``1},``1[][]})">
            <summary>Définit le shim de Matrix.Convert(!!0[][] matrix, Converter`2&lt;!!0,!!1&gt; converter)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConvertOf2M0ArrayConverterOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Converter{``0,``1},``1[]})">
            <summary>Définit le shim de Matrix.Convert(!!0[] vector, Converter`2&lt;!!0,!!1&gt; converter)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ConvertOf2M0MdArray2ConverterOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Converter{``0,``1},``1[0:,0:]})">
            <summary>Définit le shim de Matrix.Convert(!!0[,] matrix, Converter`2&lt;!!0,!!1&gt; converter)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ConvolveDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.Convolve(Double[] a, Double[] kernel)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ConvolveDoubleArrayDoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Convolve(Double[] a, Double[] kernel, Boolean trim)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CountOf1M0ArrayFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,System.Boolean},System.Int32})">
            <summary>Définit le shim de Matrix.Count(!!0[] data, Func`2&lt;!!0,Boolean&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CreateOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Create(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CreateOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Create(Int32 rows, Int32 cols)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CreateOf1Int32Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Create(Int32 rows, Int32 cols, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.CreateOf1Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Create(Int32 size, !!0 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.CumulativeSumDoubleArray">
            <summary>Définit le shim de Matrix.CumulativeSum(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.CumulativeSumDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.CumulativeSum(Double[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DeterminantDoubleMdArray2">
            <summary>Définit le shim de Matrix.Determinant(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DeterminantDoubleMdArray2Boolean">
            <summary>Définit le shim de Matrix.Determinant(Double[,] matrix, Boolean symmetric)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1Int32Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Diagonal(Int32 rows, Int32 cols, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Diagonal(Int32 rows, Int32 cols, !!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Diagonal(Int32 size, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Diagonal(Int32 size, !!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Diagonal(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[]})">
            <summary>Définit le shim de Matrix.Diagonal(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DiagonalOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[]})">
            <summary>Définit le shim de Matrix.Diagonal(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DistinctOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[]})">
            <summary>Définit le shim de Matrix.Distinct(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DistinctOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.Distinct(!!0[][] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DistinctOf1M0ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Boolean,``0[]})">
            <summary>Définit le shim de Matrix.Distinct(!!0[] values, Boolean allowNulls)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DistinctOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[][]})">
            <summary>Définit le shim de Matrix.Distinct(!!0[,] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.DistinctOf2M0ArrayFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,``1},``0[]})">
            <summary>Définit le shim de Matrix.Distinct(!!0[] values, Func`2&lt;!!0,!!1&gt; property)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideByDiagonalDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Matrix.DivideByDiagonal(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideByDiagonalDoubleMdArray2DoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Matrix.DivideByDiagonal(Double[,] a, Double[] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.Divide(Double[] vector, Double x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleDoubleArray">
            <summary>Définit le shim de Matrix.Divide(Double x, Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleDoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Divide(Double x, Double[] vector, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleDoubleMdArray2">
            <summary>Définit le shim de Matrix.Divide(Double x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleMdArray2DoubleBoolean">
            <summary>Définit le shim de Matrix.Divide(Double[,] matrix, Double x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.Divide(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideInt32ArrayDouble">
            <summary>Définit le shim de Matrix.Divide(Int32[] vector, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideInt32DoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Divide(Int32 x, Double[] vector, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideInt32DoubleMdArray2">
            <summary>Définit le shim de Matrix.Divide(Int32 x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideSingleArraySingle">
            <summary>Définit le shim de Matrix.Divide(Single[] vector, Single x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.DivideUInt32MdArray2Single">
            <summary>Définit le shim de Matrix.Divide(UInt32[,] matrix, Single x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideDoubleArrayArrayDoubleArrayInt32Boolean">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Double[][] a, Double[] b, Int32 dimension, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideDoubleMdArray2DoubleArrayInt32Boolean">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Double[,] a, Double[] b, Int32 dimension, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideInt32MdArray2Int32ArrayInt32">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Int32[,] a, Int32[] b, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseDivideSingleMdArray2SingleMdArray2">
            <summary>Définit le shim de Matrix.ElementwiseDivide(Single[,] a, Single[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyDoubleArrayInt32Array">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Double[] a, Int32[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyDoubleMdArray2DoubleArrayDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Double[,] a, Double[] b, Double[,] r, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Double[,] a, Double[] b, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyInt32ArrayInt32Array">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Int32[] a, Int32[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwiseMultiplyInt32MdArray2Int32MdArray2">
            <summary>Définit le shim de Matrix.ElementwiseMultiply(Int32[,] a, Int32[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwisePowerDoubleArrayDouble">
            <summary>Définit le shim de Matrix.ElementwisePower(Double[] x, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ElementwisePowerDoubleMdArray2Double">
            <summary>Définit le shim de Matrix.ElementwisePower(Double[,] x, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.EqualsObject">
            <summary>Définit le shim de Matrix.Equals(Object value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ExpDoubleArray">
            <summary>Définit le shim de Matrix.Exp(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ExpDoubleMdArray2">
            <summary>Définit le shim de Matrix.Exp(Double[,] value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ExpandOf1M0ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Expand(!!0[] vector, Int32[] count)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ExpandOf1M0MdArray2Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Expand(!!0[,] matrix, Int32[] count)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.FindOf1M0ArrayFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,System.Boolean},System.Int32[]})">
            <summary>Définit le shim de Matrix.Find(!!0[] data, Func`2&lt;!!0,Boolean&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.FindOf1M0ArrayFuncOfM0BooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,System.Boolean},System.Boolean,System.Int32[]})">
            <summary>Définit le shim de Matrix.Find(!!0[] data, Func`2&lt;!!0,Boolean&gt; func, Boolean firstOnly)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.FindOf1M0MdArray2FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Func{``0,System.Boolean},System.Int32[][]})">
            <summary>Définit le shim de Matrix.Find(!!0[,] data, Func`2&lt;!!0,Boolean&gt; func)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.FindOf1M0MdArray2FuncOfM0BooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Func{``0,System.Boolean},System.Boolean,System.Int32[][]})">
            <summary>Définit le shim de Matrix.Find(!!0[,] data, Func`2&lt;!!0,Boolean&gt; func, Boolean firstOnly)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.FirstOf1M0ArrayFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Func{``0,System.Boolean},System.Int32})">
            <summary>Définit le shim de Matrix.First(!!0[] data, Func`2&lt;!!0,Boolean&gt; func)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.FloorDoubleArray">
            <summary>Définit le shim de Matrix.Floor(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.FloorDoubleMdArray2">
            <summary>Définit le shim de Matrix.Floor(Double[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetColumnOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.GetColumn(!!0[][] m, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetColumnOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.GetColumn(!!0[,] m, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetColumnsOf1M0ArrayArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32[],``0[][]})">
            <summary>Définit le shim de Matrix.GetColumns(!!0[][] m, Int32[] index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetColumnsOf1M0MdArray2Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.GetColumns(!!0[,] m, Int32[] index)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.GetDimensionsArray">
            <summary>Définit le shim de Matrix.GetDimensions(Array array)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.GetIndicesArray">
            <summary>Définit le shim de Matrix.GetIndices(Array array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetRowOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.GetRow(!!0[][] m, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetRowOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.GetRow(!!0[,] m, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.GetRowsOf1M0ArrayArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32[],``0[][]})">
            <summary>Définit le shim de Matrix.GetRows(!!0[][] m, Int32[] index)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasDoubleMdArray2DoubleDouble">
            <summary>Définit le shim de Matrix.Has(Double[,] matrix, Double value, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasInfinityDoubleArray">
            <summary>Définit le shim de Matrix.HasInfinity(Double[] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasInfinityDoubleArrayArray">
            <summary>Définit le shim de Matrix.HasInfinity(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasInfinityDoubleMdArray2">
            <summary>Définit le shim de Matrix.HasInfinity(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasNaNDoubleArray">
            <summary>Définit le shim de Matrix.HasNaN(Double[] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasNaNDoubleArrayArray">
            <summary>Définit le shim de Matrix.HasNaN(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasNaNDoubleMdArray2">
            <summary>Définit le shim de Matrix.HasNaN(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.HasSingleMdArray2SingleDouble">
            <summary>Définit le shim de Matrix.Has(Single[,] matrix, Single value, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IdentityInt32">
            <summary>Définit le shim de Matrix.Identity(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IndexOfOf1M0ArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0,System.Int32})">
            <summary>Définit le shim de Matrix.IndexOf(!!0[] data, !!0 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IndicesInt32">
            <summary>Définit le shim de Matrix.Indices(Int32 to)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IndicesInt32Int32">
            <summary>Définit le shim de Matrix.Indices(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InnerProductDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.InnerProduct(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InnerProductSingleArraySingleArray">
            <summary>Définit le shim de Matrix.InnerProduct(Single[] a, Single[] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf2M0ArrayArrayM1Array``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``1[],``0[][]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[][] matrix, !!1[] column)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf2M0ArrayArrayM1ArrayInt32``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``1[],System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[][] matrix, !!1[] column, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf2M0MdArray2M1Array``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``1[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[,] matrix, !!1[] column)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertColumnOf2M0MdArray2M1ArrayInt32``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``1[],System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertColumn(!!0[,] matrix, !!1[] column, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf2M0ArrayArrayM1Array``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``1[],``0[][]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[][] matrix, !!1[] row)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf2M0ArrayArrayM1ArrayInt32``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``1[],System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[][] matrix, !!1[] row, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf2M0MdArray2M1Array``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``1[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[,] matrix, !!1[] row)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.InsertRowOf2M0MdArray2M1ArrayInt32``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``1[],System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.InsertRow(!!0[,] matrix, !!1[] row, Int32 index)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalDoubleDoubleDouble">
            <summary>Définit le shim de Matrix.Interval(Double from, Double to, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalDoubleDoubleInt32">
            <summary>Définit le shim de Matrix.Interval(Double from, Double to, Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalDoubleRangeDouble">
            <summary>Définit le shim de Matrix.Interval(DoubleRange range, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalDoubleRangeInt32">
            <summary>Définit le shim de Matrix.Interval(DoubleRange range, Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalInt32Int32">
            <summary>Définit le shim de Matrix.Interval(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IntervalSingleSingleDouble">
            <summary>Définit le shim de Matrix.Interval(Single from, Single to, Double stepSize)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InverseDoubleArrayArray">
            <summary>Définit le shim de Matrix.Inverse(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InverseDoubleArrayArrayBoolean">
            <summary>Définit le shim de Matrix.Inverse(Double[][] matrix, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InverseDoubleMdArray2">
            <summary>Définit le shim de Matrix.Inverse(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.InverseDoubleMdArray2Boolean">
            <summary>Définit le shim de Matrix.Inverse(Double[,] matrix, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsDiagonalOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean})">
            <summary>Définit le shim de Matrix.IsDiagonal(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsDiagonalOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsDiagonal(!!0[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleArrayArrayDoubleArrayArrayDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double[][] objA, Double[][] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleArrayDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double[] vector, Double scalar)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double[] objA, Double[] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleArrayDoubleDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double[] vector, Double scalar, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleDoubleDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double a, Double b, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleMdArray2Double">
            <summary>Définit le shim de Matrix.IsEqual(Double[,] matrix, Double scalar)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleMdArray2DoubleDouble">
            <summary>Définit le shim de Matrix.IsEqual(Double[,] matrix, Double scalar, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualDoubleMdArray2DoubleMdArray2Double">
            <summary>Définit le shim de Matrix.IsEqual(Double[,] objA, Double[,] objB, Double threshold)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsEqualOf1M0ArrayArrayM0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][],System.Boolean})">
            <summary>Définit le shim de Matrix.IsEqual(!!0[][] objA, !!0[][] objB)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsEqualOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],System.Boolean})">
            <summary>Définit le shim de Matrix.IsEqual(!!0[] objA, !!0[] objB)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsEqualOf1M0MdArray2M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsEqual(!!0[,] objA, !!0[,] objB)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualSingleArrayArraySingleArrayArrayDouble">
            <summary>Définit le shim de Matrix.IsEqual(Single[][] objA, Single[][] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualSingleArraySingleArrayDouble">
            <summary>Définit le shim de Matrix.IsEqual(Single[] objA, Single[] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsEqualSingleMdArray2SingleMdArray2Double">
            <summary>Définit le shim de Matrix.IsEqual(Single[,] objA, Single[,] objB, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsIntegerDoubleDouble">
            <summary>Définit le shim de Matrix.IsInteger(Double x, Double threshold)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsLowerTriangularOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean})">
            <summary>Définit le shim de Matrix.IsLowerTriangular(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsLowerTriangularOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsLowerTriangular(!!0[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsPositiveDefiniteDoubleArrayArray">
            <summary>Définit le shim de Matrix.IsPositiveDefinite(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsPositiveDefiniteDoubleMdArray2">
            <summary>Définit le shim de Matrix.IsPositiveDefinite(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsRelativelyEqualDoubleDoubleDouble">
            <summary>Définit le shim de Matrix.IsRelativelyEqual(Double a, Double b, Double threshold)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.IsSingularDoubleMdArray2">
            <summary>Définit le shim de Matrix.IsSingular(Double[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsSortedOf1M0ArrayComparerDirection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Accord.Math.Comparers.ComparerDirection,System.Boolean})">
            <summary>Définit le shim de Matrix.IsSorted(!!0[] values, ComparerDirection direction)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsSquareOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsSquare(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsSymmetricOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean})">
            <summary>Définit le shim de Matrix.IsSymmetric(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsSymmetricOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsSymmetric(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsUpperTriangularOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean})">
            <summary>Définit le shim de Matrix.IsUpperTriangular(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.IsUpperTriangularOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean})">
            <summary>Définit le shim de Matrix.IsUpperTriangular(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedDiagonalOf1Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0,``0[][]})">
            <summary>Définit le shim de Matrix.JaggedDiagonal(Int32 size, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedDiagonalOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[][]})">
            <summary>Définit le shim de Matrix.JaggedDiagonal(!!0[] values)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.JaggedIdentityInt32">
            <summary>Définit le shim de Matrix.JaggedIdentity(Int32 size)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.JaggedMagicInt32">
            <summary>Définit le shim de Matrix.JaggedMagic(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Jagged(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.Jagged(Int32 rows, Int32 cols)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedOf1Int32Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,``0,``0[][]})">
            <summary>Définit le shim de Matrix.Jagged(Int32 rows, Int32 cols, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.JaggedOf1Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Jagged(Int32 size, !!0 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.KroneckerProductDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.KroneckerProduct(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.KroneckerProductDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.KroneckerProduct(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogDeterminantDoubleMdArray2">
            <summary>Définit le shim de Matrix.LogDeterminant(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogDeterminantDoubleMdArray2Boolean">
            <summary>Définit le shim de Matrix.LogDeterminant(Double[,] matrix, Boolean symmetric)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogDoubleArray">
            <summary>Définit le shim de Matrix.Log(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogDoubleMdArray2">
            <summary>Définit le shim de Matrix.Log(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogInt32Array">
            <summary>Définit le shim de Matrix.Log(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.LogPseudoDeterminantDoubleMdArray2">
            <summary>Définit le shim de Matrix.LogPseudoDeterminant(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MagicInt32">
            <summary>Définit le shim de Matrix.Magic(Int32 size)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0})">
            <summary>Définit le shim de Matrix.Max(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0})">
            <summary>Définit le shim de Matrix.Max(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Max(!!0[][] matrix, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayArrayInt32Int32ArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[][],System.Int32,System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Max(!!0[][] matrix, Int32 dimension, Int32[]&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayArrayTupleOfInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[][],System.Tuple{System.Int32,System.Int32},``0})">
            <summary>Définit le shim de Matrix.Max(!!0[][] matrix, Tuple`2&lt;Int32,Int32&gt;&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0})">
            <summary>Définit le shim de Matrix.Max(!!0[] values, Int32 length)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[],System.Int32,System.Int32,``0})">
            <summary>Définit le shim de Matrix.Max(!!0[] values, Int32 length, Int32&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[],System.Int32,``0})">
            <summary>Définit le shim de Matrix.Max(!!0[] values, Int32&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0ArrayInt32OutBoolean``1(Microsoft.QualityTools.Testing.Fakes.Delegates.AccordMathDelegates.Out1Func4{``0[],System.Int32,System.Boolean,``0})">
            <summary>Définit le shim de Matrix.Max(!!0[] values, Int32&amp; imax, Boolean alreadySorted)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0})">
            <summary>Définit le shim de Matrix.Max(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Max(!!0[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0MdArray2Int32Int32ArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[0:,0:],System.Int32,System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Max(!!0[,] matrix, Int32 dimension, Int32[]&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MaxOf1M0MdArray2TupleOfInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[0:,0:],System.Tuple{System.Int32,System.Int32},``0})">
            <summary>Définit le shim de Matrix.Max(!!0[,] matrix, Tuple`2&lt;Int32,Int32&gt;&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MemberwiseCloneOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.MemberwiseClone(!!0[][] a)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MemberwiseCloneOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.MemberwiseClone(!!0[,] a)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MergeOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[]})">
            <summary>Définit le shim de Matrix.Merge(!!0[][] vectors)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MergeOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Merge(!!0[][] vectors, Int32 size)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MeshDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Matrix.Mesh(Double rowMin, Double rowMax, Double rowStepSize, Double colMin, Double colMax, Double colStepSize)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MeshDoubleDoubleInt32DoubleDoubleInt32">
            <summary>Définit le shim de Matrix.Mesh(Double rowMin, Double rowMax, Int32 rowSteps, Double colMin, Double colMax, Int32 colSteps)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MeshDoubleRangeDoubleRangeDoubleDouble">
            <summary>Définit le shim de Matrix.Mesh(DoubleRange rowRange, DoubleRange colRange, Double rowStepSize, Double colStepSize)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MeshGridOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],System.Tuple{``0[0:,0:],``0[0:,0:]}})">
            <summary>Définit le shim de Matrix.MeshGrid(!!0[] x, !!0[] y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MeshInt32Int32Int32Int32">
            <summary>Définit le shim de Matrix.Mesh(Int32 rowMin, Int32 rowMax, Int32 colMin, Int32 colMax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MeshOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],``0[][]})">
            <summary>Définit le shim de Matrix.Mesh(!!0[] x, !!0[] y)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0})">
            <summary>Définit le shim de Matrix.Min(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0})">
            <summary>Définit le shim de Matrix.Min(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Min(!!0[][] matrix, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayArrayInt32Int32ArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[][],System.Int32,System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Min(!!0[][] matrix, Int32 dimension, Int32[]&amp; imin)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayArrayTupleOfInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[][],System.Tuple{System.Int32,System.Int32},``0})">
            <summary>Définit le shim de Matrix.Min(!!0[][] matrix, Tuple`2&lt;Int32,Int32&gt;&amp; imin)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0})">
            <summary>Définit le shim de Matrix.Min(!!0[] values, Int32 length)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[],System.Int32,System.Int32,``0})">
            <summary>Définit le shim de Matrix.Min(!!0[] values, Int32 length, Int32&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0ArrayInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[],System.Int32,``0})">
            <summary>Définit le shim de Matrix.Min(!!0[] values, Int32&amp; imax)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0})">
            <summary>Définit le shim de Matrix.Min(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Min(!!0[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0MdArray2Int32Int32ArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[0:,0:],System.Int32,System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Min(!!0[,] matrix, Int32 dimension, Int32[]&amp; imin)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.MinOf1M0MdArray2TupleOfInt32Int32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0[0:,0:],System.Tuple{System.Int32,System.Int32},``0})">
            <summary>Définit le shim de Matrix.Min(!!0[,] matrix, Tuple`2&lt;Int32,Int32&gt;&amp; imin)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Double[][] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalDoubleArrayArrayDoubleArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Double[][] a, Double[] b, Double[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalDoubleMdArray2DoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Double[,] a, Double[] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalSingleArrayArraySingleArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Single[][] a, Single[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalSingleArrayArraySingleArraySingleArrayArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Single[][] a, Single[] b, Single[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalSingleMdArray2SingleArray">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Single[,] a, Single[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByDiagonalSingleMdArray2SingleArraySingleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByDiagonal(Single[,] a, Single[] b, Single[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByTransposeDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByTranspose(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByTransposeDoubleMdArray2DoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByTranspose(Double[,] a, Double[,] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByTransposeSingleMdArray2SingleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByTranspose(Single[,] a, Single[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyByTransposeSingleMdArray2SingleMdArray2SingleMdArray2">
            <summary>Définit le shim de Matrix.MultiplyByTranspose(Single[,] a, Single[,] b, Single[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de Matrix.Multiply(Double[][] matrix, Double[] columnVector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Double[][] a, Double[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayArrayDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Double[][] a, Double[][] b, Double[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayDouble">
            <summary>Définit le shim de Matrix.Multiply(Double[] vector, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.Multiply(Double[] vector, Double x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Double[] rowVector, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleDoubleArray">
            <summary>Définit le shim de Matrix.Multiply(Double x, Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleDoubleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Double x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2Double">
            <summary>Définit le shim de Matrix.Multiply(Double[,] matrix, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Matrix.Multiply(Double[,] matrix, Double[] columnVector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleBoolean">
            <summary>Définit le shim de Matrix.Multiply(Double[,] matrix, Double x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleDoubleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Double[,] matrix, Double x, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleMdArray2DoubleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Double[,] a, Double[,] b, Double[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyDoubleMdArray2DoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Double[,] a, Double[,] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyInt32DoubleArray">
            <summary>Définit le shim de Matrix.Multiply(Int32 x, Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplyInt32SingleArray">
            <summary>Définit le shim de Matrix.Multiply(Int32 x, Single[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Single[][] a, Double[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArrayArrayDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Single[][] a, Double[][] b, Double[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArrayArraySingleArray">
            <summary>Définit le shim de Matrix.Multiply(Single[][] matrix, Single[] columnVector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArrayArraySingleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Single[][] a, Single[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArrayArraySingleArrayArraySingleArrayArray">
            <summary>Définit le shim de Matrix.Multiply(Single[][] a, Single[][] b, Single[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArraySingle">
            <summary>Définit le shim de Matrix.Multiply(Single[] vector, Single x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleArraySingleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Single[] rowVector, Single[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleMdArray2Single">
            <summary>Définit le shim de Matrix.Multiply(Single[,] matrix, Single x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleMdArray2SingleArray">
            <summary>Définit le shim de Matrix.Multiply(Single[,] matrix, Single[] columnVector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleMdArray2SingleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Single[,] a, Single[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleMdArray2SingleMdArray2SingleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Single[,] a, Single[,] b, Single[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleMdArray2SingleSingleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Single[,] matrix, Single x, Single[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleSingleArray">
            <summary>Définit le shim de Matrix.Multiply(Single x, Single[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.MultiplySingleSingleMdArray2">
            <summary>Définit le shim de Matrix.Multiply(Single x, Single[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.NormalizeDoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Normalize(Double[] vector, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.NormalizeDoubleArrayFuncOfDoubleArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.Normalize(Double[] vector, Func`2&lt;Double[],Double&gt; norm, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.NormalizeSingleArrayBoolean">
            <summary>Définit le shim de Matrix.Normalize(Single[] vector, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.NormalizeSingleArrayFuncOfSingleArraySingleBoolean">
            <summary>Définit le shim de Matrix.Normalize(Single[] vector, Func`2&lt;Single[],Single&gt; norm, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.OuterProductDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.OuterProduct(Double[] a, Double[] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.PadOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Pad(!!0[,] matrix, Int32 all)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.PadOf1M0MdArray2Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Pad(!!0[,] matrix, Int32 topBottom, Int32 rightLeft)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.PadOf1M0MdArray2Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Pad(!!0[,] matrix, Int32 top, Int32 sides, Int32 bottom)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.PadOf1M0MdArray2Int32Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Pad(!!0[,] matrix, Int32 top, Int32 right, Int32 bottom, Int32 left)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ParseJaggedStringIMatrixFormatProvider">
            <summary>Définit le shim de Matrix.ParseJagged(String s, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ParseString">
            <summary>Définit le shim de Matrix.Parse(String str)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ParseStringIMatrixFormatProvider">
            <summary>Définit le shim de Matrix.Parse(String str, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.PowerDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.Power(Double[,] matrix, Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ProductDoubleArray">
            <summary>Définit le shim de Matrix.Product(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ProductInt32Array">
            <summary>Définit le shim de Matrix.Product(Int32[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.PseudoDeterminantDoubleMdArray2">
            <summary>Définit le shim de Matrix.PseudoDeterminant(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.PseudoInverseDoubleArrayArray">
            <summary>Définit le shim de Matrix.PseudoInverse(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.PseudoInverseDoubleMdArray2">
            <summary>Définit le shim de Matrix.PseudoInverse(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32BooleanDoubleDouble">
            <summary>Définit le shim de Matrix.Random(Int32 size, Boolean symmetric, Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32DoubleDouble">
            <summary>Définit le shim de Matrix.Random(Int32 size, Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32IRandomNumberGenerator">
            <summary>Définit le shim de Matrix.Random(Int32 size, IRandomNumberGenerator generator)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32Int32">
            <summary>Définit le shim de Matrix.Random(Int32 rows, Int32 cols)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32Int32DoubleDouble">
            <summary>Définit le shim de Matrix.Random(Int32 rows, Int32 cols, Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32Int32IRandomNumberGenerator">
            <summary>Définit le shim de Matrix.Random(Int32 rows, Int32 cols, IRandomNumberGenerator generator)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RandomInt32SingleSingle">
            <summary>Définit le shim de Matrix.Random(Int32 size, Single minValue, Single maxValue)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeDoubleArray">
            <summary>Définit le shim de Matrix.Range(Double[] values)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeDoubleArrayArrayInt32">
            <summary>Définit le shim de Matrix.Range(Double[][] value, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeDoubleMdArray2">
            <summary>Définit le shim de Matrix.Range(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.Range(Double[,] value, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeInt32Array">
            <summary>Définit le shim de Matrix.Range(Int32[] values)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RangeInt32MdArray2">
            <summary>Définit le shim de Matrix.Range(Int32[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RankDoubleMdArray2">
            <summary>Définit le shim de Matrix.Rank(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RankSingleMdArray2">
            <summary>Définit le shim de Matrix.Rank(Single[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RemoveAtOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.RemoveAt(!!0[] array, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RemoveColumnOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.RemoveColumn(!!0[][] matrix, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RemoveColumnOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.RemoveColumn(!!0[,] matrix, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RemoveOf1M0MdArray2Int32ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Remove(!!0[,] data, Int32[] rowIndexes, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RemoveRowOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.RemoveRow(!!0[,] matrix, Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ReshapeOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[]})">
            <summary>Définit le shim de Matrix.Reshape(!!0[][] array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ReshapeOf1M0ArrayArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Reshape(!!0[][] array, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ReshapeOf1M0ArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Reshape(!!0[] array, Int32 rows, Int32 cols)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ReshapeOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[]})">
            <summary>Définit le shim de Matrix.Reshape(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ReshapeOf1M0MdArray2Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Reshape(!!0[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RoundDoubleArrayInt32">
            <summary>Définit le shim de Matrix.Round(Double[] vector, Int32 decimals)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.RoundDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.Round(Double[,] matrix, Int32 decimals)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RowVectorOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.RowVector(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RowsOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32})">
            <summary>Définit le shim de Matrix.Rows(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.RowsOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Définit le shim de Matrix.Rows(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SetColumnOf1M0ArrayArrayInt32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[],``0[][]})">
            <summary>Définit le shim de Matrix.SetColumn(!!0[][] m, Int32 index, !!0[] column)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SetColumnOf1M0MdArray2Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.SetColumn(!!0[,] m, Int32 index, !!0[] column)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SetEqualsOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Définit le shim de Matrix.SetEquals(IEnumerable`1&lt;!!0&gt; list1, IEnumerable`1&lt;!!0&gt; list2)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SetRowOf1M0ArrayArrayInt32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,``0[],``0[][]})">
            <summary>Définit le shim de Matrix.SetRow(!!0[][] m, Int32 index, !!0[] row)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SetRowOf1M0MdArray2Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.SetRow(!!0[,] m, Int32 index, !!0[] row)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SignDoubleArray">
            <summary>Définit le shim de Matrix.Sign(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SolveDoubleArrayArrayDoubleArrayArrayBoolean">
            <summary>Définit le shim de Matrix.Solve(Double[][] matrix, Double[][] rightSide, Boolean leastSquares)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SolveDoubleArrayArrayDoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Solve(Double[][] matrix, Double[] rightSide, Boolean leastSquares)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SolveDoubleMdArray2DoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Solve(Double[,] matrix, Double[] rightSide, Boolean leastSquares)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SolveDoubleMdArray2DoubleMdArray2Boolean">
            <summary>Définit le shim de Matrix.Solve(Double[,] matrix, Double[,] rightSide, Boolean leastSquares)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SortOf2M0ArrayM1ArrayArrayIComparerOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``1[][],System.Collections.Generic.IComparer{``0},``1[][]})">
            <summary>Définit le shim de Matrix.Sort(!!0[] keys, !!1[][] values, IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SortOf2M0ArrayM1MdArray2IComparerOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``1[0:,0:],System.Collections.Generic.IComparer{``0},``1[0:,0:]})">
            <summary>Définit le shim de Matrix.Sort(!!0[] keys, !!1[,] values, IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SplitOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.Split(!!0[] vector, Int32 size)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SqrtDoubleArray">
            <summary>Définit le shim de Matrix.Sqrt(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SqrtDoubleMdArray2">
            <summary>Définit le shim de Matrix.Sqrt(Double[,] value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[] elements)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[][] vectors)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0ArrayArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][][],``0[][]})">
            <summary>Définit le shim de Matrix.Stack(!!0[][][] matrices)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0ArrayArrayM0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.Stack(!!0[][] a, !!0[][] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0ArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[] vector, !!0 element)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[] a, !!0[] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0MdArray2Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:][],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[,][] matrices)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.StackOf1M0MdArray2M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Stack(!!0[,] matrix, !!0[] vector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubgroupsOf1M0ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],``0[][]})">
            <summary>Définit le shim de Matrix.Subgroups(!!0[] values, Int32[] groups)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubgroupsOf1M0ArrayInt32ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.Subgroups(!!0[] values, Int32[] groups, Int32 classes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1ListOfM0Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Int32[],System.Collections.Generic.List{``0}})">
            <summary>Définit le shim de Matrix.Submatrix(List`1&lt;!!0&gt; source, Int32[] indexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayArrayInt32ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32[],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[][] source, Int32[] indexes, Boolean transpose)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayArrayInt32ArrayInt32ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32[],System.Int32[],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[][] source, Int32[] rowIndexes, Int32[] columnIndexes, Boolean reuseMemory)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayArrayInt32ArrayInt32Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32[],System.Int32,System.Int32,System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[][] source, Int32[] rowIndexes, Int32 startColumn, Int32 endColumn, Boolean reuseMemory)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayArrayInt32Int32Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,System.Int32,System.Int32[],``0[][]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[][] source, Int32 startRow, Int32 endRow, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayArrayInt32Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Int32,System.Int32,System.Int32,System.Int32,``0[][]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[][] source, Int32 startRow, Int32 endRow, Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayIListOfInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Collections.Generic.IList{System.Int32},``0[]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[] source, IList`1&lt;Int32&gt; indexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[] source, Int32 first)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],``0[]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[] source, Int32[] indexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0ArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Int32,``0[]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[] source, Int32 startRow, Int32 endRow)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, Int32[] rowIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2Int32ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, Int32[] rowIndexes, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2Int32ArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32[],System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, Int32[] rowIndexes, Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2Int32Int32Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,System.Int32,System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, Int32 startRow, Int32 endRow, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2Int32Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, Int32 startRow, Int32 endRow, Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2M0MdArray2Int32ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[0:,0:],``0[0:,0:],System.Int32[],System.Int32[]})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, !!0[,] destination, Int32[] rowIndexes, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SubmatrixOf1M0MdArray2M0MdArray2Int32Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[0:,0:],``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32})">
            <summary>Définit le shim de Matrix.Submatrix(!!0[,] source, !!0[,] destination, Int32 startRow, Int32 endRow, Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.Subtract(Double[][] a, Double[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleArrayArrayDoubleArrayInt32">
            <summary>Définit le shim de Matrix.Subtract(Double[][] a, Double[] b, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleArrayDoubleArrayBoolean">
            <summary>Définit le shim de Matrix.Subtract(Double[] a, Double[] b, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.Subtract(Double[] vector, Double x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleDoubleArray">
            <summary>Définit le shim de Matrix.Subtract(Double x, Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleDoubleMdArray2">
            <summary>Définit le shim de Matrix.Subtract(Double x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleMdArray2Double">
            <summary>Définit le shim de Matrix.Subtract(Double[,] matrix, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de Matrix.Subtract(Double[,] a, Double[] b, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractDoubleMdArray2DoubleMdArray2Boolean">
            <summary>Définit le shim de Matrix.Subtract(Double[,] a, Double[,] b, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractFromDiagonalDoubleArrayArrayDoubleBoolean">
            <summary>Définit le shim de Matrix.SubtractFromDiagonal(Double[][] matrix, Double scalar, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractFromDiagonalDoubleMdArray2DoubleBoolean">
            <summary>Définit le shim de Matrix.SubtractFromDiagonal(Double[,] matrix, Double scalar, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractInt32ArrayInt32ArrayBoolean">
            <summary>Définit le shim de Matrix.Subtract(Int32[] a, Int32[] b, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractInt32ArrayInt32Boolean">
            <summary>Définit le shim de Matrix.Subtract(Int32[] vector, Int32 x, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractInt32DoubleArray">
            <summary>Définit le shim de Matrix.Subtract(Int32 x, Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SubtractInt32DoubleMdArray2">
            <summary>Définit le shim de Matrix.Subtract(Int32 x, Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumDoubleArray">
            <summary>Définit le shim de Matrix.Sum(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumDoubleArrayArray">
            <summary>Définit le shim de Matrix.Sum(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumDoubleArrayArrayInt32">
            <summary>Définit le shim de Matrix.Sum(Double[][] matrix, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumDoubleMdArray2">
            <summary>Définit le shim de Matrix.Sum(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumDoubleMdArray2Int32">
            <summary>Définit le shim de Matrix.Sum(Double[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumInt32Array">
            <summary>Définit le shim de Matrix.Sum(Int32[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumInt32MdArray2">
            <summary>Définit le shim de Matrix.Sum(Int32[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumInt32MdArray2Int32">
            <summary>Définit le shim de Matrix.Sum(Int32[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumSingleArray">
            <summary>Définit le shim de Matrix.Sum(Single[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumSingleMdArray2">
            <summary>Définit le shim de Matrix.Sum(Single[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.SumSingleMdArray2Int32">
            <summary>Définit le shim de Matrix.Sum(Single[,] matrix, Int32 dimension)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.SwapOf1M0ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],System.Int32[]})">
            <summary>Définit le shim de Matrix.Swap(!!0[] values, Int32[] indices)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataColumn">
            <summary>Définit le shim de Matrix.ToArray(DataColumn column)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataColumnIFormatProvider">
            <summary>Définit le shim de Matrix.ToArray(DataColumn column, IFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataRowIFormatProviderStringArray">
            <summary>Définit le shim de Matrix.ToArray(DataRow row, IFormatProvider provider, String[] colNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataRowStringArray">
            <summary>Définit le shim de Matrix.ToArray(DataRow row, String[] colNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataTable">
            <summary>Définit le shim de Matrix.ToArray(DataTable table)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataTableIFormatProvider">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, IFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataTableIFormatProviderStringArrayOut">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, IFormatProvider provider, String[]&amp; columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataTableStringArray">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, String[] columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToArrayDataTableStringArrayOut">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, String[]&amp; columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataColumn``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataColumn,``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataColumn column)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataColumnIFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataColumn,System.IFormatProvider,``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataColumn column, IFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataRowIFormatProviderStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.IFormatProvider,System.String[],``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataRow row, IFormatProvider provider, String[] colNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataRowStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.String[],``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataRow row, String[] colNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableIFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.IFormatProvider,``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, IFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableIFormatProviderString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.IFormatProvider,System.String,``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, IFormatProvider provider, String columnName)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableIFormatProviderStringArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.DataTable,System.IFormatProvider,System.String[],``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, IFormatProvider provider, String[]&amp; columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.String,``0[]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, String columnName)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.String[],``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, String[] columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1DataTableStringArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.DataTable,System.String[],``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(DataTable table, String[]&amp; columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1M0ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(!!0[] array, Boolean asColumnVector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToArrayOf1M0MdArray2Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.ToArray(!!0[,] matrix, Boolean transpose)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleByteArrayArray">
            <summary>Définit le shim de Matrix.ToDouble(Byte[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleByteMdArray2">
            <summary>Définit le shim de Matrix.ToDouble(Byte[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleInt16Array">
            <summary>Définit le shim de Matrix.ToDouble(Int16[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleInt32Array">
            <summary>Définit le shim de Matrix.ToDouble(Int32[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleInt32ArrayArray">
            <summary>Définit le shim de Matrix.ToDouble(Int32[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleInt32MdArray2">
            <summary>Définit le shim de Matrix.ToDouble(Int32[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleSByteArrayArray">
            <summary>Définit le shim de Matrix.ToDouble(SByte[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleSingleArray">
            <summary>Définit le shim de Matrix.ToDouble(Single[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToDoubleSingleMdArray2">
            <summary>Définit le shim de Matrix.ToDouble(Single[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32ArrayDataColumn">
            <summary>Définit le shim de Matrix.ToInt32Array(DataColumn column)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32ByteArray">
            <summary>Définit le shim de Matrix.ToInt32(Byte[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32ByteArrayArray">
            <summary>Définit le shim de Matrix.ToInt32(Byte[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32DoubleArray">
            <summary>Définit le shim de Matrix.ToInt32(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32DoubleArrayArray">
            <summary>Définit le shim de Matrix.ToInt32(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32DoubleMdArray2">
            <summary>Définit le shim de Matrix.ToInt32(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32SByteArray">
            <summary>Définit le shim de Matrix.ToInt32(SByte[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToInt32SByteArrayArray">
            <summary>Définit le shim de Matrix.ToInt32(SByte[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToIntArrayDataTableStringArray">
            <summary>Définit le shim de Matrix.ToIntArray(DataTable table, String[] columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToMatrixDataTable">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToMatrixDataTableIFormatProvider">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, IFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToMatrixDataTableStringArray">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, String[] columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToMatrixDataTableStringArrayOut">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, String[]&amp; columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTableIFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.IFormatProvider,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, IFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTableIFormatProviderStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.IFormatProvider,System.String[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, IFormatProvider provider, String[] columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTableStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.String[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, String[] columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTableStringArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Data.DataTable,System.String[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, String[]&amp; columnNames)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1DataTableStringArrayOutIFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.Delegates.AccordMathDelegates.Out1Func4{System.Data.DataTable,System.String[],System.IFormatProvider,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(DataTable table, String[]&amp; columnNames, IFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(!!0[] array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(!!0[][] array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1M0ArrayArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(!!0[][] array, Boolean transpose)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToMatrixOf1M0ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Boolean,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.ToMatrix(!!0[] array, Boolean asColumnVector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToOf1Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Array,``0})">
            <summary>Définit le shim de Matrix.To(Array array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Définit le shim de Matrix.To(Object value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToSingleDoubleArray">
            <summary>Définit le shim de Matrix.ToSingle(Double[] vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToSingleDoubleArrayArray">
            <summary>Définit le shim de Matrix.ToSingle(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToSingleDoubleMdArray2">
            <summary>Définit le shim de Matrix.ToSingle(Double[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[] array)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayArrayIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[][] matrix, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayArrayString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.String,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[][] matrix, String format)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayArrayStringIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.String,Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[][] matrix, String format, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[] array, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.String,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[] array, String format)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0ArrayStringIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.String,Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[] matrix, String format, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0MdArray2BooleanIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean,Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[,] matrix, Boolean multiline, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0MdArray2IMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[,] matrix, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0MdArray2String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.String,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[,] matrix, String format)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.ToStringOf1M0MdArray2StringIMatrixFormatProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.String,Accord.Math.IMatrixFormatProvider,System.String})">
            <summary>Définit le shim de Matrix.ToString(!!0[,] matrix, String format, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToTableDoubleArrayArray">
            <summary>Définit le shim de Matrix.ToTable(Double[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToTableDoubleArrayArrayStringArray">
            <summary>Définit le shim de Matrix.ToTable(Double[][] matrix, String[] columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToTableDoubleMdArray2">
            <summary>Définit le shim de Matrix.ToTable(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToTableDoubleMdArray2StringArray">
            <summary>Définit le shim de Matrix.ToTable(Double[,] matrix, String[] columnNames)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.ToTableObjectMdArray2">
            <summary>Définit le shim de Matrix.ToTable(Object[,] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TopOf1M0ArrayInt32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Boolean,System.Int32[]})">
            <summary>Définit le shim de Matrix.Top(!!0[] values, Int32 count, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TraceDoubleMdArray2">
            <summary>Définit le shim de Matrix.Trace(Double[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TraceDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.Trace(Double[,] matrixA, Double[,] matrixB)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TraceInt32MdArray2">
            <summary>Définit le shim de Matrix.Trace(Int32[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TraceSingleArrayArray">
            <summary>Définit le shim de Matrix.Trace(Single[][] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TraceSingleMdArray2">
            <summary>Définit le shim de Matrix.Trace(Single[,] matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyByDiagonalDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Matrix.TransposeAndMultiplyByDiagonal(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyByDiagonalDoubleMdArray2DoubleArrayDoubleMdArray2">
            <summary>Définit le shim de Matrix.TransposeAndMultiplyByDiagonal(Double[,] a, Double[] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[][] a, Double[][] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleArrayArrayDoubleArrayArrayDoubleArrayArray">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[][] a, Double[][] b, Double[][] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleMdArray2DoubleArray">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleMdArray2DoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[,] a, Double[] b, Double[] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[,] a, Double[,] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeAndMultiplyDoubleMdArray2DoubleMdArray2DoubleMdArray2">
            <summary>Définit le shim de Matrix.TransposeAndMultiply(Double[,] a, Double[,] b, Double[,] result)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TransposeArrayInt32Array">
            <summary>Définit le shim de Matrix.Transpose(Array array, Int32[] order)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Transpose(!!0[] rowVector)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][]})">
            <summary>Définit le shim de Matrix.Transpose(!!0[][] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0ArrayArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.Transpose(!!0[][] matrix, Boolean inPlace)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0Int32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Int32[],``0})">
            <summary>Définit le shim de Matrix.Transpose(!!0 array, Int32[] order)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Transpose(!!0[,] matrix)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.TransposeOf1M0MdArray2Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Boolean,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.Transpose(!!0[,] matrix, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TryParseStringIMatrixFormatProviderDoubleArrayArrayOut">
            <summary>Définit le shim de Matrix.TryParse(String s, IMatrixFormatProvider provider, Double[][]&amp; matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.TryParseStringIMatrixFormatProviderDoubleMdArray2Out">
            <summary>Définit le shim de Matrix.TryParse(String s, IMatrixFormatProvider provider, Double[,]&amp; matrix)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.VectorDoubleDoubleDouble">
            <summary>Définit le shim de Matrix.Vector(Double a, Double b, Double increment)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.VectorDoubleDoubleInt32">
            <summary>Définit le shim de Matrix.Vector(Double a, Double b, Int32 points)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.VectorInt32Int32Int32">
            <summary>Définit le shim de Matrix.Vector(Int32 a, Int32 b, Int32 increment)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.VectorOf1Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0,``0[]})">
            <summary>Définit le shim de Matrix.Vector(Int32 n, !!0 value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.VectorOf1Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[],``0[]})">
            <summary>Définit le shim de Matrix.Vector(Int32 n, !!0[] values)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.VectorProductDoubleArrayDoubleArray">
            <summary>Définit le shim de Matrix.VectorProduct(Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.VectorProductSingleArraySingleArray">
            <summary>Définit le shim de Matrix.VectorProduct(Single[] a, Single[] b)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix._CartesianProductb__11Of1IEnumerableOfIEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}}})">
            <summary>Définit le shim de Matrix.&lt;CartesianProduct&gt;b__11(IEnumerable`1&lt;IEnumerable`1&lt;!!0&gt;&gt; accumulator, IEnumerable`1&lt;!!0&gt; sequence)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix._CartesianProductb__13Of1IEnumerableOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Définit le shim de Matrix.&lt;CartesianProduct&gt;b__13(IEnumerable`1&lt;!!0&gt; accumulatorSequence, !!0 item)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix._ToTableb__aDouble">
            <summary>Définit le shim de Matrix.&lt;ToTable&gt;b__a(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix._ToTableb__cDouble">
            <summary>Définit le shim de Matrix.&lt;ToTable&gt;b__c(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix._ToTableb__eObject">
            <summary>Définit le shim de Matrix.&lt;ToTable&gt;b__e(Object x)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.castOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Définit le shim de Matrix.cast(Object value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.partitionOf1M0ArrayInt32ArrayInt32Int32Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32})">
            <summary>Définit le shim de Matrix.partition(!!0[] list, Int32[] idx, Int32 left, Int32 right, Int32 pivotIndex, Boolean asc)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.selectOf1M0ArrayInt32ArrayInt32Int32Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32[],System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32})">
            <summary>Définit le shim de Matrix.select(!!0[] list, Int32[] idx, Int32 left, Int32 right, Int32 k, Boolean asc)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.submatrixOf1M0ArrayArrayM0ArrayArrayInt32ArrayInt32ArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][],System.Int32[],System.Int32[],System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.submatrix(!!0[][] source, !!0[][] destination, Int32[] rowIndexes, Int32[] columnIndexes, Boolean reuseMemory)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.submatrixOf1M0ArrayArrayM0ArrayArrayInt32Int32Int32Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[][],``0[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,``0[][]})">
            <summary>Définit le shim de Matrix.submatrix(!!0[][] source, !!0[][] destination, Int32 startRow, Int32 endRow, Int32 startColumn, Int32 endColumn, Boolean reuseMemory)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.submatrixOf1M0MdArray2M0MdArray2Int32ArrayInt32Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:],System.Int32[],System.Int32[],``0[0:,0:]})">
            <summary>Définit le shim de Matrix.submatrix(!!0[,] source, !!0[,] destination, Int32[] rowIndexes, Int32[] columnIndexes)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.submatrixOf1M0MdArray2M0MdArray2Int32Int32Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0[0:,0:]})">
            <summary>Définit le shim de Matrix.submatrix(!!0[,] source, !!0[,] destination, Int32 startRow, Int32 endRow, Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrix.swapOf1M0RefM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefRefAction{``0,``0})">
            <summary>Définit le shim de Matrix.swap(!!0&amp; a, !!0&amp; b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrix.transposeArrayInt32Array">
            <summary>Définit le shim de Matrix.transpose(Array array, Int32[] order)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimMatrixFormatProviderBase">
            <summary>Type shim de Accord.Math.MatrixFormatProviderBase</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatProviderBase.#ctor(Accord.Math.MatrixFormatProviderBase)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatColStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatMatrixEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatMatrixEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatMatrixEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatMatrixStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatMatrixStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatMatrixStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.FormatRowStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.GetFormatType">
            <summary>Définit le shim de MatrixFormatProviderBase.GetFormat(Type formatType)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.InnerProviderGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_InnerProvider()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.InnerProviderSetIFormatProvider">
            <summary>Définit le shim de MatrixFormatProviderBase.set_InnerProvider(IFormatProvider value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseColStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseMatrixEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseMatrixEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseMatrixEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseMatrixStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseMatrixStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseMatrixStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.AllInstances.ParseRowStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowStart(String value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatProviderBase.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatProviderBase.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatProviderBase.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatProviderBase.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ConstructorIFormatProvider">
            <summary>Définit le shim de MatrixFormatProviderBase.MatrixFormatProviderBase(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatColStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatColStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatMatrixEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatMatrixEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatMatrixEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatMatrixStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatMatrixStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatMatrixStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_FormatRowStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.FormatRowStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_FormatRowStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.GetFormatType">
            <summary>Définit le shim de MatrixFormatProviderBase.GetFormat(Type formatType)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.InnerProviderGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_InnerProvider()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.InnerProviderSetIFormatProvider">
            <summary>Définit le shim de MatrixFormatProviderBase.set_InnerProvider(IFormatProvider value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseColStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseColStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseMatrixEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseMatrixEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseMatrixEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseMatrixStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseMatrixStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseMatrixStart(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowDelimiterGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowDelimiterSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowDelimiter(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowEndGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowEndSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowEnd(String value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowStartGet">
            <summary>Définit le shim de MatrixFormatProviderBase.get_ParseRowStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatProviderBase.ParseRowStartSetString">
            <summary>Définit le shim de MatrixFormatProviderBase.set_ParseRowStart(String value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimMatrixFormatter">
            <summary>Type shim de Accord.Math.MatrixFormatter</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatter.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatter.#ctor(Accord.Math.MatrixFormatter)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimMatrixFormatter.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.AllInstances.FormatStringObjectIFormatProvider">
            <summary>Définit le shim de MatrixFormatter.Format(String format, Object arg, IFormatProvider formatProvider)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatter.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatter.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimMatrixFormatter.Bind(System.ICustomFormatter)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.Constructor">
            <summary>Définit le shim de MatrixFormatter.MatrixFormatter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.FormatStringArrayIMatrixFormatProvider">
            <summary>Définit le shim de MatrixFormatter.Format(String format, Array matrix, IMatrixFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.FormatStringObjectIFormatProvider">
            <summary>Définit le shim de MatrixFormatter.Format(String format, Object arg, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.ParseJaggedStringIMatrixFormatProvider">
            <summary>Définit le shim de MatrixFormatter.ParseJagged(String str, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.ParseMultidimensionalStringIMatrixFormatProvider">
            <summary>Définit le shim de MatrixFormatter.ParseMultidimensional(String str, IMatrixFormatProvider provider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.handleOtherFormatsStringObjectIFormatProvider">
            <summary>Définit le shim de MatrixFormatter.handleOtherFormats(String format, Object arg, IFormatProvider culture)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimMatrixFormatter.parseOptionsStringStringOutStringOut">
            <summary>Définit le shim de MatrixFormatter.parseOptions(String format, String&amp; newline, String&amp; elementFormat)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimNorm">
            <summary>Type shim de Accord.Math.Norm</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNorm.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNorm.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNorm.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanDoubleArray">
            <summary>Définit le shim de Norm.Euclidean(Double[] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanDoubleMdArray2">
            <summary>Définit le shim de Norm.Euclidean(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanDoubleMdArray2Int32">
            <summary>Définit le shim de Norm.Euclidean(Double[,] a, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanSingleArray">
            <summary>Définit le shim de Norm.Euclidean(Single[] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanSingleMdArray2">
            <summary>Définit le shim de Norm.Euclidean(Single[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.EuclideanSingleMdArray2Int32">
            <summary>Définit le shim de Norm.Euclidean(Single[,] a, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.FrobeniusDoubleArrayArray">
            <summary>Définit le shim de Norm.Frobenius(Double[][] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.FrobeniusDoubleMdArray2">
            <summary>Définit le shim de Norm.Frobenius(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.Norm1DoubleArrayArray">
            <summary>Définit le shim de Norm.Norm1(Double[][] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.Norm1DoubleMdArray2">
            <summary>Définit le shim de Norm.Norm1(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.Norm2DoubleArrayArray">
            <summary>Définit le shim de Norm.Norm2(Double[][] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.Norm2DoubleMdArray2">
            <summary>Définit le shim de Norm.Norm2(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanDoubleArray">
            <summary>Définit le shim de Norm.SquareEuclidean(Double[] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanDoubleArrayArray">
            <summary>Définit le shim de Norm.SquareEuclidean(Double[][] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanDoubleArrayArrayInt32">
            <summary>Définit le shim de Norm.SquareEuclidean(Double[][] a, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanDoubleMdArray2">
            <summary>Définit le shim de Norm.SquareEuclidean(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanDoubleMdArray2Int32">
            <summary>Définit le shim de Norm.SquareEuclidean(Double[,] a, Int32 dimension)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanSingleArray">
            <summary>Définit le shim de Norm.SquareEuclidean(Single[] a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNorm.SquareEuclideanSingleMdArray2Int32">
            <summary>Définit le shim de Norm.SquareEuclidean(Single[,] a, Int32 dimension)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimNormal">
            <summary>Type shim de Accord.Math.Normal</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNormal.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.BVNDDoubleDoubleDouble">
            <summary>Définit le shim de Normal.BVND(Double DH, Double DK, Double R)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNormal.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimNormal.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.BivariateComplementedDoubleDoubleDouble">
            <summary>Définit le shim de Normal.BivariateComplemented(Double x, Double y, Double rho)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.BivariateDoubleDoubleDouble">
            <summary>Définit le shim de Normal.Bivariate(Double x, Double y, Double rho)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.ComplementedDouble">
            <summary>Définit le shim de Normal.Complemented(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.DerivativeDouble">
            <summary>Définit le shim de Normal.Derivative(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.FunctionDouble">
            <summary>Définit le shim de Normal.Function(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.HighAccuracyComplementedDouble">
            <summary>Définit le shim de Normal.HighAccuracyComplemented(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.HighAccuracyFunctionDouble">
            <summary>Définit le shim de Normal.HighAccuracyFunction(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.InverseDouble">
            <summary>Définit le shim de Normal.Inverse(Double y0)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimNormal.LogDerivativeDouble">
            <summary>Définit le shim de Normal.LogDerivative(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimOctaveArrayFormatProvider">
            <summary>Type shim de Accord.Math.OctaveArrayFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.#ctor(Accord.Math.OctaveArrayFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de OctaveArrayFormatProvider.OctaveArrayFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de OctaveArrayFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de OctaveArrayFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveArrayFormatProvider.StaticConstructor">
            <summary>Définit le shim de OctaveArrayFormatProvider.OctaveArrayFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider">
            <summary>Type shim de Accord.Math.OctaveMatrixFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.#ctor(Accord.Math.OctaveMatrixFormatProvider)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.Bind(Accord.Math.IMatrixFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.Bind(System.IFormatProvider)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.ConstructorIFormatProvider">
            <summary>Définit le shim de OctaveMatrixFormatProvider.OctaveMatrixFormatProvider(IFormatProvider innerProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.CurrentCultureGet">
            <summary>Définit le shim de OctaveMatrixFormatProvider.get_CurrentCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.InvariantCultureGet">
            <summary>Définit le shim de OctaveMatrixFormatProvider.get_InvariantCulture()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOctaveMatrixFormatProvider.StaticConstructor">
            <summary>Définit le shim de OctaveMatrixFormatProvider.OctaveMatrixFormatProvider()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimOwensT">
            <summary>Type shim de Accord.Math.OwensT</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOwensT.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOwensT.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimOwensT.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOwensT.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOwensT.FunctionDoubleDouble">
            <summary>Définit le shim de OwensT.Function(Double h, Double a)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimOwensT.FunctionDoubleDoubleDouble">
            <summary>Définit le shim de OwensT.Function(Double h, Double a, Double ah)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimPlane">
            <summary>Type shim de Accord.Math.Plane</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.#ctor(Accord.Math.Plane)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AGet">
            <summary>Définit le shim de Plane.get_A()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ASetSingle">
            <summary>Définit le shim de Plane.set_A(Single value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimPlane.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.AGet">
            <summary>Définit le shim de Plane.get_A()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.ASetSingle">
            <summary>Définit le shim de Plane.set_A(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.BGet">
            <summary>Définit le shim de Plane.get_B()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.BSetSingle">
            <summary>Définit le shim de Plane.set_B(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.CGet">
            <summary>Définit le shim de Plane.get_C()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.CSetSingle">
            <summary>Définit le shim de Plane.set_C(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.DistanceToPointPoint3">
            <summary>Définit le shim de Plane.DistanceToPoint(Point3 point)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.EqualsObject">
            <summary>Définit le shim de Plane.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.EqualsPlane">
            <summary>Définit le shim de Plane.Equals(Plane other)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.EqualsPlaneDouble">
            <summary>Définit le shim de Plane.Equals(Plane other, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.GetHashCode01">
            <summary>Définit le shim de Plane.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.NormalGet">
            <summary>Définit le shim de Plane.get_Normal()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.Normalize">
            <summary>Définit le shim de Plane.Normalize()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.OffsetGet">
            <summary>Définit le shim de Plane.get_Offset()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.OffsetSetSingle">
            <summary>Définit le shim de Plane.set_Offset(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.ToString01">
            <summary>Définit le shim de Plane.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.ToStringChar">
            <summary>Définit le shim de Plane.ToString(Char variable)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.ToStringCharIFormatProvider">
            <summary>Définit le shim de Plane.ToString(Char variable, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.AllInstances.ToStringStringIFormatProvider">
            <summary>Définit le shim de Plane.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.BGet">
            <summary>Définit le shim de Plane.get_B()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.BSetSingle">
            <summary>Définit le shim de Plane.set_B(Single value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.Bind(System.IFormattable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPlane.Bind(System.IEquatable{Accord.Math.Plane})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.CGet">
            <summary>Définit le shim de Plane.get_C()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.CSetSingle">
            <summary>Définit le shim de Plane.set_C(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ConstructorSingleSingleSingle">
            <summary>Définit le shim de Plane.Plane(Single a, Single b, Single c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ConstructorSingleSingleSingleSingle">
            <summary>Définit le shim de Plane.Plane(Single a, Single b, Single c, Single offset)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ConstructorVector3">
            <summary>Définit le shim de Plane.Plane(Vector3 normal)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ConstructorVector3Single">
            <summary>Définit le shim de Plane.Plane(Vector3 normal, Single offset)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.DistanceToPointPoint3">
            <summary>Définit le shim de Plane.DistanceToPoint(Point3 point)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.EqualityOpPlanePlane">
            <summary>Définit le shim de Plane.op_Equality(Plane a, Plane b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.EqualsObject">
            <summary>Définit le shim de Plane.Equals(Object obj)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.EqualsPlane">
            <summary>Définit le shim de Plane.Equals(Plane other)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.EqualsPlaneDouble">
            <summary>Définit le shim de Plane.Equals(Plane other, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.FromPointsPoint3Point3Point3">
            <summary>Définit le shim de Plane.FromPoints(Point3 point1, Point3 point2, Point3 point3)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.GetHashCode">
            <summary>Définit le shim de Plane.GetHashCode()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.InequalityOpPlanePlane">
            <summary>Définit le shim de Plane.op_Inequality(Plane a, Plane b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.NormalGet">
            <summary>Définit le shim de Plane.get_Normal()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.Normalize">
            <summary>Définit le shim de Plane.Normalize()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.OffsetGet">
            <summary>Définit le shim de Plane.get_Offset()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.OffsetSetSingle">
            <summary>Définit le shim de Plane.set_Offset(Single value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ToString">
            <summary>Définit le shim de Plane.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ToStringChar">
            <summary>Définit le shim de Plane.ToString(Char variable)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ToStringCharIFormatProvider">
            <summary>Définit le shim de Plane.ToString(Char variable, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPlane.ToStringStringIFormatProvider">
            <summary>Définit le shim de Plane.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimPoint3">
            <summary>Type shim de Accord.Math.Point3</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPoint3.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimPoint3.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPoint3.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimPoint3.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.CollinearPoint3Point3Point3">
            <summary>Définit le shim de Point3.Collinear(Point3 p1, Point3 p2, Point3 p3)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.EqualityOpPoint3Point3">
            <summary>Définit le shim de Point3.op_Equality(Point3 a, Point3 b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.FromVectorVector3">
            <summary>Définit le shim de Point3.FromVector(Vector3 vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.ImplicitOpPoint3Vector3">
            <summary>Définit le shim de Point3.op_Implicit(Point3 point)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.ImplicitOpVector3Point3">
            <summary>Définit le shim de Point3.op_Implicit(Vector3 vector)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.InequalityOpPoint3Point3">
            <summary>Définit le shim de Point3.op_Inequality(Point3 a, Point3 b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.OriginGet">
            <summary>Définit le shim de Point3.get_Origin()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimPoint3.StaticConstructor">
            <summary>Définit le shim de Point3.Point3()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimReducedRowEchelonForm">
            <summary>Type shim de Accord.Math.ReducedRowEchelonForm</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimReducedRowEchelonForm.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimReducedRowEchelonForm.#ctor(Accord.Math.ReducedRowEchelonForm)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimReducedRowEchelonForm.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.AllInstances.FreeVariablesGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_FreeVariables()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.AllInstances.PivotGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_Pivot()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.AllInstances.ResultGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_Result()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.AllInstances.count">
            <summary>Définit le shim de ReducedRowEchelonForm.count()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimReducedRowEchelonForm.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimReducedRowEchelonForm.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.ConstructorDoubleMdArray2Boolean">
            <summary>Définit le shim de ReducedRowEchelonForm.ReducedRowEchelonForm(Double[,] value, Boolean inPlace)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.FreeVariablesGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_FreeVariables()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.PivotGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_Pivot()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.ResultGet">
            <summary>Définit le shim de ReducedRowEchelonForm.get_Result()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimReducedRowEchelonForm.count">
            <summary>Définit le shim de ReducedRowEchelonForm.count()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimRelativeConvergence">
            <summary>Type shim de Accord.Math.RelativeConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.#ctor(Accord.Math.RelativeConvergence)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.Clear">
            <summary>Définit le shim de RelativeConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.CurrentIterationGet">
            <summary>Définit le shim de RelativeConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.CurrentIterationSetInt32">
            <summary>Définit le shim de RelativeConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.HasConvergedGet">
            <summary>Définit le shim de RelativeConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.IterationsGet">
            <summary>Définit le shim de RelativeConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de RelativeConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.NewValueGet">
            <summary>Définit le shim de RelativeConvergence.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.NewValueSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_NewValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.OldValueGet">
            <summary>Définit le shim de RelativeConvergence.get_OldValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.OldValueSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_OldValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.ToleranceGet">
            <summary>Définit le shim de RelativeConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.AllInstances.checkConvergence">
            <summary>Définit le shim de RelativeConvergence.checkConvergence()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.Bind(Accord.Math.ISingleValueConvergence)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeConvergence.Bind(Accord.Math.IConvergence{System.Double})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.Clear">
            <summary>Définit le shim de RelativeConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.Constructor">
            <summary>Définit le shim de RelativeConvergence.RelativeConvergence()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.ConstructorInt32Double">
            <summary>Définit le shim de RelativeConvergence.RelativeConvergence(Int32 iterations, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.ConstructorInt32DoubleInt32">
            <summary>Définit le shim de RelativeConvergence.RelativeConvergence(Int32 iterations, Double tolerance, Int32 checks)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.CurrentIterationGet">
            <summary>Définit le shim de RelativeConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.CurrentIterationSetInt32">
            <summary>Définit le shim de RelativeConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.HasConvergedGet">
            <summary>Définit le shim de RelativeConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.IterationsGet">
            <summary>Définit le shim de RelativeConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.IterationsSetInt32">
            <summary>Définit le shim de RelativeConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.NewValueGet">
            <summary>Définit le shim de RelativeConvergence.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.NewValueSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_NewValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.OldValueGet">
            <summary>Définit le shim de RelativeConvergence.get_OldValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.OldValueSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_OldValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.ToleranceGet">
            <summary>Définit le shim de RelativeConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.ToleranceSetDouble">
            <summary>Définit le shim de RelativeConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeConvergence.checkConvergence">
            <summary>Définit le shim de RelativeConvergence.checkConvergence()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimRelativeParameterConvergence">
            <summary>Type shim de Accord.Math.RelativeParameterConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeParameterConvergence.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeParameterConvergence.#ctor(Accord.Math.RelativeParameterConvergence)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.Clear">
            <summary>Définit le shim de RelativeParameterConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.CurrentIterationGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.CurrentIterationSetInt32">
            <summary>Définit le shim de RelativeParameterConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.DeltaGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Delta()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.HasConvergedGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.HasDivergedGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_HasDiverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.IterationsGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de RelativeParameterConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.NewValueAccordMathIConvergenceSystemDoubleget">
            <summary>Définit le shim de RelativeParameterConvergence.Accord.Math.IConvergence&lt;System.Double[]&gt;.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.NewValueAccordMathIConvergenceSystemDoublesetDoubleArray">
            <summary>Définit le shim de RelativeParameterConvergence.Accord.Math.IConvergence&lt;System.Double[]&gt;.set_NewValue(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.NewValuesGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_NewValues()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.NewValuesSetDoubleArray">
            <summary>Définit le shim de RelativeParameterConvergence.set_NewValues(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.OldValuesGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_OldValues()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.ToleranceGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de RelativeParameterConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeParameterConvergence.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeParameterConvergence.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimRelativeParameterConvergence.Bind(Accord.Math.IConvergence{System.Double[]})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.Clear">
            <summary>Définit le shim de RelativeParameterConvergence.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.Constructor">
            <summary>Définit le shim de RelativeParameterConvergence.RelativeParameterConvergence()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.ConstructorInt32Double">
            <summary>Définit le shim de RelativeParameterConvergence.RelativeParameterConvergence(Int32 iterations, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.CurrentIterationGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.CurrentIterationSetInt32">
            <summary>Définit le shim de RelativeParameterConvergence.set_CurrentIteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.DeltaGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Delta()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.HasConvergedGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.HasDivergedGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_HasDiverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.IterationsGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.IterationsSetInt32">
            <summary>Définit le shim de RelativeParameterConvergence.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.NewValueAccordMathIConvergenceSystemDoubleget">
            <summary>Définit le shim de RelativeParameterConvergence.Accord.Math.IConvergence&lt;System.Double[]&gt;.get_NewValue()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.NewValueAccordMathIConvergenceSystemDoublesetDoubleArray">
            <summary>Définit le shim de RelativeParameterConvergence.Accord.Math.IConvergence&lt;System.Double[]&gt;.set_NewValue(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.NewValuesGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_NewValues()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.NewValuesSetDoubleArray">
            <summary>Définit le shim de RelativeParameterConvergence.set_NewValues(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.OldValuesGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_OldValues()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.ToleranceGet">
            <summary>Définit le shim de RelativeParameterConvergence.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimRelativeParameterConvergence.ToleranceSetDouble">
            <summary>Définit le shim de RelativeParameterConvergence.set_Tolerance(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimSineTransform">
            <summary>Type shim de Accord.Math.SineTransform</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSineTransform.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSineTransform.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSineTransform.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSineTransform.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSineTransform.DSTDoubleArray">
            <summary>Définit le shim de SineTransform.DST(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSineTransform.DSTDoubleArrayArray">
            <summary>Définit le shim de SineTransform.DST(Double[][] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSineTransform.IDSTDoubleArray">
            <summary>Définit le shim de SineTransform.IDST(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSineTransform.IDSTDoubleArrayArray">
            <summary>Définit le shim de SineTransform.IDST(Double[][] data)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimSpecial">
            <summary>Type shim de Accord.Math.Special</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSpecial.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AcosecDouble">
            <summary>Définit le shim de Special.Acosec(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AcosechDouble">
            <summary>Définit le shim de Special.Acosech(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AcoshDouble">
            <summary>Définit le shim de Special.Acosh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AcotanDouble">
            <summary>Définit le shim de Special.Acotan(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AcotanhDouble">
            <summary>Définit le shim de Special.Acotanh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AsecDouble">
            <summary>Définit le shim de Special.Asec(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AsechDouble">
            <summary>Définit le shim de Special.Asech(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AsinhDouble">
            <summary>Définit le shim de Special.Asinh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.AtanhDouble">
            <summary>Définit le shim de Special.Atanh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.BSplineInt32Double">
            <summary>Définit le shim de Special.BSpline(Int32 n, Double x)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSpecial.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimSpecial.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.BinomialDoubleDouble">
            <summary>Définit le shim de Special.Binomial(Double n, Double k)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.BinomialInt32Int32">
            <summary>Définit le shim de Special.Binomial(Int32 n, Int32 k)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.CosecDouble">
            <summary>Définit le shim de Special.Cosec(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.CosechDouble">
            <summary>Définit le shim de Special.Cosech(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.CotanDouble">
            <summary>Définit le shim de Special.Cotan(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.CotanhDouble">
            <summary>Définit le shim de Special.Cotanh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.EpslonDouble">
            <summary>Définit le shim de Special.Epslon(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.ErfDouble">
            <summary>Définit le shim de Special.Erf(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.ErfcDouble">
            <summary>Définit le shim de Special.Erfc(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.Expm1Double">
            <summary>Définit le shim de Special.Expm1(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.FactorialDouble">
            <summary>Définit le shim de Special.Factorial(Double n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.FactorialInt32">
            <summary>Définit le shim de Special.Factorial(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.IerfDouble">
            <summary>Définit le shim de Special.Ierf(Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.IerfcDouble">
            <summary>Définit le shim de Special.Ierfc(Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.Log1mDouble">
            <summary>Définit le shim de Special.Log1m(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.Log1pDouble">
            <summary>Définit le shim de Special.Log1p(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogBinomialDoubleDouble">
            <summary>Définit le shim de Special.LogBinomial(Double n, Double k)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogBinomialInt32Int32">
            <summary>Définit le shim de Special.LogBinomial(Int32 n, Int32 k)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogDiffDoubleDouble">
            <summary>Définit le shim de Special.LogDiff(Double lna, Double lnc)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogFactorialDouble">
            <summary>Définit le shim de Special.LogFactorial(Double n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogFactorialInt32">
            <summary>Définit le shim de Special.LogFactorial(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogSumDoubleDouble">
            <summary>Définit le shim de Special.LogSum(Double lna, Double lnc)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.LogSumSingleSingle">
            <summary>Définit le shim de Special.LogSum(Single lna, Single lnc)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.P1evlDoubleDoubleArrayInt32">
            <summary>Définit le shim de Special.P1evl(Double x, Double[] coef, Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.PolevlDoubleDoubleArrayInt32">
            <summary>Définit le shim de Special.Polevl(Double x, Double[] coef, Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.SecDouble">
            <summary>Définit le shim de Special.Sec(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.SechDouble">
            <summary>Définit le shim de Special.Sech(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimSpecial.SignDoubleDouble">
            <summary>Définit le shim de Special.Sign(Double a, Double b)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimTaylor">
            <summary>Type shim de Accord.Math.Taylor</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTaylor.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTaylor.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTaylor.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.CosDoubleInt32">
            <summary>Définit le shim de Taylor.Cos(Double x, Int32 nTerms)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.CoshDoubleInt32">
            <summary>Définit le shim de Taylor.Cosh(Double x, Int32 nTerms)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.ExpDoubleInt32">
            <summary>Définit le shim de Taylor.Exp(Double d, Int32 nTerms)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.SinDoubleInt32">
            <summary>Définit le shim de Taylor.Sin(Double x, Int32 nTerms)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTaylor.SinhDoubleInt32">
            <summary>Définit le shim de Taylor.Sinh(Double x, Int32 nTerms)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.ShimTools">
            <summary>Type shim de Accord.Math.Tools</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AcoshDouble">
            <summary>Définit le shim de Tools.Acosh(Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AngleDoubleDouble">
            <summary>Définit le shim de Tools.Angle(Double x, Double y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AngleIntPointIntPoint">
            <summary>Définit le shim de Tools.Angle(IntPoint previous, IntPoint next)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AngleSingleSingle">
            <summary>Définit le shim de Tools.Angle(Single x, Single y)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AsinhDouble">
            <summary>Définit le shim de Tools.Asinh(Double d)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.AtanhDouble">
            <summary>Définit le shim de Tools.Atanh(Double d)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.DirectionIntPointIntPoint">
            <summary>Définit le shim de Tools.Direction(IntPoint previous, IntPoint next)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.FactorialPowerInt32Int32">
            <summary>Définit le shim de Tools.FactorialPower(Int32 value, Int32 degree)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.GreatestCommonDivisorInt32Int32">
            <summary>Définit le shim de Tools.GreatestCommonDivisor(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.HypotenuseDecimalDecimal">
            <summary>Définit le shim de Tools.Hypotenuse(Decimal a, Decimal b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.HypotenuseDoubleDouble">
            <summary>Définit le shim de Tools.Hypotenuse(Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.HypotenuseSingleSingle">
            <summary>Définit le shim de Tools.Hypotenuse(Single a, Single b)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.Interpolate1DDoubleDoubleArrayDoubleArrayDoubleDouble">
            <summary>Définit le shim de Tools.Interpolate1D(Double value, Double[] x, Double[] y, Double lower, Double upper)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.InvSqrtSingle">
            <summary>Définit le shim de Tools.InvSqrt(Single f)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.MaxDoubleDoubleDouble">
            <summary>Définit le shim de Tools.Max(Double a, Double b, Double c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.MinDoubleDoubleDouble">
            <summary>Définit le shim de Tools.Min(Double a, Double b, Double c)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ModDoubleDouble">
            <summary>Définit le shim de Tools.Mod(Double x, Double m)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ModInt32Int32">
            <summary>Définit le shim de Tools.Mod(Int32 x, Int32 m)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.NextPowerOf2Int32">
            <summary>Définit le shim de Tools.NextPowerOf2(Int32 x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.PreviousPowerOf2Int32">
            <summary>Définit le shim de Tools.PreviousPowerOf2(Int32 x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.RandomGet">
            <summary>Définit le shim de Tools.get_Random()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleArrayDoubleArrayDoubleArrayArray">
            <summary>Définit le shim de Tools.Scale(Double[] toMin, Double[] toMax, Double[][] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayArray">
            <summary>Définit le shim de Tools.Scale(Double[] fromMin, Double[] fromMax, Double[] toMin, Double[] toMax, Double[][] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleArrayDoubleArrayDoubleDoubleDoubleArrayArray">
            <summary>Définit le shim de Tools.Scale(Double[] fromMin, Double[] fromMax, Double toMin, Double toMax, Double[][] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleDoubleDoubleArray">
            <summary>Définit le shim de Tools.Scale(Double toMin, Double toMax, Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleDoubleDoubleArrayArray">
            <summary>Définit le shim de Tools.Scale(Double toMin, Double toMax, Double[][] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de Tools.Scale(Double fromMin, Double fromMax, Double toMin, Double toMax, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleDoubleDoubleDoubleDoubleArray">
            <summary>Définit le shim de Tools.Scale(Double fromMin, Double fromMax, Double toMin, Double toMax, Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleDoubleDoubleDoubleDoubleArrayArray">
            <summary>Définit le shim de Tools.Scale(Double fromMin, Double fromMax, Double toMin, Double toMax, Double[][] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleRangeDoubleRangeDouble">
            <summary>Définit le shim de Tools.Scale(DoubleRange from, DoubleRange to, Double x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleDoubleRangeDoubleRangeDoubleArray">
            <summary>Définit le shim de Tools.Scale(DoubleRange from, DoubleRange to, Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleInt32Int32Int32Int32Int32Array">
            <summary>Définit le shim de Tools.Scale(Int32 fromMin, Int32 fromMax, Int32 toMin, Int32 toMax, Int32[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleIntRangeDoubleRangeInt32">
            <summary>Définit le shim de Tools.Scale(IntRange from, DoubleRange to, Int32 x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleIntRangeIntRangeInt32">
            <summary>Définit le shim de Tools.Scale(IntRange from, IntRange to, Int32 x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleIntRangeIntRangeInt32Array">
            <summary>Définit le shim de Tools.Scale(IntRange from, IntRange to, Int32[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleRangeRangeSingleArray">
            <summary>Définit le shim de Tools.Scale(Range from, Range to, Single[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleSingleSingleSingleSingleSingle">
            <summary>Définit le shim de Tools.Scale(Single fromMin, Single fromMax, Single toMin, Single toMax, Single x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.ScaleSingleSingleSingleSingleSingleArray">
            <summary>Définit le shim de Tools.Scale(Single fromMin, Single fromMax, Single toMin, Single toMax, Single[] x)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.SetupGeneratorNullableOfInt32">
            <summary>Définit le shim de Tools.SetupGenerator(Nullable`1&lt;Int32&gt; seed)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.StableSortOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>Définit le shim de Tools.StableSort(!!0[] values)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.StableSortOf1M0ArrayComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],System.Comparison{``0}})">
            <summary>Définit le shim de Tools.StableSort(!!0[] values, Comparison`1&lt;!!0&gt; comparison)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.ShimTools.StableSortOf1M0ArrayInt32ArrayOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutAction{``0[],System.Int32[]})">
            <summary>Définit le shim de Tools.StableSort(!!0[] values, Int32[]&amp; order)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.ShimTools.TruncatedPowerDoubleDouble">
            <summary>Définit le shim de Tools.TruncatedPower(Double value, Double degree)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubAbsoluteConvergence">
            <summary>Type stub de Accord.Math.AbsoluteConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubAbsoluteConvergence.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubAbsoluteConvergence.#ctor(System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubAbsoluteConvergence.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubAbsoluteConvergence.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubAbsoluteConvergence</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubAbsoluteConvergence.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubAbsoluteConvergence.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubIConvergence`1">
            <summary>Type stub de Accord.Math.IConvergence`1</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIConvergence`1.#ctor">
            <summary>Initialise une nouvelle instance de type StubIConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#Clear">
            <summary>Définit le stub de IConvergence`1.Clear()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIConvergence`1.AttachBackingFieldToIterations">
            <summary>Attache les délégués pour émuler StubIConvergence.Iterations en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIConvergence`1.AttachBackingFieldToNewValue">
            <summary>Attache les délégués pour émuler StubIConvergence.NewValue en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIConvergence`1.AttachBackingFieldToTolerance">
            <summary>Attache les délégués pour émuler StubIConvergence.Tolerance en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.Clear">
            <summary>Définit le stub de IConvergence`1.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#CurrentIteration">
            <summary>Définit le stub de IConvergence`1.get_CurrentIteration()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.CurrentIterationGet">
            <summary>Définit le stub de IConvergence`1.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#HasConverged">
            <summary>Définit le stub de IConvergence`1.get_HasConverged()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.HasConvergedGet">
            <summary>Définit le stub de IConvergence`1.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#Iterations">
            <summary>Définit le stub de IConvergence`1.get_Iterations()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.IterationsGet">
            <summary>Définit le stub de IConvergence`1.get_Iterations()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.IterationsSetInt32">
            <summary>Définit le stub de IConvergence`1.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#NewValue">
            <summary>Définit le stub de IConvergence`1.get_NewValue()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.NewValueGet">
            <summary>Définit le stub de IConvergence`1.get_NewValue()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.NewValueSetT0">
            <summary>Définit le stub de IConvergence`1.set_NewValue(!0 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIConvergence`1.Accord#Math#IConvergence{T}#Tolerance">
            <summary>Définit le stub de IConvergence`1.get_Tolerance()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.ToleranceGet">
            <summary>Définit le stub de IConvergence`1.get_Tolerance()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIConvergence`1.ToleranceSetDouble">
            <summary>Définit le stub de IConvergence`1.set_Tolerance(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubIMatrixFormatProvider">
            <summary>Type stub de Accord.Math.IMatrixFormatProvider</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIMatrixFormatProvider.#ctor">
            <summary>Initialise une nouvelle instance de type StubIMatrixFormatProvider</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatColDelimiter">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColDelimiter()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatColDelimiterGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatColEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatColEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatColStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatColStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatMatrixEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatMatrixEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatMatrixEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatMatrixStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatMatrixStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatMatrixStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatRowDelimiter">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowDelimiter()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatRowDelimiterGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatRowEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatRowEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#FormatRowStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.FormatRowStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_FormatRowStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.GetFormatType">
            <summary>Définit le stub de IFormatProvider.GetFormat(Type formatType)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#InnerProvider">
            <summary>Définit le stub de IMatrixFormatProvider.get_InnerProvider()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.InnerProviderGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_InnerProvider()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseColDelimiter">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColDelimiter()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseColDelimiterGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseColEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseColEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseColStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseColStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseColStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseMatrixEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseMatrixEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseMatrixEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseMatrixEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseMatrixStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseMatrixStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseMatrixStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseMatrixStart()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseRowDelimiter">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowDelimiter()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseRowDelimiterGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowDelimiter()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseRowEnd">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowEnd()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseRowEndGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowEnd()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubIMatrixFormatProvider.Accord#Math#IMatrixFormatProvider#ParseRowStart">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowStart()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubIMatrixFormatProvider.ParseRowStartGet">
            <summary>Définit le stub de IMatrixFormatProvider.get_ParseRowStart()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubIMatrixFormatProvider.System#IFormatProvider#GetFormat(System.Type)">
            <summary>Définit le stub de IFormatProvider.GetFormat(Type formatType)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubISingleValueConvergence">
            <summary>Type stub de Accord.Math.ISingleValueConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubISingleValueConvergence.#ctor">
            <summary>Initialise une nouvelle instance de type StubISingleValueConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#Clear">
            <summary>Définit le stub de IConvergence`1.Clear()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubISingleValueConvergence.AttachBackingFieldToIterations">
            <summary>Attache les délégués pour émuler StubISingleValueConvergence.Iterations en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubISingleValueConvergence.AttachBackingFieldToNewValue">
            <summary>Attache les délégués pour émuler StubISingleValueConvergence.NewValue en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubISingleValueConvergence.AttachBackingFieldToTolerance">
            <summary>Attache les délégués pour émuler StubISingleValueConvergence.Tolerance en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.Clear">
            <summary>Définit le stub de IConvergence`1.Clear()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#CurrentIteration">
            <summary>Définit le stub de IConvergence`1.get_CurrentIteration()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.CurrentIterationGet">
            <summary>Définit le stub de IConvergence`1.get_CurrentIteration()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#HasConverged">
            <summary>Définit le stub de IConvergence`1.get_HasConverged()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.HasConvergedGet">
            <summary>Définit le stub de IConvergence`1.get_HasConverged()</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#Iterations">
            <summary>Définit le stub de IConvergence`1.get_Iterations()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.IterationsGet">
            <summary>Définit le stub de IConvergence`1.get_Iterations()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.IterationsSetInt32">
            <summary>Définit le stub de IConvergence`1.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#NewValue">
            <summary>Définit le stub de IConvergence`1.get_NewValue()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.NewValueGet">
            <summary>Définit le stub de IConvergence`1.get_NewValue()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.NewValueSetDouble">
            <summary>Définit le stub de IConvergence`1.set_NewValue(!0 value)</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubISingleValueConvergence.Accord#Math#IConvergence{System#Double}#Tolerance">
            <summary>Définit le stub de IConvergence`1.get_Tolerance()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.ToleranceGet">
            <summary>Définit le stub de IConvergence`1.get_Tolerance()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubISingleValueConvergence.ToleranceSetDouble">
            <summary>Définit le stub de IConvergence`1.set_Tolerance(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubMatrixFormatProviderBase">
            <summary>Type stub de Accord.Math.MatrixFormatProviderBase</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubMatrixFormatProviderBase.#ctor(System.IFormatProvider)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatProviderBase.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubMatrixFormatProviderBase.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMatrixFormatProviderBase</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatProviderBase.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatProviderBase.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubMatrixFormatter">
            <summary>Type stub de Accord.Math.MatrixFormatter</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubMatrixFormatter.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatter.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubMatrixFormatter.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMatrixFormatter</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatter.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubMatrixFormatter.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubPlane">
            <summary>Type stub de Accord.Math.Plane</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.#ctor(AForge.Math.Vector3)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.#ctor(AForge.Math.Vector3,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.#ctor(System.Single,System.Single,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubPlane.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.Equals(System.Object)">
            <summary>Définit le stub de Plane.Equals(Object obj)</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubPlane.EqualsObject">
            <summary>Définit le stub de Plane.Equals(Object obj)</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.GetHashCode">
            <summary>Définit le stub de Plane.GetHashCode()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubPlane.GetHashCode01">
            <summary>Définit le stub de Plane.GetHashCode()</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubPlane</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubPlane.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubPlane.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubPlane.ToString">
            <summary>Définit le stub de Plane.ToString()</summary>
        </member>
        <member name="F:Accord.Math.Fakes.StubPlane.ToString01">
            <summary>Définit le stub de Plane.ToString()</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubReducedRowEchelonForm">
            <summary>Type stub de Accord.Math.ReducedRowEchelonForm</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubReducedRowEchelonForm.#ctor(System.Double[0:,0:],System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubReducedRowEchelonForm.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubReducedRowEchelonForm.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubReducedRowEchelonForm</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubReducedRowEchelonForm.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubReducedRowEchelonForm.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubRelativeConvergence">
            <summary>Type stub de Accord.Math.RelativeConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeConvergence.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeConvergence.#ctor(System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeConvergence.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeConvergence.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeConvergence.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRelativeConvergence</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeConvergence.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeConvergence.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Fakes.StubRelativeParameterConvergence">
            <summary>Type stub de Accord.Math.RelativeParameterConvergence</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeParameterConvergence.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeParameterConvergence.#ctor(System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeParameterConvergence.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Fakes.StubRelativeParameterConvergence.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRelativeParameterConvergence</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeParameterConvergence.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Fakes.StubRelativeParameterConvergence.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimCircle">
            <summary>Type shim de Accord.Math.Geometry.Circle</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimCircle.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimCircle.#ctor(Accord.Math.Geometry.Circle)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.AreaGet">
            <summary>Définit le shim de Circle.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.CircumferenceGet">
            <summary>Définit le shim de Circle.get_Circumference()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.DiameterGet">
            <summary>Définit le shim de Circle.get_Diameter()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.DistanceToPointPoint">
            <summary>Définit le shim de Circle.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.OriginGet">
            <summary>Définit le shim de Circle.get_Origin()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.OriginSetPoint">
            <summary>Définit le shim de Circle.set_Origin(Point value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.RadiusGet">
            <summary>Définit le shim de Circle.get_Radius()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AllInstances.RadiusSetDouble">
            <summary>Définit le shim de Circle.set_Radius(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.AreaGet">
            <summary>Définit le shim de Circle.get_Area()</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimCircle.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimCircle.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.CircumferenceGet">
            <summary>Définit le shim de Circle.get_Circumference()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.Constructor">
            <summary>Définit le shim de Circle.Circle()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.ConstructorDoubleDoubleDouble">
            <summary>Définit le shim de Circle.Circle(Double x, Double y, Double radius)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.ConstructorPointDouble">
            <summary>Définit le shim de Circle.Circle(Point origin, Double radius)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.ConstructorPointPointPoint">
            <summary>Définit le shim de Circle.Circle(Point p1, Point p2, Point p3)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.ConstructorSingleSingleDouble">
            <summary>Définit le shim de Circle.Circle(Single x, Single y, Double radius)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.DiameterGet">
            <summary>Définit le shim de Circle.get_Diameter()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.DistanceToPointPoint">
            <summary>Définit le shim de Circle.DistanceToPoint(Point point)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.OriginGet">
            <summary>Définit le shim de Circle.get_Origin()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.OriginSetPoint">
            <summary>Définit le shim de Circle.set_Origin(Point value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.RadiusGet">
            <summary>Définit le shim de Circle.get_Radius()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimCircle.RadiusSetDouble">
            <summary>Définit le shim de Circle.set_Radius(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimConvexHullDefects">
            <summary>Type shim de Accord.Math.Geometry.ConvexHullDefects</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.#ctor(Accord.Math.Geometry.ConvexHullDefects)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.AllInstances.FindDefectsListOfIntPointListOfIntPoint">
            <summary>Définit le shim de ConvexHullDefects.FindDefects(List`1&lt;IntPoint&gt; contour, List`1&lt;IntPoint&gt; convexHull)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.AllInstances.MinimumDepthGet">
            <summary>Définit le shim de ConvexHullDefects.get_MinimumDepth()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.AllInstances.MinimumDepthSetDouble">
            <summary>Définit le shim de ConvexHullDefects.set_MinimumDepth(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.ConstructorDouble">
            <summary>Définit le shim de ConvexHullDefects.ConvexHullDefects(Double minDepth)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.FindDefectsListOfIntPointListOfIntPoint">
            <summary>Définit le shim de ConvexHullDefects.FindDefects(List`1&lt;IntPoint&gt; contour, List`1&lt;IntPoint&gt; convexHull)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.MinimumDepthGet">
            <summary>Définit le shim de ConvexHullDefects.get_MinimumDepth()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.MinimumDepthSetDouble">
            <summary>Définit le shim de ConvexHullDefects.set_MinimumDepth(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexHullDefects.extractDefectListOfIntPointInt32Int32">
            <summary>Définit le shim de ConvexHullDefects.extractDefect(List`1&lt;IntPoint&gt; contour, Int32 startIndex, Int32 endIndex)</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimConvexityDefect">
            <summary>Type shim de Accord.Math.Geometry.ConvexityDefect</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexityDefect.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexityDefect.#ctor(Accord.Math.Geometry.ConvexityDefect)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.DepthGet">
            <summary>Définit le shim de ConvexityDefect.get_Depth()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.DepthSetDouble">
            <summary>Définit le shim de ConvexityDefect.set_Depth(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.EndGet">
            <summary>Définit le shim de ConvexityDefect.get_End()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.EndSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_End(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.PointGet">
            <summary>Définit le shim de ConvexityDefect.get_Point()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.PointSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_Point(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.StartGet">
            <summary>Définit le shim de ConvexityDefect.get_Start()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.AllInstances.StartSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_Start(Int32 value)</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexityDefect.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimConvexityDefect.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.ConstructorInt32Int32Int32Double">
            <summary>Définit le shim de ConvexityDefect.ConvexityDefect(Int32 point, Int32 start, Int32 end, Double depth)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.DepthGet">
            <summary>Définit le shim de ConvexityDefect.get_Depth()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.DepthSetDouble">
            <summary>Définit le shim de ConvexityDefect.set_Depth(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.EndGet">
            <summary>Définit le shim de ConvexityDefect.get_End()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.EndSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_End(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.PointGet">
            <summary>Définit le shim de ConvexityDefect.get_Point()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.PointSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_Point(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.StartGet">
            <summary>Définit le shim de ConvexityDefect.get_Start()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimConvexityDefect.StartSetInt32">
            <summary>Définit le shim de ConvexityDefect.set_Start(Int32 value)</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution">
            <summary>Type shim de Accord.Math.Geometry.DiscreteCurveEvolution</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.#ctor(Accord.Math.Geometry.DiscreteCurveEvolution)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.AllInstances.NumberOfVerticesGet">
            <summary>Définit le shim de DiscreteCurveEvolution.get_NumberOfVertices()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.AllInstances.NumberOfVerticesSetInt32">
            <summary>Définit le shim de DiscreteCurveEvolution.set_NumberOfVertices(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.AllInstances.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de DiscreteCurveEvolution.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.Bind(AForge.Math.Geometry.IShapeOptimizer)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.Constructor">
            <summary>Définit le shim de DiscreteCurveEvolution.DiscreteCurveEvolution()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.ConstructorInt32">
            <summary>Définit le shim de DiscreteCurveEvolution.DiscreteCurveEvolution(Int32 vertices)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.NumberOfVerticesGet">
            <summary>Définit le shim de DiscreteCurveEvolution.get_NumberOfVertices()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.NumberOfVerticesSetInt32">
            <summary>Définit le shim de DiscreteCurveEvolution.set_NumberOfVertices(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.OptimizeShapeListOfIntPoint">
            <summary>Définit le shim de DiscreteCurveEvolution.OptimizeShape(List`1&lt;IntPoint&gt; shape)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimDiscreteCurveEvolution.winkelListOfComplex">
            <summary>Définit le shim de DiscreteCurveEvolution.winkel(List`1&lt;Complex&gt; z)</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimKCurvature">
            <summary>Type shim de Accord.Math.Geometry.KCurvature</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimKCurvature.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimKCurvature.#ctor(Accord.Math.Geometry.KCurvature)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.FindPeaksListOfIntPoint">
            <summary>Définit le shim de KCurvature.FindPeaks(List`1&lt;IntPoint&gt; contour)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.KGet">
            <summary>Définit le shim de KCurvature.get_K()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.KSetInt32">
            <summary>Définit le shim de KCurvature.set_K(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.SuppressionGet">
            <summary>Définit le shim de KCurvature.get_Suppression()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.SuppressionSetInt32">
            <summary>Définit le shim de KCurvature.set_Suppression(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.ThetaGet">
            <summary>Définit le shim de KCurvature.get_Theta()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.AllInstances.ThetaSetDoubleRange">
            <summary>Définit le shim de KCurvature.set_Theta(DoubleRange value)</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimKCurvature.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.ShimKCurvature.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.ConstructorInt32DoubleRange">
            <summary>Définit le shim de KCurvature.KCurvature(Int32 k, DoubleRange theta)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.FindPeaksListOfIntPoint">
            <summary>Définit le shim de KCurvature.FindPeaks(List`1&lt;IntPoint&gt; contour)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.KGet">
            <summary>Définit le shim de KCurvature.get_K()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.KSetInt32">
            <summary>Définit le shim de KCurvature.set_K(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.SuppressionGet">
            <summary>Définit le shim de KCurvature.get_Suppression()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.SuppressionSetInt32">
            <summary>Définit le shim de KCurvature.set_Suppression(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.ThetaGet">
            <summary>Définit le shim de KCurvature.get_Theta()</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.ShimKCurvature.ThetaSetDoubleRange">
            <summary>Définit le shim de KCurvature.set_Theta(DoubleRange value)</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.StubCircle">
            <summary>Type stub de Accord.Math.Geometry.Circle</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.#ctor(AForge.Point,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.#ctor(AForge.Point,AForge.Point,AForge.Point)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.#ctor(System.Single,System.Single,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubCircle.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubCircle.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCircle</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubCircle.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubCircle.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.StubConvexHullDefects">
            <summary>Type stub de Accord.Math.Geometry.ConvexHullDefects</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubConvexHullDefects.#ctor(System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexHullDefects.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubConvexHullDefects.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConvexHullDefects</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexHullDefects.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexHullDefects.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.StubConvexityDefect">
            <summary>Type stub de Accord.Math.Geometry.ConvexityDefect</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubConvexityDefect.#ctor(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexityDefect.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubConvexityDefect.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConvexityDefect</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexityDefect.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubConvexityDefect.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution">
            <summary>Type stub de Accord.Math.Geometry.DiscreteCurveEvolution</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDiscreteCurveEvolution</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubDiscreteCurveEvolution.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Geometry.Fakes.StubKCurvature">
            <summary>Type stub de Accord.Math.Geometry.KCurvature</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubKCurvature.#ctor(System.Int32,AForge.DoubleRange)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubKCurvature.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Geometry.Fakes.StubKCurvature.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubKCurvature</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubKCurvature.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Geometry.Fakes.StubKCurvature.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod">
            <summary>Type shim de Accord.Math.Integration.InfiniteAdaptiveGaussKronrod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.#ctor(Accord.Math.Integration.InfiniteAdaptiveGaussKronrod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.AreaGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.Clone">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.Compute">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.ErrorGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.FunctionEvaluationsGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_FunctionEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.FunctionGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.RangeGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.RangeSetDoubleRange">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.StatusGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.StatusSetInfiniteAdaptiveGaussKronrodStatus">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Status(InfiniteAdaptiveGaussKronrodStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.SubintervalsGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Subintervals()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.ToleranceAbsoluteGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_ToleranceAbsolute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.ToleranceAbsoluteSetDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_ToleranceAbsolute(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.ToleranceRelativeGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_ToleranceRelative()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.ToleranceRelativeSetDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_ToleranceRelative(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AllInstances.initInt32FuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.init(Int32 subintervals, Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.AreaGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Area()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Bind(Accord.Math.Integration.INumericalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Bind(Accord.Math.Integration.IUnivariateIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Bind(Accord.Math.Integration.INumericalIntegration{Accord.Math.Integration.InfiniteAdaptiveGaussKronrodStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Clone">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Compute">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.Constructor">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.InfiniteAdaptiveGaussKronrod()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ConstructorInt32">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.InfiniteAdaptiveGaussKronrod(Int32 subintervals)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ConstructorInt32FuncOfDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.InfiniteAdaptiveGaussKronrod(Int32 subintervals, Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ConstructorInt32FuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.InfiniteAdaptiveGaussKronrod(Int32 subintervals, Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ErrorGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.FunctionEvaluationsGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_FunctionEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.FunctionGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.IntegrateFuncOfDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Integrate(Func`2&lt;Double,Double&gt; f)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.IntegrateFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Integrate(Func`2&lt;Double,Double&gt; f, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.IntegrateFuncOfDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.Integrate(Func`2&lt;Double,Double&gt; f, Double a, Double b, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.RangeGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.RangeSetDoubleRange">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.StatusGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.StatusSetInfiniteAdaptiveGaussKronrodStatus">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_Status(InfiniteAdaptiveGaussKronrodStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.SubintervalsGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_Subintervals()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ToleranceAbsoluteGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_ToleranceAbsolute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ToleranceAbsoluteSetDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_ToleranceAbsolute(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ToleranceRelativeGet">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.get_ToleranceRelative()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.ToleranceRelativeSetDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.set_ToleranceRelative(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.initInt32FuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.init(Int32 subintervals, Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.qagi_FuncOfDoubleDoubleDoubleInt32DoubleDoubleDoubleOutDoubleOutInt32OutInt32OutInt32Int32Int32OutInt32ArrayDoubleArray">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.qagi_(Func`2&lt;Double,Double&gt; f, Double bound, Int32 inf, Double epsabs, Double epsrel, Double&amp; result, Double&amp; abserr, Int32&amp; neval, Int32&amp; ier, Int32 limit, Int32 lenw, Int32&amp; last, Int32[] iwork, Double[] dwork)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimInfiniteAdaptiveGaussKronrod.qk15i_FuncOfDoubleDoubleDoubleRefInt32RefDoubleDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Définit le shim de InfiniteAdaptiveGaussKronrod.qk15i_(Func`2&lt;Double,Double&gt; f, Double&amp; boun, Int32&amp; inf, Double a, Double b, Double&amp; result, Double&amp; abserr, Double&amp; resabs, Double&amp; resasc)</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration">
            <summary>Type shim de Accord.Math.Integration.MonteCarloIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.#ctor(Accord.Math.Integration.MonteCarloIntegration)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.AreaGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.AreaSetDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Area(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.Clone">
            <summary>Définit le shim de MonteCarloIntegration.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.Compute">
            <summary>Définit le shim de MonteCarloIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.ErrorGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.ErrorSetDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Error(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.FunctionGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.IterationsGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de MonteCarloIntegration.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.NumberOfParametersGet">
            <summary>Définit le shim de MonteCarloIntegration.get_NumberOfParameters()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.NumberOfParametersSetInt32">
            <summary>Définit le shim de MonteCarloIntegration.set_NumberOfParameters(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.RandomGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Random()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.RandomSetRandom">
            <summary>Définit le shim de MonteCarloIntegration.set_Random(Random value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.RangeGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.RangeSetDoubleRangeArray">
            <summary>Définit le shim de MonteCarloIntegration.set_Range(DoubleRange[] value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AllInstances.Reset">
            <summary>Définit le shim de MonteCarloIntegration.Reset()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AreaGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.AreaSetDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Area(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Bind(Accord.Math.Integration.IMultidimensionalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Bind(Accord.Math.Integration.INumericalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Clone">
            <summary>Définit le shim de MonteCarloIntegration.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Compute">
            <summary>Définit le shim de MonteCarloIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.ConstructorInt32">
            <summary>Définit le shim de MonteCarloIntegration.MonteCarloIntegration(Int32 parameters)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de MonteCarloIntegration.MonteCarloIntegration(Int32 parameters, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.ErrorGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.ErrorSetDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Error(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.FunctionGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de MonteCarloIntegration.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.IntegrateFuncOfDoubleArrayDoubleDoubleArrayDoubleArray">
            <summary>Définit le shim de MonteCarloIntegration.Integrate(Func`2&lt;Double[],Double&gt; func, Double[] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.IntegrateFuncOfDoubleArrayDoubleDoubleArrayDoubleArrayInt32">
            <summary>Définit le shim de MonteCarloIntegration.Integrate(Func`2&lt;Double[],Double&gt; func, Double[] a, Double[] b, Int32 samples)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.IntegrateFuncOfDoubleDoubleDoubleDoubleInt32">
            <summary>Définit le shim de MonteCarloIntegration.Integrate(Func`2&lt;Double,Double&gt; func, Double a, Double b, Int32 samples)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.IterationsGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.IterationsSetInt32">
            <summary>Définit le shim de MonteCarloIntegration.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.NumberOfParametersGet">
            <summary>Définit le shim de MonteCarloIntegration.get_NumberOfParameters()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.NumberOfParametersSetInt32">
            <summary>Définit le shim de MonteCarloIntegration.set_NumberOfParameters(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.RandomGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Random()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.RandomSetRandom">
            <summary>Définit le shim de MonteCarloIntegration.set_Random(Random value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.RangeGet">
            <summary>Définit le shim de MonteCarloIntegration.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.RangeSetDoubleRangeArray">
            <summary>Définit le shim de MonteCarloIntegration.set_Range(DoubleRange[] value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimMonteCarloIntegration.Reset">
            <summary>Définit le shim de MonteCarloIntegration.Reset()</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod">
            <summary>Type shim de Accord.Math.Integration.NonAdaptiveGaussKronrod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.#ctor(Accord.Math.Integration.NonAdaptiveGaussKronrod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.AreaGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.Clone">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.Compute">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.ErrorGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.FunctionEvaluationsGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_FunctionEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.FunctionGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.RangeGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.RangeSetDoubleRange">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.StatusGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.StatusSetNonAdaptiveGaussKronrodStatus">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Status(NonAdaptiveGaussKronrodStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.ToleranceAbsoluteGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_ToleranceAbsolute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.ToleranceAbsoluteSetDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_ToleranceAbsolute(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.ToleranceRelativeGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_ToleranceRelative()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AllInstances.ToleranceRelativeSetDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_ToleranceRelative(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.AreaGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Area()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Bind(Accord.Math.Integration.INumericalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Bind(Accord.Math.Integration.IUnivariateIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Bind(Accord.Math.Integration.INumericalIntegration{Accord.Math.Integration.NonAdaptiveGaussKronrodStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Clone">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Compute">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.Constructor">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.NonAdaptiveGaussKronrod()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ConstructorFuncOfDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.NonAdaptiveGaussKronrod(Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ConstructorFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.NonAdaptiveGaussKronrod(Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ErrorGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Error()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.FunctionEvaluationsGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_FunctionEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.FunctionGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.IntegrateFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Integrate(Func`2&lt;Double,Double&gt; f, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.IntegrateFuncOfDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.Integrate(Func`2&lt;Double,Double&gt; f, Double a, Double b, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.RangeGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.RangeSetDoubleRange">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.StaticConstructor">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.NonAdaptiveGaussKronrod()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.StatusGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.StatusSetNonAdaptiveGaussKronrodStatus">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_Status(NonAdaptiveGaussKronrodStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ToleranceAbsoluteGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_ToleranceAbsolute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ToleranceAbsoluteSetDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_ToleranceAbsolute(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ToleranceRelativeGet">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.get_ToleranceRelative()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.ToleranceRelativeSetDouble">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.set_ToleranceRelative(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimNonAdaptiveGaussKronrod.qng_FuncOfDoubleDoubleDoubleDoubleDoubleDoubleDoubleOutDoubleOutInt32OutInt32Out">
            <summary>Définit le shim de NonAdaptiveGaussKronrod.qng_(Func`2&lt;Double,Double&gt; f, Double a, Double b, Double epsabs, Double epsrel, Double&amp; result, Double&amp; abserr, Int32&amp; neval, Int32&amp; ier)</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimRombergMethod">
            <summary>Type shim de Accord.Math.Integration.RombergMethod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.#ctor(Accord.Math.Integration.RombergMethod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.AreaGet">
            <summary>Définit le shim de RombergMethod.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.AreaSetDouble">
            <summary>Définit le shim de RombergMethod.set_Area(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.Clone">
            <summary>Définit le shim de RombergMethod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.Compute">
            <summary>Définit le shim de RombergMethod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.FunctionGet">
            <summary>Définit le shim de RombergMethod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de RombergMethod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.RangeGet">
            <summary>Définit le shim de RombergMethod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.RangeSetDoubleRange">
            <summary>Définit le shim de RombergMethod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AllInstances.StepsGet">
            <summary>Définit le shim de RombergMethod.get_Steps()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AreaGet">
            <summary>Définit le shim de RombergMethod.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.AreaSetDouble">
            <summary>Définit le shim de RombergMethod.set_Area(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.Bind(Accord.Math.Integration.INumericalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.Bind(Accord.Math.Integration.IUnivariateIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimRombergMethod.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.Clone">
            <summary>Définit le shim de RombergMethod.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.Compute">
            <summary>Définit le shim de RombergMethod.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.Constructor">
            <summary>Définit le shim de RombergMethod.RombergMethod()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.ConstructorFuncOfDoubleDouble">
            <summary>Définit le shim de RombergMethod.RombergMethod(Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.ConstructorFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de RombergMethod.RombergMethod(Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.ConstructorInt32">
            <summary>Définit le shim de RombergMethod.RombergMethod(Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.ConstructorInt32FuncOfDoubleDouble">
            <summary>Définit le shim de RombergMethod.RombergMethod(Int32 steps, Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.ConstructorInt32FuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de RombergMethod.RombergMethod(Int32 steps, Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.FunctionGet">
            <summary>Définit le shim de RombergMethod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de RombergMethod.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.IntegrateFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de RombergMethod.Integrate(Func`2&lt;Double,Double&gt; func, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.IntegrateFuncOfDoubleDoubleDoubleDoubleInt32">
            <summary>Définit le shim de RombergMethod.Integrate(Func`2&lt;Double,Double&gt; func, Double a, Double b, Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.RangeGet">
            <summary>Définit le shim de RombergMethod.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.RangeSetDoubleRange">
            <summary>Définit le shim de RombergMethod.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimRombergMethod.StepsGet">
            <summary>Définit le shim de RombergMethod.get_Steps()</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimTrapezoidalRule">
            <summary>Type shim de Accord.Math.Integration.TrapezoidalRule</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.#ctor(Accord.Math.Integration.TrapezoidalRule)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.AreaGet">
            <summary>Définit le shim de TrapezoidalRule.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.AreaSetDouble">
            <summary>Définit le shim de TrapezoidalRule.set_Area(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.Clone">
            <summary>Définit le shim de TrapezoidalRule.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.Compute">
            <summary>Définit le shim de TrapezoidalRule.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.FunctionGet">
            <summary>Définit le shim de TrapezoidalRule.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.RangeGet">
            <summary>Définit le shim de TrapezoidalRule.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.RangeSetDoubleRange">
            <summary>Définit le shim de TrapezoidalRule.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.StepsGet">
            <summary>Définit le shim de TrapezoidalRule.get_Steps()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AllInstances.StepsSetInt32">
            <summary>Définit le shim de TrapezoidalRule.set_Steps(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AreaGet">
            <summary>Définit le shim de TrapezoidalRule.get_Area()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.AreaSetDouble">
            <summary>Définit le shim de TrapezoidalRule.set_Area(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Bind(Accord.Math.Integration.INumericalIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Bind(Accord.Math.Integration.IUnivariateIntegration)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Bind(System.ICloneable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Clone">
            <summary>Définit le shim de TrapezoidalRule.Clone()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Compute">
            <summary>Définit le shim de TrapezoidalRule.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.Constructor">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.ConstructorFuncOfDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule(Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.ConstructorFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule(Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.ConstructorInt32">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule(Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.ConstructorInt32FuncOfDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule(Int32 steps, Func`2&lt;Double,Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.ConstructorInt32FuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.TrapezoidalRule(Int32 steps, Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.FunctionGet">
            <summary>Définit le shim de TrapezoidalRule.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de TrapezoidalRule.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.IntegrateFuncOfDoubleDoubleDoubleDoubleInt32">
            <summary>Définit le shim de TrapezoidalRule.Integrate(Func`2&lt;Double,Double&gt; func, Double a, Double b, Int32 steps)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.RangeGet">
            <summary>Définit le shim de TrapezoidalRule.get_Range()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.RangeSetDoubleRange">
            <summary>Définit le shim de TrapezoidalRule.set_Range(DoubleRange value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.StepsGet">
            <summary>Définit le shim de TrapezoidalRule.get_Steps()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.ShimTrapezoidalRule.StepsSetInt32">
            <summary>Définit le shim de TrapezoidalRule.set_Steps(Int32 value)</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration">
            <summary>Type stub de Accord.Math.Integration.IMultidimensionalIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.#ctor">
            <summary>Initialise une nouvelle instance de type StubIMultidimensionalIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Accord#Math#Integration#INumericalIntegration#Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Accord#Math#Integration#INumericalIntegration#Area">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.AreaGet">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.AttachBackingFieldToFunction">
            <summary>Attache les délégués pour émuler StubIMultidimensionalIntegration.Function en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Accord#Math#Integration#IMultidimensionalIntegration#Function">
            <summary>Définit le stub de IMultidimensionalIntegration.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.FunctionGet">
            <summary>Définit le stub de IMultidimensionalIntegration.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le stub de IMultidimensionalIntegration.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Accord#Math#Integration#IMultidimensionalIntegration#NumberOfParameters">
            <summary>Définit le stub de IMultidimensionalIntegration.get_NumberOfParameters()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.NumberOfParametersGet">
            <summary>Définit le stub de IMultidimensionalIntegration.get_NumberOfParameters()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.Accord#Math#Integration#IMultidimensionalIntegration#Range">
            <summary>Définit le stub de IMultidimensionalIntegration.get_Range()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.RangeGet">
            <summary>Définit le stub de IMultidimensionalIntegration.get_Range()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIMultidimensionalIntegration.System#ICloneable#Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubINumericalIntegration">
            <summary>Type stub de Accord.Math.Integration.INumericalIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubINumericalIntegration.#ctor">
            <summary>Initialise une nouvelle instance de type StubINumericalIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubINumericalIntegration.Accord#Math#Integration#INumericalIntegration#Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubINumericalIntegration.Accord#Math#Integration#INumericalIntegration#Area">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubINumericalIntegration.AreaGet">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubINumericalIntegration.Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubINumericalIntegration.Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubINumericalIntegration.System#ICloneable#Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubIUnivariateIntegration">
            <summary>Type stub de Accord.Math.Integration.IUnivariateIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.#ctor">
            <summary>Initialise une nouvelle instance de type StubIUnivariateIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Accord#Math#Integration#INumericalIntegration#Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Accord#Math#Integration#INumericalIntegration#Area">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.AreaGet">
            <summary>Définit le stub de INumericalIntegration.get_Area()</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.AttachBackingFieldToFunction">
            <summary>Attache les délégués pour émuler StubIUnivariateIntegration.Function en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.AttachBackingFieldToRange">
            <summary>Attache les délégués pour émuler StubIUnivariateIntegration.Range en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Compute">
            <summary>Définit le stub de INumericalIntegration.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Accord#Math#Integration#IUnivariateIntegration#Function">
            <summary>Définit le stub de IUnivariateIntegration.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.FunctionGet">
            <summary>Définit le stub de IUnivariateIntegration.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le stub de IUnivariateIntegration.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.Accord#Math#Integration#IUnivariateIntegration#Range">
            <summary>Définit le stub de IUnivariateIntegration.get_Range()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.RangeGet">
            <summary>Définit le stub de IUnivariateIntegration.get_Range()</summary>
        </member>
        <member name="F:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.RangeSetDoubleRange">
            <summary>Définit le stub de IUnivariateIntegration.set_Range(DoubleRange value)</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubIUnivariateIntegration.System#ICloneable#Clone">
            <summary>Définit le stub de ICloneable.Clone()</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod">
            <summary>Type stub de Accord.Math.Integration.InfiniteAdaptiveGaussKronrod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.#ctor(System.Int32,System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.#ctor(System.Int32,System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubInfiniteAdaptiveGaussKronrod</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubInfiniteAdaptiveGaussKronrod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubMonteCarloIntegration">
            <summary>Type stub de Accord.Math.Integration.MonteCarloIntegration</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubMonteCarloIntegration</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubMonteCarloIntegration.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod">
            <summary>Type stub de Accord.Math.Integration.NonAdaptiveGaussKronrod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.#ctor(System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.#ctor(System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonAdaptiveGaussKronrod</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubNonAdaptiveGaussKronrod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubRombergMethod">
            <summary>Type stub de Accord.Math.Integration.RombergMethod</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor(System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor(System.Int32,System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor(System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.#ctor(System.Int32,System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubRombergMethod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubRombergMethod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubRombergMethod</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubRombergMethod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubRombergMethod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Integration.Fakes.StubTrapezoidalRule">
            <summary>Type stub de Accord.Math.Integration.TrapezoidalRule</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor(System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor(System.Int32,System.Func{System.Double,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor(System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.#ctor(System.Int32,System.Func{System.Double,System.Double},System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubTrapezoidalRule.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Integration.Fakes.StubTrapezoidalRule.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubTrapezoidalRule</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubTrapezoidalRule.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Integration.Fakes.StubTrapezoidalRule.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergJoint</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.#ctor(Accord.Math.Kinematics.DenavitHartenbergJoint)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.ComputeMatrix4x4Vector4">
            <summary>Définit le shim de DenavitHartenbergJoint.Compute(Matrix4x4 transformMatrix, Vector4 referencePosition)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.MatrixGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Matrix()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.MatrixSetDenavitHartenbergMatrix">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Matrix(DenavitHartenbergMatrix value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.ParametersGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Parameters()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.ParametersSetDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Parameters(DenavitHartenbergParameters value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.PositionGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Position()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.AllInstances.PositionSetVector3">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Position(Vector3 value)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.ComputeMatrix4x4Vector4">
            <summary>Définit le shim de DenavitHartenbergJoint.Compute(Matrix4x4 transformMatrix, Vector4 referencePosition)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.ConstructorDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergJoint.DenavitHartenbergJoint(DenavitHartenbergParameters parameters)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.ConstructorDoubleDoubleDoubleDouble">
            <summary>Définit le shim de DenavitHartenbergJoint.DenavitHartenbergJoint(Double alpha, Double theta, Double radius, Double offset)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.MatrixGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Matrix()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.MatrixSetDenavitHartenbergMatrix">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Matrix(DenavitHartenbergMatrix value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.ParametersGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Parameters()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.ParametersSetDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Parameters(DenavitHartenbergParameters value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.PositionGet">
            <summary>Définit le shim de DenavitHartenbergJoint.get_Position()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJoint.PositionSetVector3">
            <summary>Définit le shim de DenavitHartenbergJoint.set_Position(Vector3 value)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergJointCollection</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.#ctor(Accord.Math.Kinematics.DenavitHartenbergJointCollection)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.AddDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergJointCollection.Add(DenavitHartenbergParameters parameters)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.AddDoubleDoubleDoubleDouble">
            <summary>Définit le shim de DenavitHartenbergJointCollection.Add(Double alpha, Double theta, Double radius, Double offset)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.AllInstances.AddDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergJointCollection.Add(DenavitHartenbergParameters parameters)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.AllInstances.AddDoubleDoubleDoubleDouble">
            <summary>Définit le shim de DenavitHartenbergJointCollection.Add(Double alpha, Double theta, Double radius, Double offset)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.IList)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.Generic.ICollection{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.Generic.IEnumerable{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.Generic.IList{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Bind(System.Collections.Generic.IReadOnlyList{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergJointCollection.Constructor">
            <summary>Définit le shim de DenavitHartenbergJointCollection.DenavitHartenbergJointCollection()</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergMatrix</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.#ctor(Accord.Math.Kinematics.DenavitHartenbergMatrix)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.ComputeDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergMatrix.Compute(DenavitHartenbergParameters parameters)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.TransformGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_Transform()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.TransformSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_Transform(Matrix4x4 value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.XGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_X()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.XSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_X(Matrix4x4 value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.ZGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_Z()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.AllInstances.ZSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_Z(Matrix4x4 value)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.ComputeDenavitHartenbergParameters">
            <summary>Définit le shim de DenavitHartenbergMatrix.Compute(DenavitHartenbergParameters parameters)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.Constructor">
            <summary>Définit le shim de DenavitHartenbergMatrix.DenavitHartenbergMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.TransformGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_Transform()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.TransformSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_Transform(Matrix4x4 value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.XGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_X()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.XSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_X(Matrix4x4 value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.ZGet">
            <summary>Définit le shim de DenavitHartenbergMatrix.get_Z()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergMatrix.ZSetMatrix4x4">
            <summary>Définit le shim de DenavitHartenbergMatrix.set_Z(Matrix4x4 value)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergModel</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.#ctor(Accord.Math.Kinematics.DenavitHartenbergModel)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.Compute">
            <summary>Définit le shim de DenavitHartenbergModel.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.ComputeDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergModel.Compute(DenavitHartenbergModel parent)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.GetEnumerator">
            <summary>Définit le shim de DenavitHartenbergModel.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.JointsGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Joints()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.PositionGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Position()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de DenavitHartenbergModel.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.TransformGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Transform()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.AllInstances.computeMatrix4x4Vector3">
            <summary>Définit le shim de DenavitHartenbergModel.compute(Matrix4x4 currentMatrix, Vector3 position)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.Bind(System.Collections.Generic.IEnumerable{Accord.Math.Kinematics.DenavitHartenbergJoint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.Compute">
            <summary>Définit le shim de DenavitHartenbergModel.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.ComputeDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergModel.Compute(DenavitHartenbergModel parent)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.Constructor">
            <summary>Définit le shim de DenavitHartenbergModel.DenavitHartenbergModel()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.ConstructorVector3">
            <summary>Définit le shim de DenavitHartenbergModel.DenavitHartenbergModel(Vector3 position)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.GetEnumerator">
            <summary>Définit le shim de DenavitHartenbergModel.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.JointsGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Joints()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.PositionGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Position()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Définit le shim de DenavitHartenbergModel.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.TransformGet">
            <summary>Définit le shim de DenavitHartenbergModel.get_Transform()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergModel.computeMatrix4x4Vector3">
            <summary>Définit le shim de DenavitHartenbergModel.compute(Matrix4x4 currentMatrix, Vector3 position)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergNode</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.#ctor(Accord.Math.Kinematics.DenavitHartenbergNode)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ChildrenGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Children()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ChildrenSetDenavitHartenbergNodeCollection">
            <summary>Définit le shim de DenavitHartenbergNode.set_Children(DenavitHartenbergNodeCollection value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.Compute">
            <summary>Définit le shim de DenavitHartenbergNode.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ModelGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Model()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ModelSetDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergNode.set_Model(DenavitHartenbergModel value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ParentGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Parent()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.AllInstances.ParentSetDenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNode.set_Parent(DenavitHartenbergNode value)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ChildrenGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Children()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ChildrenSetDenavitHartenbergNodeCollection">
            <summary>Définit le shim de DenavitHartenbergNode.set_Children(DenavitHartenbergNodeCollection value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.Compute">
            <summary>Définit le shim de DenavitHartenbergNode.Compute()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ConstructorDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergNode.DenavitHartenbergNode(DenavitHartenbergModel model)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ModelGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Model()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ModelSetDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergNode.set_Model(DenavitHartenbergModel value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ParentGet">
            <summary>Définit le shim de DenavitHartenbergNode.get_Parent()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNode.ParentSetDenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNode.set_Parent(DenavitHartenbergNode value)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergNodeCollection</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.#ctor(Accord.Math.Kinematics.DenavitHartenbergNodeCollection)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AddDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.Add(DenavitHartenbergModel child)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AllInstances.AddDenavitHartenbergModel">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.Add(DenavitHartenbergModel child)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AllInstances.InsertItemInt32DenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.InsertItem(Int32 index, DenavitHartenbergNode item)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AllInstances.OwnerGet">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.get_Owner()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.AllInstances.OwnerSetDenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.set_Owner(DenavitHartenbergNode value)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.IList)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.Generic.ICollection{Accord.Math.Kinematics.DenavitHartenbergNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.Generic.IEnumerable{Accord.Math.Kinematics.DenavitHartenbergNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.Generic.IList{Accord.Math.Kinematics.DenavitHartenbergNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Accord.Math.Kinematics.DenavitHartenbergNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.Bind(System.Collections.Generic.IReadOnlyList{Accord.Math.Kinematics.DenavitHartenbergNode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.ConstructorDenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.DenavitHartenbergNodeCollection(DenavitHartenbergNode owner)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.InsertItemInt32DenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.InsertItem(Int32 index, DenavitHartenbergNode item)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.OwnerGet">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.get_Owner()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergNodeCollection.OwnerSetDenavitHartenbergNode">
            <summary>Définit le shim de DenavitHartenbergNodeCollection.set_Owner(DenavitHartenbergNode value)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters">
            <summary>Type shim de Accord.Math.Kinematics.DenavitHartenbergParameters</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.#ctor(Accord.Math.Kinematics.DenavitHartenbergParameters)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.AlphaGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Alpha()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.AlphaSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Alpha(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.OffsetGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Offset()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.OffsetSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Offset(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.RadiusGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Radius()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.RadiusSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Radius(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.ThetaGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Theta()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AllInstances.ThetaSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Theta(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AlphaGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Alpha()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.AlphaSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Alpha(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.Constructor">
            <summary>Définit le shim de DenavitHartenbergParameters.DenavitHartenbergParameters()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.ConstructorDoubleDoubleDoubleDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.DenavitHartenbergParameters(Double alpha, Double theta, Double radius, Double offset)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.OffsetGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Offset()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.OffsetSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Offset(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.RadiusGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Radius()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.RadiusSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Radius(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.ThetaGet">
            <summary>Définit le shim de DenavitHartenbergParameters.get_Theta()</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.ShimDenavitHartenbergParameters.ThetaSetDouble">
            <summary>Définit le shim de DenavitHartenbergParameters.set_Theta(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergJoint</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.#ctor(Accord.Math.Kinematics.DenavitHartenbergParameters)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergJoint</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJoint.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergJointCollection</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergJointCollection</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergJointCollection.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergMatrix</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergMatrix</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergMatrix.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergModel</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.#ctor(AForge.Math.Vector3)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergModel</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergModel.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergNode</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode.#ctor(Accord.Math.Kinematics.DenavitHartenbergModel)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergNode</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNode.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergNodeCollection</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.#ctor(Accord.Math.Kinematics.DenavitHartenbergNode)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.ClearItems">
            <summary>Définit le stub de Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.ClearItems01">
            <summary>Définit le stub de Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergNodeCollection</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.InsertItem(System.Int32,Accord.Math.Kinematics.DenavitHartenbergNode)">
            <summary>Définit le stub de DenavitHartenbergNodeCollection.InsertItem(Int32 index, DenavitHartenbergNode item)</summary>
        </member>
        <member name="F:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.InsertItemInt32DenavitHartenbergNode">
            <summary>Définit le stub de DenavitHartenbergNodeCollection.InsertItem(Int32 index, DenavitHartenbergNode item)</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.RemoveItem(System.Int32)">
            <summary>Définit le stub de Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.RemoveItemInt32">
            <summary>Définit le stub de Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.SetItem(System.Int32,Accord.Math.Kinematics.DenavitHartenbergNode)">
            <summary>Définit le stub de Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergNodeCollection.SetItemInt32DenavitHartenbergNode">
            <summary>Définit le stub de Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="T:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters">
            <summary>Type stub de Accord.Math.Kinematics.DenavitHartenbergParameters</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubDenavitHartenbergParameters</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Kinematics.Fakes.StubDenavitHartenbergParameters.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian">
            <summary>Type shim de Accord.Math.Optimization.AugmentedLagrangian</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.#ctor(Accord.Math.Optimization.AugmentedLagrangian)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.EvaluationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.IterationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.MaxEvaluationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_MaxEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.MaxEvaluationsSetInt32">
            <summary>Définit le shim de AugmentedLagrangian.set_MaxEvaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.Optimize">
            <summary>Définit le shim de AugmentedLagrangian.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.OptimizerGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Optimizer()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.initNonlinearObjectiveFunctionIEnumerableOfNonlinearConstraintIGradientOptimizationMethod">
            <summary>Définit le shim de AugmentedLagrangian.init(NonlinearObjectiveFunction function, IEnumerable`1&lt;NonlinearConstraint&gt; constraints, IGradientOptimizationMethod innerSolver)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.objectiveFunctionDoubleArray">
            <summary>Définit le shim de AugmentedLagrangian.objectiveFunction(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.AllInstances.objectiveGradientDoubleArray">
            <summary>Définit le shim de AugmentedLagrangian.objectiveGradient(Double[] x)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.Bind(Accord.Math.Optimization.IGradientOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.ConstructorIGradientOptimizationMethodIEnumerableOfNonlinearConstraint">
            <summary>Définit le shim de AugmentedLagrangian.AugmentedLagrangian(IGradientOptimizationMethod innerSolver, IEnumerable`1&lt;NonlinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.ConstructorIGradientOptimizationMethodNonlinearObjectiveFunctionIEnumerableOfNonlinearConstraint">
            <summary>Définit le shim de AugmentedLagrangian.AugmentedLagrangian(IGradientOptimizationMethod innerSolver, NonlinearObjectiveFunction function, IEnumerable`1&lt;NonlinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.ConstructorInt32IEnumerableOfNonlinearConstraint">
            <summary>Définit le shim de AugmentedLagrangian.AugmentedLagrangian(Int32 numberOfVariables, IEnumerable`1&lt;NonlinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.ConstructorNonlinearObjectiveFunctionIEnumerableOfNonlinearConstraint">
            <summary>Définit le shim de AugmentedLagrangian.AugmentedLagrangian(NonlinearObjectiveFunction function, IEnumerable`1&lt;NonlinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.EvaluationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.IterationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.MaxEvaluationsGet">
            <summary>Définit le shim de AugmentedLagrangian.get_MaxEvaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.MaxEvaluationsSetInt32">
            <summary>Définit le shim de AugmentedLagrangian.set_MaxEvaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.Optimize">
            <summary>Définit le shim de AugmentedLagrangian.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.OptimizerGet">
            <summary>Définit le shim de AugmentedLagrangian.get_Optimizer()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.initNonlinearObjectiveFunctionIEnumerableOfNonlinearConstraintIGradientOptimizationMethod">
            <summary>Définit le shim de AugmentedLagrangian.init(NonlinearObjectiveFunction function, IEnumerable`1&lt;NonlinearConstraint&gt; constraints, IGradientOptimizationMethod innerSolver)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.objectiveFunctionDoubleArray">
            <summary>Définit le shim de AugmentedLagrangian.objectiveFunction(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.objectiveGradientDoubleArray">
            <summary>Définit le shim de AugmentedLagrangian.objectiveGradient(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimAugmentedLagrangian.relstopDoubleDoubleDoubleDouble">
            <summary>Définit le shim de AugmentedLagrangian.relstop(Double vold, Double vnew, Double reltol, Double abstol)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod">
            <summary>Type shim de Accord.Math.Optimization.BaseGradientOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.#ctor(Accord.Math.Optimization.BaseGradientOptimizationMethod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.AllInstances.GradientGet">
            <summary>Définit le shim de BaseGradientOptimizationMethod.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.AllInstances.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de BaseGradientOptimizationMethod.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.AllInstances.Maximize">
            <summary>Définit le shim de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.AllInstances.Minimize">
            <summary>Définit le shim de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.ConstructorInt32">
            <summary>Définit le shim de BaseGradientOptimizationMethod.BaseGradientOptimizationMethod(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de BaseGradientOptimizationMethod.BaseGradientOptimizationMethod(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.GradientGet">
            <summary>Définit le shim de BaseGradientOptimizationMethod.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de BaseGradientOptimizationMethod.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.Maximize">
            <summary>Définit le shim de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseGradientOptimizationMethod.Minimize">
            <summary>Définit le shim de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod">
            <summary>Type shim de Accord.Math.Optimization.BaseOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.#ctor(Accord.Math.Optimization.BaseOptimizationMethod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.FunctionGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de BaseOptimizationMethod.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.Maximize">
            <summary>Définit le shim de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.MaximizeDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.Maximize(Double[] values)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.Minimize">
            <summary>Définit le shim de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.MinimizeDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.Minimize(Double[] values)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de BaseOptimizationMethod.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.SolutionGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.SolutionSetDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.ValueGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.ValueSetDouble">
            <summary>Définit le shim de BaseOptimizationMethod.set_Value(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.AllInstances.initInt32">
            <summary>Définit le shim de BaseOptimizationMethod.init(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ArgumentExceptionStringStringString">
            <summary>Définit le shim de BaseOptimizationMethod.ArgumentException(String paramName, String message, String code)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ConstructorInt32">
            <summary>Définit le shim de BaseOptimizationMethod.BaseOptimizationMethod(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de BaseOptimizationMethod.BaseOptimizationMethod(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de BaseOptimizationMethod.BaseOptimizationMethod(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.FunctionGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de BaseOptimizationMethod.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.Maximize">
            <summary>Définit le shim de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.MaximizeDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.Maximize(Double[] values)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.Minimize">
            <summary>Définit le shim de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.MinimizeDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.Minimize(Double[] values)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.NumberOfVariablesGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.NumberOfVariablesSetInt32">
            <summary>Définit le shim de BaseOptimizationMethod.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.OperationExceptionStringString">
            <summary>Définit le shim de BaseOptimizationMethod.OperationException(String message, String code)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.SolutionGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.SolutionSetDoubleArray">
            <summary>Définit le shim de BaseOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ValueGet">
            <summary>Définit le shim de BaseOptimizationMethod.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.ValueSetDouble">
            <summary>Définit le shim de BaseOptimizationMethod.set_Value(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBaseOptimizationMethod.initInt32">
            <summary>Définit le shim de BaseOptimizationMethod.init(Int32 numberOfVariables)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBinarySearch">
            <summary>Type shim de Accord.Math.Optimization.BinarySearch</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBinarySearch.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBinarySearch.#ctor(Accord.Math.Optimization.BinarySearch)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.FindDouble">
            <summary>Définit le shim de BinarySearch.Find(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.FindRoot">
            <summary>Définit le shim de BinarySearch.FindRoot()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.FunctionGet">
            <summary>Définit le shim de BinarySearch.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.FunctionSetFuncOfInt32Double">
            <summary>Définit le shim de BinarySearch.set_Function(Func`2&lt;Int32,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.LowerBoundGet">
            <summary>Définit le shim de BinarySearch.get_LowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.LowerBoundSetInt32">
            <summary>Définit le shim de BinarySearch.set_LowerBound(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.SolutionGet">
            <summary>Définit le shim de BinarySearch.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.SolutionSetInt32">
            <summary>Définit le shim de BinarySearch.set_Solution(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.UpperBoundGet">
            <summary>Définit le shim de BinarySearch.get_UpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.UpperBoundSetInt32">
            <summary>Définit le shim de BinarySearch.set_UpperBound(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.ValueGet">
            <summary>Définit le shim de BinarySearch.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.AllInstances.ValueSetDouble">
            <summary>Définit le shim de BinarySearch.set_Value(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBinarySearch.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBinarySearch.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.ConstructorFuncOfInt32DoubleInt32Int32">
            <summary>Définit le shim de BinarySearch.BinarySearch(Func`2&lt;Int32,Double&gt; function, Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.FindDouble">
            <summary>Définit le shim de BinarySearch.Find(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.FindFuncOfInt32DoubleInt32Int32Double">
            <summary>Définit le shim de BinarySearch.Find(Func`2&lt;Int32,Double&gt; function, Int32 lowerBound, Int32 upperBound, Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.FindRoot">
            <summary>Définit le shim de BinarySearch.FindRoot()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.FunctionGet">
            <summary>Définit le shim de BinarySearch.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.FunctionSetFuncOfInt32Double">
            <summary>Définit le shim de BinarySearch.set_Function(Func`2&lt;Int32,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.LowerBoundGet">
            <summary>Définit le shim de BinarySearch.get_LowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.LowerBoundSetInt32">
            <summary>Définit le shim de BinarySearch.set_LowerBound(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.SolutionGet">
            <summary>Définit le shim de BinarySearch.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.SolutionSetInt32">
            <summary>Définit le shim de BinarySearch.set_Solution(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.UpperBoundGet">
            <summary>Définit le shim de BinarySearch.get_UpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.UpperBoundSetInt32">
            <summary>Définit le shim de BinarySearch.set_UpperBound(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.ValueGet">
            <summary>Définit le shim de BinarySearch.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBinarySearch.ValueSetDouble">
            <summary>Définit le shim de BinarySearch.set_Value(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno">
            <summary>Type shim de Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.#ctor(Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShanno)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.CorrectionsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Corrections()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.CorrectionsSetInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_Corrections(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.EvaluationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.FunctionToleranceGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_FunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.FunctionToleranceSetDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_FunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.GradientToleranceGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_GradientTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.GradientToleranceSetDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_GradientTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.IterationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.LowerBoundsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.Optimize">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.StatusGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.StatusSetBoundedBroydenFletcherGoldfarbShannoStatus">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_Status(BoundedBroydenFletcherGoldfarbShannoStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.AllInstances.UpperBoundsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_UpperBounds()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IGradientOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShannoStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.ConstructorInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.BoundedBroydenFletcherGoldfarbShanno(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.BoundedBroydenFletcherGoldfarbShanno(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.CorrectionsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Corrections()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.CorrectionsSetInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_Corrections(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.EvaluationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.FunctionToleranceGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_FunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.FunctionToleranceSetDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_FunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.GradientToleranceGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_GradientTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.GradientToleranceSetDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_GradientTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.IterationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.LowerBoundsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.MaxIterationsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.MaxIterationsSetInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.Optimize">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.StatusGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.StatusSetBoundedBroydenFletcherGoldfarbShannoStatus">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.set_Status(BoundedBroydenFletcherGoldfarbShannoStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.UpperBoundsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.activeInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleArrayInt32Int32ArrayInt32Int32BooleanRefBooleanRefBooleanRef">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.active(Int32 n, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double[] x, Int32 _x_offset, Int32[] iwhere, Int32 _iwhere_offset, Int32 iprint, Boolean&amp; prjctd, Boolean&amp; cnstnd, Boolean&amp; boxed)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.bmvInt32DoubleArrayInt32DoubleArrayInt32Int32DoubleArrayInt32DoubleArrayInt32Int32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.bmv(Int32 m, Double[] sy, Int32 _sy_offset, Double[] wt, Int32 _wt_offset, Int32 col, Double[] v, Int32 _v_offset, Double[] p, Int32 _p_offset, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.cauchyInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleArrayInt32Int32ArrayInt32Int32ArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleInt32Int32Dou">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.cauchy(Int32 n, Double[] x, Int32 _x_offset, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double[] g, Int32 _g_offset, Int32[] iorder, Int32 _iorder_offset, Int32[] iwhere, Int32 _iwhere_offset, Double[] t, Int32 _t_offset, Double[] d, Int32 _d_offset, Double[] xcp, Int32 _xcp_offset, Int32 m, Double[] wy, Int32 _wy_offset, Double[] ws, Int32 _ws_offset, Double[] sy, Int32 _sy_offset, Double[] wt, Int32 _wt_offset, Double theta, Int32 col, Int32 head, Double[] p, Int32 _p_offset, Double[] c, Int32 _c_offset, Double[] wbp, Int32 _wbp_offset, Double[] v, Int32 _v_offset, Int32&amp; nseg, Int32 iprint, Double sbgnrm, Int32&amp; info, Double epsmch)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.cmprlbInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleInt32Int32Int32BooleanInt32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.cmprlb(Int32 n, Int32 m, Double[] x, Int32 _x_offset, Double[] g, Int32 _g_offset, Double[] ws, Int32 _ws_offset, Double[] wy, Int32 _wy_offset, Double[] sy, Int32 _sy_offset, Double[] wt, Int32 _wt_offset, Double[] z, Int32 _z_offset, Double[] r, Int32 _r_offset, Double[] wa, Int32 _wa_offset, Int32[] index, Int32 _index_offset, Double theta, Int32 col, Int32 head, Int32 nfree, Boolean cnstnd, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.daxpyInt32DoubleDoubleArrayInt32Int32DoubleArrayInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.daxpy(Int32 n, Double da, Double[] dx, Int32 _dx_offset, Int32 incx, Double[] dy, Int32 _dy_offset, Int32 incy)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dcopyInt32DoubleArrayInt32Int32DoubleArrayInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dcopy(Int32 n, Double[] dx, Int32 _dx_offset, Int32 incx, Double[] dy, Int32 _dy_offset, Int32 incy)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dcsrchDoubleDoubleDoubleRefDoubleDoubleDoubleDoubleDoubleStringRefInt32ArrayInt32DoubleArrayInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dcsrch(Double f, Double g, Double&amp; stp, Double ftol, Double gtol, Double xtol, Double stpmin, Double stpmax, String&amp; task, Int32[] isave, Int32 _isave_offset, Double[] dsave, Int32 _dsave_offset)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dcstepDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleDoubleBooleanRefDoubleDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dcstep(Double&amp; stx, Double&amp; fx, Double&amp; dx, Double&amp; sty, Double&amp; fy, Double&amp; dy, Double&amp; stp, Double fp, Double dp, Boolean&amp; brackt, Double stpmin, Double stpmax)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.ddotInt32DoubleArrayInt32Int32DoubleArrayInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.ddot(Int32 n, Double[] dx, Int32 _dx_offset, Int32 incx, Double[] dy, Int32 _dy_offset, Int32 incy)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dpofaDoubleArrayInt32Int32Int32Int32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dpofa(Double[] a, Int32 _a_offset, Int32 lda, Int32 n, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dscalInt32DoubleDoubleArrayInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dscal(Int32 n, Double da, Double[] dx, Int32 _dx_offset, Int32 incx)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.dtrslDoubleArrayInt32Int32Int32DoubleArrayInt32Int32Int32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.dtrsl(Double[] t, Int32 _t_offset, Int32 ldt, Int32 n, Double[] b, Int32 _b_offset, Int32 job, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.errclbInt32Int32DoubleDoubleArrayInt32DoubleArrayInt32Int32ArrayInt32StringRefInt32RefInt32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.errclb(Int32 n, Int32 m, Double factr, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, String&amp; task, Int32&amp; info, Int32&amp; k)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.formkInt32Int32Int32ArrayInt32Int32Int32Int32ArrayInt32Int32BooleanDoubleArrayInt32DoubleArrayInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleInt32Int32Int32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.formk(Int32 n, Int32 nsub, Int32[] ind, Int32 _ind_offset, Int32 nenter, Int32 ileave, Int32[] indx2, Int32 _indx2_offset, Int32 iupdat, Boolean updatd, Double[] wn, Int32 _wn_offset, Double[] wn1, Int32 _wn1_offset, Int32 m, Double[] ws, Int32 _ws_offset, Double[] wy, Int32 _wy_offset, Double[] sy, Int32 _sy_offset, Double theta, Int32 col, Int32 head, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.formtInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32DoubleInt32Ref">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.formt(Int32 m, Double[] wt, Int32 _wt_offset, Double[] sy, Int32 _sy_offset, Double[] ss, Int32 _ss_offset, Int32 col, Double theta, Int32&amp; info)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.freevInt32Int32RefInt32ArrayInt32Int32RefInt32RefInt32ArrayInt32Int32ArrayInt32BooleanRefBooleanBooleanInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.freev(Int32 n, Int32&amp; nfree, Int32[] index, Int32 _index_offset, Int32&amp; nenter, Int32&amp; ileave, Int32[] indx2, Int32 _indx2_offset, Int32[] iwhere, Int32 _iwhere_offset, Boolean&amp; wrk, Boolean updatd, Boolean cnstnd, Int32 iprint, Int32 iter)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.hpsolbInt32DoubleArrayInt32Int32ArrayInt32Int32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.hpsolb(Int32 n, Double[] t, Int32 _t_offset, Int32[] iorder, Int32 _iorder_offset, Int32 iheap)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.lnsrlbInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleArrayInt32DoubleDoubleRefDoubleRefDoubleRefDoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleRefDoubleRefDoubleRefDoubleRefDoubleRefInt32Int32RefInt32RefInt">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.lnsrlb(Int32 n, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double[] x, Int32 _x_offset, Double f, Double&amp; fold, Double&amp; gd, Double&amp; gdold, Double[] g, Int32 _g_offset, Double[] d, Int32 _d_offset, Double[] r, Int32 _r_offset, Double[] t, Int32 _t_offset, Double[] z, Int32 _z_offset, Double&amp; stp, Double&amp; dnorm, Double&amp; dtd, Double&amp; xstep, Double&amp; stpmx, Int32 iter, Int32&amp; ifun, Int32&amp; iback, Int32&amp; nfgv, Int32&amp; info, String&amp; task, Boolean boxed, Boolean cnstnd, String&amp; csave, Int32[] isave, Int32 _isave_offset, Double[] dsave, Int32 _dsave_offset)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.mainlbInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleRefDoubleArrayInt32DoubleDoubleDoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayI">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.mainlb(Int32 n, Int32 m, Double[] x, Int32 _x_offset, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double&amp; f, Double[] g, Int32 _g_offset, Double factr, Double pgtol, Double[] ws, Int32 _ws_offset, Double[] wy, Int32 _wy_offset, Double[] sy, Int32 _sy_offset, Double[] ss, Int32 _ss_offset, Double[] wt, Int32 _wt_offset, Double[] wn, Int32 _wn_offset, Double[] snd, Int32 _snd_offset, Double[] z, Int32 _z_offset, Double[] r, Int32 _r_offset, Double[] d, Int32 _d_offset, Double[] t, Int32 _t_offset, Double[] xp, Int32 _xp_offset, Double[] wa, Int32 _wa_offset, Int32[] index, Int32 _index_offset, Int32[] iwhere, Int32 _iwhere_offset, Int32[] indx2, Int32 _indx2_offset, String&amp; task, Int32 iprint, String&amp; csave, Boolean[] lsave, Int32 _lsave_offset, Int32[] isave, Int32 _isave_offset, Double[] dsave, Int32 _dsave_offset)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.matupdInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32RefInt32Int32RefInt32RefDoubleRefDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.matupd(Int32 n, Int32 m, Double[] ws, Int32 _ws_offset, Double[] wy, Int32 _wy_offset, Double[] sy, Int32 _sy_offset, Double[] ss, Int32 _ss_offset, Double[] d, Int32 _d_offset, Double[] r, Int32 _r_offset, Int32&amp; itail, Int32 iupdat, Int32&amp; col, Int32&amp; head, Double&amp; theta, Double rr, Double dr, Double stp, Double dtd)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.projgrInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleRef">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.projgr(Int32 n, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double[] x, Int32 _x_offset, Double[] g, Int32 _g_offset, Double&amp; sbgnrm)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.setulbInt32Int32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleRefDoubleArrayInt32DoubleDoubleDoubleArrayInt32Int32ArrayInt32StringRefInt32StringRefBooleanArrayInt32Int32ArrayInt32DoubleArrayInt32">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.setulb(Int32 n, Int32 m, Double[] x, Int32 _x_offset, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double&amp; f, Double[] g, Int32 _g_offset, Double factr, Double pgtol, Double[] wa, Int32 _wa_offset, Int32[] iwa, Int32 _iwa_offset, String&amp; task, Int32 iprint, String&amp; csave, Boolean[] lsave, Int32 _lsave_offset, Int32[] isave, Int32 _isave_offset, Double[] dsave, Int32 _dsave_offset)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShanno.subsmInt32Int32Int32Int32ArrayInt32DoubleArrayInt32DoubleArrayInt32Int32ArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleArrayInt32DoubleDoubleArrayInt32DoubleArrayInt32Int32Int32Int32RefDoubleArrayInt32DoubleArrayInt32Int32I">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShanno.subsm(Int32 n, Int32 m, Int32 nsub, Int32[] ind, Int32 _ind_offset, Double[] l, Int32 _l_offset, Double[] u, Int32 _u_offset, Int32[] nbd, Int32 _nbd_offset, Double[] x, Int32 _x_offset, Double[] d, Int32 _d_offset, Double[] xp, Int32 _xp_offset, Double[] ws, Int32 _ws_offset, Double[] wy, Int32 _wy_offset, Double theta, Double[] xx, Int32 _xx_offset, Double[] gg, Int32 _gg_offset, Int32 col, Int32 head, Int32&amp; iword, Double[] wv, Int32 _wv_offset, Double[] wn, Int32 _wn_offset, Int32 iprint, Int32&amp; info)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus">
            <summary>Type shim de Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShannoInnerStatus</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.#ctor(Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShannoInnerStatus)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.BooleansGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Booleans()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.BooleansSetBooleanArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Booleans(Boolean[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.DoublesGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Doubles()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.DoublesSetDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Doubles(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.IntegersGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Integers()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.IntegersSetInt32Array">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Integers(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.StringsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Strings()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.StringsSetString">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Strings(String value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.WorkGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Work()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.AllInstances.WorkSetDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Work(Double[] value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.BooleansGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Booleans()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.BooleansSetBooleanArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Booleans(Boolean[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.ConstructorInt32ArrayDoubleArrayBooleanArrayStringDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.BoundedBroydenFletcherGoldfarbShannoInnerStatus(Int32[] isave, Double[] dsave, Boolean[] lsave, String csave, Double[] work)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.DoublesGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Doubles()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.DoublesSetDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Doubles(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.IntegersGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Integers()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.IntegersSetInt32Array">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Integers(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.StringsGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Strings()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.StringsSetString">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Strings(String value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.WorkGet">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.get_Work()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBoundedBroydenFletcherGoldfarbShannoInnerStatus.WorkSetDoubleArray">
            <summary>Définit le shim de BoundedBroydenFletcherGoldfarbShannoInnerStatus.set_Work(Double[] value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBrentSearch">
            <summary>Type shim de Accord.Math.Optimization.BrentSearch</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBrentSearch.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBrentSearch.#ctor(Accord.Math.Optimization.BrentSearch)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.FindDouble">
            <summary>Définit le shim de BrentSearch.Find(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.FindRoot">
            <summary>Définit le shim de BrentSearch.FindRoot()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.FunctionGet">
            <summary>Définit le shim de BrentSearch.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de BrentSearch.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.LowerBoundGet">
            <summary>Définit le shim de BrentSearch.get_LowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.LowerBoundSetDouble">
            <summary>Définit le shim de BrentSearch.set_LowerBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.Maximize">
            <summary>Définit le shim de BrentSearch.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.Minimize">
            <summary>Définit le shim de BrentSearch.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de BrentSearch.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.SolutionAccordMathOptimizationIOptimizationMethodget">
            <summary>Définit le shim de BrentSearch.Accord.Math.Optimization.IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.SolutionAccordMathOptimizationIOptimizationMethodsetDoubleArray">
            <summary>Définit le shim de BrentSearch.Accord.Math.Optimization.IOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.SolutionGet">
            <summary>Définit le shim de BrentSearch.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.SolutionSetDouble">
            <summary>Définit le shim de BrentSearch.set_Solution(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.ToleranceGet">
            <summary>Définit le shim de BrentSearch.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de BrentSearch.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.UpperBoundGet">
            <summary>Définit le shim de BrentSearch.get_UpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.UpperBoundSetDouble">
            <summary>Définit le shim de BrentSearch.set_UpperBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.ValueGet">
            <summary>Définit le shim de BrentSearch.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.AllInstances.ValueSetDouble">
            <summary>Définit le shim de BrentSearch.set_Value(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBrentSearch.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBrentSearch.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBrentSearch.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.ConstructorFuncOfDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BrentSearch.BrentSearch(Func`2&lt;Double,Double&gt; function, Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FindDouble">
            <summary>Définit le shim de BrentSearch.Find(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FindFuncOfDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BrentSearch.Find(Func`2&lt;Double,Double&gt; function, Double value, Double lowerBound, Double upperBound, Double tol)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FindRoot">
            <summary>Définit le shim de BrentSearch.FindRoot()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FindRootFuncOfDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BrentSearch.FindRoot(Func`2&lt;Double,Double&gt; function, Double lowerBound, Double upperBound, Double tol)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FunctionGet">
            <summary>Définit le shim de BrentSearch.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.FunctionSetFuncOfDoubleDouble">
            <summary>Définit le shim de BrentSearch.set_Function(Func`2&lt;Double,Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.LowerBoundGet">
            <summary>Définit le shim de BrentSearch.get_LowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.LowerBoundSetDouble">
            <summary>Définit le shim de BrentSearch.set_LowerBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.Maximize">
            <summary>Définit le shim de BrentSearch.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.MaximizeFuncOfDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BrentSearch.Maximize(Func`2&lt;Double,Double&gt; function, Double lowerBound, Double upperBound, Double tol)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.Minimize">
            <summary>Définit le shim de BrentSearch.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.MinimizeFuncOfDoubleDoubleDoubleDoubleDouble">
            <summary>Définit le shim de BrentSearch.Minimize(Func`2&lt;Double,Double&gt; function, Double lowerBound, Double upperBound, Double tol)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.NumberOfVariablesGet">
            <summary>Définit le shim de BrentSearch.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.SolutionAccordMathOptimizationIOptimizationMethodget">
            <summary>Définit le shim de BrentSearch.Accord.Math.Optimization.IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.SolutionAccordMathOptimizationIOptimizationMethodsetDoubleArray">
            <summary>Définit le shim de BrentSearch.Accord.Math.Optimization.IOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.SolutionGet">
            <summary>Définit le shim de BrentSearch.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.SolutionSetDouble">
            <summary>Définit le shim de BrentSearch.set_Solution(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.ToleranceGet">
            <summary>Définit le shim de BrentSearch.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.ToleranceSetDouble">
            <summary>Définit le shim de BrentSearch.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.UpperBoundGet">
            <summary>Définit le shim de BrentSearch.get_UpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.UpperBoundSetDouble">
            <summary>Définit le shim de BrentSearch.set_UpperBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.ValueGet">
            <summary>Définit le shim de BrentSearch.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBrentSearch.ValueSetDouble">
            <summary>Définit le shim de BrentSearch.set_Value(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno">
            <summary>Type shim de Accord.Math.Optimization.BroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.#ctor(Accord.Math.Optimization.BroydenFletcherGoldfarbShanno)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.CorrectionsGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Corrections()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.CorrectionsSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Corrections(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.DeltaGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Delta()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.DeltaSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Delta(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.EpsilonGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Epsilon()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.EpsilonSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Epsilon(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.FunctionToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_FunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.FunctionToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_FunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.GradientToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_GradientTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.GradientToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_GradientTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.LineSearchGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_LineSearch()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.LineSearchSetLineSearch">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_LineSearch(LineSearch value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxLineSearchGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxLineSearch()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxLineSearchSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxLineSearch(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxStepGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxStep()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MaxStepSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxStep(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MinStepGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MinStep()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.MinStepSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MinStep(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.Optimize">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseCGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseC()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseCSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseC(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseEndGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseEnd()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseEndSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseEnd(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseStartGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseStart()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.OrthantwiseStartSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseStart(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.ParameterToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_ParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.ParameterToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_ParameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.PastGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Past()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.PastSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Past(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.StatusGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.StatusSetBroydenFletcherGoldfarbShannoStatus">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Status(BroydenFletcherGoldfarbShannoStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.WolfeGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Wolfe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.AllInstances.WolfeSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Wolfe(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IGradientOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.BroydenFletcherGoldfarbShannoStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ConstructorInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.BroydenFletcherGoldfarbShanno(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.BroydenFletcherGoldfarbShanno(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.BroydenFletcherGoldfarbShanno(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.CorrectionsGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Corrections()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.CorrectionsSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Corrections(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.DeltaGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Delta()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.DeltaSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Delta(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.EpsilonGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Epsilon()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.EpsilonSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Epsilon(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.FunctionToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_FunctionTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.FunctionToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_FunctionTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.GradientToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_GradientTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.GradientToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_GradientTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.LineSearchGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_LineSearch()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.LineSearchSetLineSearch">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_LineSearch(LineSearch value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxIterationsGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxIterationsSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxLineSearchGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxLineSearch()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxLineSearchSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxLineSearch(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxStepGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MaxStep()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MaxStepSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MaxStep(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MinStepGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_MinStep()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.MinStepSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_MinStep(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.Optimize">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseCGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseC()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseCSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseC(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseEndGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseEnd()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseEndSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseEnd(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseStartGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_OrthantwiseStart()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.OrthantwiseStartSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_OrthantwiseStart(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ParameterToleranceGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_ParameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ParameterToleranceSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_ParameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.PastGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Past()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.PastSetInt32">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Past(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.StatusGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.StatusSetBroydenFletcherGoldfarbShannoStatus">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Status(BroydenFletcherGoldfarbShannoStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.WolfeGet">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.get_Wolfe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimBroydenFletcherGoldfarbShanno.WolfeSetDouble">
            <summary>Définit le shim de BroydenFletcherGoldfarbShanno.set_Wolfe(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimCobyla">
            <summary>Type shim de Accord.Math.Optimization.Cobyla</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.#ctor(Accord.Math.Optimization.Cobyla)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.IterationsGet">
            <summary>Définit le shim de Cobyla.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de Cobyla.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de Cobyla.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.Optimize">
            <summary>Définit le shim de Cobyla.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.StatusGet">
            <summary>Définit le shim de Cobyla.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.StatusSetCobylaStatus">
            <summary>Définit le shim de Cobyla.set_Status(CobylaStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.AllInstances.cobyla">
            <summary>Définit le shim de Cobyla.cobyla()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimCobyla.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.CobylaStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.ConstructorInt32">
            <summary>Définit le shim de Cobyla.Cobyla(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de Cobyla.Cobyla(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de Cobyla.Cobyla(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.ConstructorNonlinearObjectiveFunctionIEnumerableOfNonlinearConstraint">
            <summary>Définit le shim de Cobyla.Cobyla(NonlinearObjectiveFunction function, IEnumerable`1&lt;NonlinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.ConstructorNonlinearObjectiveFunctionNonlinearConstraintArray">
            <summary>Définit le shim de Cobyla.Cobyla(NonlinearObjectiveFunction function, NonlinearConstraint[] constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.IterationsGet">
            <summary>Définit le shim de Cobyla.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.MaxIterationsGet">
            <summary>Définit le shim de Cobyla.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.MaxIterationsSetInt32">
            <summary>Définit le shim de Cobyla.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.Optimize">
            <summary>Définit le shim de Cobyla.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.StatusGet">
            <summary>Définit le shim de Cobyla.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.StatusSetCobylaStatus">
            <summary>Définit le shim de Cobyla.set_Status(CobylaStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.cobyla">
            <summary>Définit le shim de Cobyla.cobyla()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimCobyla.trstlpInt32Int32DoubleMdArray2DoubleArrayDoubleDoubleArrayBooleanOut">
            <summary>Définit le shim de Cobyla.trstlp(Int32 n, Int32 m, Double[,] a, Double[] b, Double rho, Double[] dx, Boolean&amp; ifull)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimConjugateGradient">
            <summary>Type shim de Accord.Math.Optimization.ConjugateGradient</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.#ctor(Accord.Math.Optimization.ConjugateGradient)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.EvaluationsGet">
            <summary>Définit le shim de ConjugateGradient.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.IterationsGet">
            <summary>Définit le shim de ConjugateGradient.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de ConjugateGradient.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de ConjugateGradient.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.MethodGet">
            <summary>Définit le shim de ConjugateGradient.get_Method()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.MethodSetConjugateGradientMethod">
            <summary>Définit le shim de ConjugateGradient.set_Method(ConjugateGradientMethod value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.Optimize">
            <summary>Définit le shim de ConjugateGradient.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de ConjugateGradient.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de ConjugateGradient.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.SearchesGet">
            <summary>Définit le shim de ConjugateGradient.get_Searches()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.StatusGet">
            <summary>Définit le shim de ConjugateGradient.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.StatusSetConjugateGradientCode">
            <summary>Définit le shim de ConjugateGradient.set_Status(ConjugateGradientCode value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.ToleranceGet">
            <summary>Définit le shim de ConjugateGradient.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de ConjugateGradient.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.AllInstances.cvsmodDoubleRefDoubleArrayDoubleRefInt32RefInt32RefDoubleArrayDoubleRefDoubleRef">
            <summary>Définit le shim de ConjugateGradient.cvsmod(Double&amp; f, Double[] s, Double&amp; stp, Int32&amp; info, Int32&amp; nfev, Double[] wa, Double&amp; dginit, Double&amp; dgout)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.Bind(Accord.Math.Optimization.IGradientOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimConjugateGradient.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.ConjugateGradientCode})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ConstructorInt32">
            <summary>Définit le shim de ConjugateGradient.ConjugateGradient(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de ConjugateGradient.ConjugateGradient(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.EvaluationsGet">
            <summary>Définit le shim de ConjugateGradient.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.IterationsGet">
            <summary>Définit le shim de ConjugateGradient.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.MaxIterationsGet">
            <summary>Définit le shim de ConjugateGradient.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.MaxIterationsSetInt32">
            <summary>Définit le shim de ConjugateGradient.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.MethodGet">
            <summary>Définit le shim de ConjugateGradient.get_Method()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.MethodSetConjugateGradientMethod">
            <summary>Définit le shim de ConjugateGradient.set_Method(ConjugateGradientMethod value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.Optimize">
            <summary>Définit le shim de ConjugateGradient.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ProgressAddEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de ConjugateGradient.add_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ProgressRemoveEventHandlerOfOptimizationProgressEventArgs">
            <summary>Définit le shim de ConjugateGradient.remove_Progress(EventHandler`1&lt;OptimizationProgressEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.SearchesGet">
            <summary>Définit le shim de ConjugateGradient.get_Searches()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.StatusGet">
            <summary>Définit le shim de ConjugateGradient.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.StatusSetConjugateGradientCode">
            <summary>Définit le shim de ConjugateGradient.set_Status(ConjugateGradientCode value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ToleranceGet">
            <summary>Définit le shim de ConjugateGradient.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimConjugateGradient.ToleranceSetDouble">
            <summary>Définit le shim de ConjugateGradient.set_Tolerance(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization">
            <summary>Type shim de Accord.Math.Optimization.FanChenLinQuadraticOptimization</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.#ctor(Accord.Math.Optimization.FanChenLinQuadraticOptimization)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.Maximize">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.Minimize">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.RhoGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Rho()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.ShrinkingGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Shrinking()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.ShrinkingSetBoolean">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Shrinking(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.SolutionGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.SolutionSetDoubleArray">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.ToleranceGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.UpperBoundsGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.ValueGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.be_shrunkInt32DoubleDouble">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.be_shrunk(Int32 i, Double Gmax1, Double Gmax2)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.calculate_rho">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.calculate_rho()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.do_shrinking">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.do_shrinking()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.initializeInt32FuncOfInt32Int32DoubleDoubleArrayInt32Array">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.initialize(Int32 numberOfVariables, Func`3&lt;Int32,Int32,Double&gt; Q, Double[] p, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.is_freeInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_free(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.is_lower_boundInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_lower_bound(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.is_upper_boundInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_upper_bound(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.reconstruct_gradient">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.reconstruct_gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.rowInt32Int32DoubleArray">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.row(Int32 i, Int32 length, Double[] row)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.select_working_setInt32RefInt32Ref">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.select_working_set(Int32&amp; out_i, Int32&amp; out_j)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.swap_indexInt32Int32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.swap_index(Int32 i, Int32 j)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.AllInstances.update_alpha_statusInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.update_alpha_status(Int32 i)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ConstructorInt32FuncOfInt32Int32Double">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.FanChenLinQuadraticOptimization(Int32 numberOfVariables, Func`3&lt;Int32,Int32,Double&gt; Q)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ConstructorInt32FuncOfInt32Int32DoubleDoubleArrayInt32Array">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.FanChenLinQuadraticOptimization(Int32 numberOfVariables, Func`3&lt;Int32,Int32,Double&gt; Q, Double[] p, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.Maximize">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.Minimize">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.NumberOfVariablesGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.RhoGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Rho()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ShrinkingGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Shrinking()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ShrinkingSetBoolean">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Shrinking(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.SolutionGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.SolutionSetDoubleArray">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ToleranceGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ToleranceSetDouble">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.UpperBoundsGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.ValueGet">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.be_shrunkInt32DoubleDouble">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.be_shrunk(Int32 i, Double Gmax1, Double Gmax2)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.calculate_rho">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.calculate_rho()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.do_shrinking">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.do_shrinking()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.initializeInt32FuncOfInt32Int32DoubleDoubleArrayInt32Array">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.initialize(Int32 numberOfVariables, Func`3&lt;Int32,Int32,Double&gt; Q, Double[] p, Int32[] y)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.is_freeInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_free(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.is_lower_boundInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_lower_bound(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.is_upper_boundInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.is_upper_bound(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.reconstruct_gradient">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.reconstruct_gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.rowInt32Int32DoubleArray">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.row(Int32 i, Int32 length, Double[] row)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.select_working_setInt32RefInt32Ref">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.select_working_set(Int32&amp; out_i, Int32&amp; out_j)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.swapOf1M0RefM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefRefAction{``0,``0})">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.swap(!!0&amp; a, !!0&amp; b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.swap_indexInt32Int32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.swap_index(Int32 i, Int32 j)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimFanChenLinQuadraticOptimization.update_alpha_statusInt32">
            <summary>Définit le shim de FanChenLinQuadraticOptimization.update_alpha_status(Int32 i)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimGaussNewton">
            <summary>Type shim de Accord.Math.Optimization.GaussNewton</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGaussNewton.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGaussNewton.#ctor(Accord.Math.Optimization.GaussNewton)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.ComputeErrorDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de GaussNewton.ComputeError(Double[][] input, Double[] output)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.DeltasGet">
            <summary>Définit le shim de GaussNewton.get_Deltas()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.FunctionGet">
            <summary>Définit le shim de GaussNewton.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.FunctionSetLeastSquaresFunction">
            <summary>Définit le shim de GaussNewton.set_Function(LeastSquaresFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.GradientGet">
            <summary>Définit le shim de GaussNewton.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.GradientSetLeastSquaresGradientFunction">
            <summary>Définit le shim de GaussNewton.set_Gradient(LeastSquaresGradientFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.HessianGet">
            <summary>Définit le shim de GaussNewton.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.JacobianGet">
            <summary>Définit le shim de GaussNewton.get_Jacobian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.MinimizeDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de GaussNewton.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de GaussNewton.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.ResidualsGet">
            <summary>Définit le shim de GaussNewton.get_Residuals()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.SolutionGet">
            <summary>Définit le shim de GaussNewton.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.SolutionSetDoubleArray">
            <summary>Définit le shim de GaussNewton.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.AllInstances.StandardErrorsGet">
            <summary>Définit le shim de GaussNewton.get_StandardErrors()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGaussNewton.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGaussNewton.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGaussNewton.Bind(Accord.Math.Optimization.ILeastSquaresMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.ComputeErrorDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de GaussNewton.ComputeError(Double[][] input, Double[] output)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.ConstructorInt32">
            <summary>Définit le shim de GaussNewton.GaussNewton(Int32 parameters)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.DeltasGet">
            <summary>Définit le shim de GaussNewton.get_Deltas()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.FunctionGet">
            <summary>Définit le shim de GaussNewton.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.FunctionSetLeastSquaresFunction">
            <summary>Définit le shim de GaussNewton.set_Function(LeastSquaresFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.GradientGet">
            <summary>Définit le shim de GaussNewton.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.GradientSetLeastSquaresGradientFunction">
            <summary>Définit le shim de GaussNewton.set_Gradient(LeastSquaresGradientFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.HessianGet">
            <summary>Définit le shim de GaussNewton.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.JacobianGet">
            <summary>Définit le shim de GaussNewton.get_Jacobian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.MinimizeDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de GaussNewton.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.NumberOfVariablesGet">
            <summary>Définit le shim de GaussNewton.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.ResidualsGet">
            <summary>Définit le shim de GaussNewton.get_Residuals()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.SolutionGet">
            <summary>Définit le shim de GaussNewton.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.SolutionSetDoubleArray">
            <summary>Définit le shim de GaussNewton.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGaussNewton.StandardErrorsGet">
            <summary>Définit le shim de GaussNewton.get_StandardErrors()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani">
            <summary>Type shim de Accord.Math.Optimization.GoldfarbIdnani</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.#ctor(Accord.Math.Optimization.GoldfarbIdnani)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ActiveConstraintsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ActiveConstraints()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ActiveConstraintsSetInt32Array">
            <summary>Définit le shim de GoldfarbIdnani.set_ActiveConstraints(Int32[] value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.ActiveConstraintsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ActiveConstraints()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.ActiveConstraintsSetInt32Array">
            <summary>Définit le shim de GoldfarbIdnani.set_ActiveConstraints(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.ConstraintMatrixGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.ConstraintTolerancesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintTolerances()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.ConstraintValuesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintValues()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.DeletionsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Deletions()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.DeletionsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_Deletions(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.IterationsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.LagrangianGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Lagrangian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.LagrangianSetDoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.set_Lagrangian(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.LinearTermsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.Maximize">
            <summary>Définit le shim de GoldfarbIdnani.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.Minimize">
            <summary>Définit le shim de GoldfarbIdnani.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.NumberOfConstraintsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_NumberOfConstraints()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.NumberOfConstraintsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_NumberOfConstraints(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.NumberOfEqualitiesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_NumberOfEqualities()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.NumberOfEqualitiesSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_NumberOfEqualities(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.Optimize">
            <summary>Définit le shim de GoldfarbIdnani.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.QuadraticTermsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.StatusGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.StatusSetGoldfarbIdnaniStatus">
            <summary>Définit le shim de GoldfarbIdnani.set_Status(GoldfarbIdnaniStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.dpofaDoubleMdArray2">
            <summary>Définit le shim de GoldfarbIdnani.dpofa(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.dporiDoubleMdArray2">
            <summary>Définit le shim de GoldfarbIdnani.dpori(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.dposlDoubleMdArray2DoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.dposl(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.initializeInt32DoubleMdArray2DoubleArrayDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de GoldfarbIdnani.initialize(Int32 numberOfVariables, Double[,] hessian, Double[] linearTerms, Double[,] constraintMatrix, Double[] b, Int32 numberOfEqualities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.minimizeDoubleMdArray2DoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.minimize(Double[,] D, Double[] d)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.AllInstances.qpgen2DoubleMdArray2DoubleArrayInt32ArrayInt32OutInt32Ref">
            <summary>Définit le shim de GoldfarbIdnani.qpgen2(Double[,] dmat, Double[] dvec, Int32[] iact, Int32&amp; nact, Int32&amp; ierr)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.GoldfarbIdnaniStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstraintMatrixGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstraintTolerancesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintTolerances()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstraintValuesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_ConstraintValues()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstructorDoubleMdArray2DoubleArrayDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de GoldfarbIdnani.GoldfarbIdnani(Double[,] quadratic, Double[] linear, Double[,] constraintMatrix, Double[] constraintValues, Int32 numberOfEqualities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstructorQuadraticObjectiveFunctionDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de GoldfarbIdnani.GoldfarbIdnani(QuadraticObjectiveFunction function, Double[,] constraintMatrix, Double[] constraintValues, Int32 numberOfEqualities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstructorQuadraticObjectiveFunctionIEnumerableOfLinearConstraint">
            <summary>Définit le shim de GoldfarbIdnani.GoldfarbIdnani(QuadraticObjectiveFunction function, IEnumerable`1&lt;LinearConstraint&gt; constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.ConstructorQuadraticObjectiveFunctionLinearConstraintCollection">
            <summary>Définit le shim de GoldfarbIdnani.GoldfarbIdnani(QuadraticObjectiveFunction function, LinearConstraintCollection constraints)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.DeletionsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Deletions()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.DeletionsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_Deletions(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.IterationsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.IterationsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.LagrangianGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Lagrangian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.LagrangianSetDoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.set_Lagrangian(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.LinearTermsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.MaxIterationsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.MaxIterationsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Maximize">
            <summary>Définit le shim de GoldfarbIdnani.Maximize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Minimize">
            <summary>Définit le shim de GoldfarbIdnani.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.NumberOfConstraintsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_NumberOfConstraints()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.NumberOfConstraintsSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_NumberOfConstraints(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.NumberOfEqualitiesGet">
            <summary>Définit le shim de GoldfarbIdnani.get_NumberOfEqualities()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.NumberOfEqualitiesSetInt32">
            <summary>Définit le shim de GoldfarbIdnani.set_NumberOfEqualities(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.Optimize">
            <summary>Définit le shim de GoldfarbIdnani.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.QuadraticTermsGet">
            <summary>Définit le shim de GoldfarbIdnani.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.StatusGet">
            <summary>Définit le shim de GoldfarbIdnani.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.StatusSetGoldfarbIdnaniStatus">
            <summary>Définit le shim de GoldfarbIdnani.set_Status(GoldfarbIdnaniStatus value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.dpofaDoubleMdArray2">
            <summary>Définit le shim de GoldfarbIdnani.dpofa(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.dporiDoubleMdArray2">
            <summary>Définit le shim de GoldfarbIdnani.dpori(Double[,] a)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.dposlDoubleMdArray2DoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.dposl(Double[,] a, Double[] b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.initializeInt32DoubleMdArray2DoubleArrayDoubleMdArray2DoubleArrayInt32">
            <summary>Définit le shim de GoldfarbIdnani.initialize(Int32 numberOfVariables, Double[,] hessian, Double[] linearTerms, Double[,] constraintMatrix, Double[] b, Int32 numberOfEqualities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimGoldfarbIdnani.minimizeDoubleMdArray2DoubleArray">
            <summary>Définit le shim de GoldfarbIdnani.minimize(Double[,] D, Double[] d)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt">
            <summary>Type shim de Accord.Math.Optimization.LevenbergMarquardt</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.#ctor(Accord.Math.Optimization.LevenbergMarquardt)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AdjustmentGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Adjustment()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AdjustmentSetDouble">
            <summary>Définit le shim de LevenbergMarquardt.set_Adjustment(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.AdjustmentGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Adjustment()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.AdjustmentSetDouble">
            <summary>Définit le shim de LevenbergMarquardt.set_Adjustment(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.BlocksGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Blocks()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.BlocksSetInt32">
            <summary>Définit le shim de LevenbergMarquardt.set_Blocks(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.ComputeErrorDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.ComputeError(Double[][] input, Double[] output)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.FunctionGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.FunctionSetLeastSquaresFunction">
            <summary>Définit le shim de LevenbergMarquardt.set_Function(LeastSquaresFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.GradientGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.GradientSetLeastSquaresGradientFunction">
            <summary>Définit le shim de LevenbergMarquardt.set_Gradient(LeastSquaresGradientFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.HessianGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.LearningRateGet">
            <summary>Définit le shim de LevenbergMarquardt.get_LearningRate()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.LearningRateSetDouble">
            <summary>Définit le shim de LevenbergMarquardt.set_LearningRate(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.MinimizeDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de LevenbergMarquardt.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.SolutionGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.SolutionSetDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.StandardErrorsGet">
            <summary>Définit le shim de LevenbergMarquardt.get_StandardErrors()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances._Minimizeb__0Int32">
            <summary>Définit le shim de LevenbergMarquardt.&lt;Minimize&gt;b__0(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.computeErrorsDoubleArrayArrayDoubleArrayInt32Array">
            <summary>Définit le shim de LevenbergMarquardt.computeErrors(Double[][] input, Double[] output, Int32[] block)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.AllInstances.computeJacobianDoubleArrayArrayInt32Array">
            <summary>Définit le shim de LevenbergMarquardt.computeJacobian(Double[][] input, Int32[] block)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.Bind(Accord.Math.Optimization.ILeastSquaresMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.BlocksGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Blocks()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.BlocksSetInt32">
            <summary>Définit le shim de LevenbergMarquardt.set_Blocks(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.ComputeErrorDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.ComputeError(Double[][] input, Double[] output)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.ConstructorInt32">
            <summary>Définit le shim de LevenbergMarquardt.LevenbergMarquardt(Int32 parameters)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.FunctionGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.FunctionSetLeastSquaresFunction">
            <summary>Définit le shim de LevenbergMarquardt.set_Function(LeastSquaresFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.GradientGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.GradientSetLeastSquaresGradientFunction">
            <summary>Définit le shim de LevenbergMarquardt.set_Gradient(LeastSquaresGradientFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.HessianGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.LearningRateGet">
            <summary>Définit le shim de LevenbergMarquardt.get_LearningRate()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.LearningRateSetDouble">
            <summary>Définit le shim de LevenbergMarquardt.set_LearningRate(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.MinimizeDoubleArrayArrayDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.NumberOfVariablesGet">
            <summary>Définit le shim de LevenbergMarquardt.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.SolutionGet">
            <summary>Définit le shim de LevenbergMarquardt.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.SolutionSetDoubleArray">
            <summary>Définit le shim de LevenbergMarquardt.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.StandardErrorsGet">
            <summary>Définit le shim de LevenbergMarquardt.get_StandardErrors()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt._Minimizeb__0Int32">
            <summary>Définit le shim de LevenbergMarquardt.&lt;Minimize&gt;b__0(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.computeErrorsDoubleArrayArrayDoubleArrayInt32Array">
            <summary>Définit le shim de LevenbergMarquardt.computeErrors(Double[][] input, Double[] output, Int32[] block)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLevenbergMarquardt.computeJacobianDoubleArrayArrayInt32Array">
            <summary>Définit le shim de LevenbergMarquardt.computeJacobian(Double[][] input, Int32[] block)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException">
            <summary>Type shim de Accord.Math.Optimization.LineSearchFailedException</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.#ctor(Accord.Math.Optimization.LineSearchFailedException)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le shim de LineSearchFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.AllInstances.InformationGet">
            <summary>Définit le shim de LineSearchFailedException.get_Information()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.Constructor">
            <summary>Définit le shim de LineSearchFailedException.LineSearchFailedException()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.ConstructorInt32String">
            <summary>Définit le shim de LineSearchFailedException.LineSearchFailedException(Int32 info, String message)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.ConstructorSerializationInfoStreamingContext">
            <summary>Définit le shim de LineSearchFailedException.LineSearchFailedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.ConstructorString">
            <summary>Définit le shim de LineSearchFailedException.LineSearchFailedException(String message)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.ConstructorStringException">
            <summary>Définit le shim de LineSearchFailedException.LineSearchFailedException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le shim de LineSearchFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLineSearchFailedException.InformationGet">
            <summary>Définit le shim de LineSearchFailedException.get_Information()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLinearConstraint">
            <summary>Type shim de Accord.Math.Optimization.LinearConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraint.#ctor(Accord.Math.Optimization.LinearConstraint)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.CombinedAsGet">
            <summary>Définit le shim de LinearConstraint.get_CombinedAs()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.CombinedAsSetDoubleArray">
            <summary>Définit le shim de LinearConstraint.set_CombinedAs(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.FunctionGet">
            <summary>Définit le shim de LinearConstraint.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de LinearConstraint.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.GetViolationDoubleArray">
            <summary>Définit le shim de LinearConstraint.GetViolation(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.GradientGet">
            <summary>Définit le shim de LinearConstraint.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de LinearConstraint.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.IsViolatedDoubleArray">
            <summary>Définit le shim de LinearConstraint.IsViolated(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de LinearConstraint.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de LinearConstraint.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ShouldBeGet">
            <summary>Définit le shim de LinearConstraint.get_ShouldBe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ShouldBeSetConstraintType">
            <summary>Définit le shim de LinearConstraint.set_ShouldBe(ConstraintType value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ToleranceGet">
            <summary>Définit le shim de LinearConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de LinearConstraint.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ValueGet">
            <summary>Définit le shim de LinearConstraint.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.ValueSetDouble">
            <summary>Définit le shim de LinearConstraint.set_Value(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.VariablesAtIndicesGet">
            <summary>Définit le shim de LinearConstraint.get_VariablesAtIndices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.VariablesAtIndicesSetInt32Array">
            <summary>Définit le shim de LinearConstraint.set_VariablesAtIndices(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.computeDoubleArray">
            <summary>Définit le shim de LinearConstraint.compute(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.gradientDoubleArray">
            <summary>Définit le shim de LinearConstraint.gradient(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.parseExpressionIObjectiveFunctionExpressionOfFuncOfBoolean">
            <summary>Définit le shim de LinearConstraint.parseExpression(IObjectiveFunction function, Expression`1&lt;Func`1&lt;Boolean&gt;&gt; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.AllInstances.parseStringIObjectiveFunctionStringCultureInfo">
            <summary>Définit le shim de LinearConstraint.parseString(IObjectiveFunction function, String constraint, CultureInfo culture)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.CombinedAsGet">
            <summary>Définit le shim de LinearConstraint.get_CombinedAs()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.CombinedAsSetDoubleArray">
            <summary>Définit le shim de LinearConstraint.set_CombinedAs(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ConstructorDoubleArray">
            <summary>Définit le shim de LinearConstraint.LinearConstraint(Double[] coefficients)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ConstructorIObjectiveFunctionExpressionOfFuncOfBoolean">
            <summary>Définit le shim de LinearConstraint.LinearConstraint(IObjectiveFunction function, Expression`1&lt;Func`1&lt;Boolean&gt;&gt; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ConstructorIObjectiveFunctionString">
            <summary>Définit le shim de LinearConstraint.LinearConstraint(IObjectiveFunction function, String constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ConstructorIObjectiveFunctionStringCultureInfo">
            <summary>Définit le shim de LinearConstraint.LinearConstraint(IObjectiveFunction function, String constraint, CultureInfo format)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ConstructorInt32">
            <summary>Définit le shim de LinearConstraint.LinearConstraint(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.FunctionGet">
            <summary>Définit le shim de LinearConstraint.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de LinearConstraint.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.GetViolationDoubleArray">
            <summary>Définit le shim de LinearConstraint.GetViolation(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.GradientGet">
            <summary>Définit le shim de LinearConstraint.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de LinearConstraint.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.IsViolatedDoubleArray">
            <summary>Définit le shim de LinearConstraint.IsViolated(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.NumberOfVariablesGet">
            <summary>Définit le shim de LinearConstraint.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.NumberOfVariablesSetInt32">
            <summary>Définit le shim de LinearConstraint.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ShouldBeGet">
            <summary>Définit le shim de LinearConstraint.get_ShouldBe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ShouldBeSetConstraintType">
            <summary>Définit le shim de LinearConstraint.set_ShouldBe(ConstraintType value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ToleranceGet">
            <summary>Définit le shim de LinearConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ToleranceSetDouble">
            <summary>Définit le shim de LinearConstraint.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.TryParseStringCultureInfoIObjectiveFunctionLinearConstraintOut">
            <summary>Définit le shim de LinearConstraint.TryParse(String str, CultureInfo culture, IObjectiveFunction function, LinearConstraint&amp; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.TryParseStringIObjectiveFunctionLinearConstraintOut">
            <summary>Définit le shim de LinearConstraint.TryParse(String str, IObjectiveFunction function, LinearConstraint&amp; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ValueGet">
            <summary>Définit le shim de LinearConstraint.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.ValueSetDouble">
            <summary>Définit le shim de LinearConstraint.set_Value(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.VariablesAtIndicesGet">
            <summary>Définit le shim de LinearConstraint.get_VariablesAtIndices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.VariablesAtIndicesSetInt32Array">
            <summary>Définit le shim de LinearConstraint.set_VariablesAtIndices(Int32[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.computeDoubleArray">
            <summary>Définit le shim de LinearConstraint.compute(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.gradientDoubleArray">
            <summary>Définit le shim de LinearConstraint.gradient(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.parseDictionaryOfStringDoubleExpressionDoubleRef">
            <summary>Définit le shim de LinearConstraint.parse(Dictionary`2&lt;String,Double&gt; terms, Expression expr, Double&amp; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.parseExpressionIObjectiveFunctionExpressionOfFuncOfBoolean">
            <summary>Définit le shim de LinearConstraint.parseExpression(IObjectiveFunction function, Expression`1&lt;Func`1&lt;Boolean&gt;&gt; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraint.parseStringIObjectiveFunctionStringCultureInfo">
            <summary>Définit le shim de LinearConstraint.parseString(IObjectiveFunction function, String constraint, CultureInfo culture)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection">
            <summary>Type shim de Accord.Math.Optimization.LinearConstraintCollection</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.#ctor(Accord.Math.Optimization.LinearConstraintCollection)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.AllInstances.CreateMatrixInt32DoubleArrayOutDoubleArrayOutInt32Out">
            <summary>Définit le shim de LinearConstraintCollection.CreateMatrix(Int32 numberOfVariables, Double[]&amp; b, Double[]&amp; tolerances, Int32&amp; equalities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.AllInstances.CreateMatrixInt32DoubleArrayOutInt32Out">
            <summary>Définit le shim de LinearConstraintCollection.CreateMatrix(Int32 numberOfVariables, Double[]&amp; b, Int32&amp; equalities)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.ICollection)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.IEnumerable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.IList)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.Generic.ICollection{Accord.Math.Optimization.LinearConstraint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.Generic.IEnumerable{Accord.Math.Optimization.LinearConstraint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.Generic.IList{Accord.Math.Optimization.LinearConstraint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Accord.Math.Optimization.LinearConstraint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Bind(System.Collections.Generic.IReadOnlyList{Accord.Math.Optimization.LinearConstraint})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.Constructor">
            <summary>Définit le shim de LinearConstraintCollection.LinearConstraintCollection()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.ConstructorIEnumerableOfLinearConstraint">
            <summary>Définit le shim de LinearConstraintCollection.LinearConstraintCollection(IEnumerable`1&lt;LinearConstraint&gt; list)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.ConstructorIListOfLinearConstraint">
            <summary>Définit le shim de LinearConstraintCollection.LinearConstraintCollection(IList`1&lt;LinearConstraint&gt; list)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection.CreateMatrixInt32DoubleArrayOutInt32Out">
            <summary>Définit le shim de LinearConstraintCollection.CreateMatrix(Int32 numberOfVariables, Double[]&amp; b, Int32&amp; equalities)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimLinearConstraintCollection._CreateMatrixb__0LinearConstraintLinearConstraint">
            <summary>Définit le shim de LinearConstraintCollection.&lt;CreateMatrix&gt;b__0(LinearConstraint c1, LinearConstraint c2)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNelderMead">
            <summary>Type shim de Accord.Math.Optimization.NelderMead</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.#ctor(Accord.Math.Optimization.NelderMead)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.CapacityGet">
            <summary>Définit le shim de NelderMead.get_Capacity()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.ConvergenceGet">
            <summary>Définit le shim de NelderMead.get_Convergence()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.ConvergenceSetGeneralConvergence">
            <summary>Définit le shim de NelderMead.set_Convergence(GeneralConvergence value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.DiameterToleranceGet">
            <summary>Définit le shim de NelderMead.get_DiameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.DiameterToleranceSetDouble">
            <summary>Définit le shim de NelderMead.set_DiameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.DifferenceGet">
            <summary>Définit le shim de NelderMead.get_Difference()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.LowerBoundsGet">
            <summary>Définit le shim de NelderMead.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.MaximumValueGet">
            <summary>Définit le shim de NelderMead.get_MaximumValue()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.MaximumValueSetDouble">
            <summary>Définit le shim de NelderMead.set_MaximumValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.MinimizeDouble">
            <summary>Définit le shim de NelderMead.Minimize(Double fmin)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de NelderMead.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NelderMead.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.Optimize">
            <summary>Définit le shim de NelderMead.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.StatusGet">
            <summary>Définit le shim de NelderMead.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.StepSizeGet">
            <summary>Définit le shim de NelderMead.get_StepSize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.UpperBoundsGet">
            <summary>Définit le shim de NelderMead.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.checkevalDoubleArrayDouble">
            <summary>Définit le shim de NelderMead.checkeval(Double[] xc, Double fc)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.initInt32">
            <summary>Définit le shim de NelderMead.init(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.AllInstances.minimize">
            <summary>Définit le shim de NelderMead.minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNelderMead.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.NelderMeadStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.CapacityGet">
            <summary>Définit le shim de NelderMead.get_Capacity()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.ConstructorInt32">
            <summary>Définit le shim de NelderMead.NelderMead(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de NelderMead.NelderMead(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de NelderMead.NelderMead(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.ConvergenceGet">
            <summary>Définit le shim de NelderMead.get_Convergence()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.ConvergenceSetGeneralConvergence">
            <summary>Définit le shim de NelderMead.set_Convergence(GeneralConvergence value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.DiameterToleranceGet">
            <summary>Définit le shim de NelderMead.get_DiameterTolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.DiameterToleranceSetDouble">
            <summary>Définit le shim de NelderMead.set_DiameterTolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.DifferenceGet">
            <summary>Définit le shim de NelderMead.get_Difference()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.LowerBoundsGet">
            <summary>Définit le shim de NelderMead.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.MaximumValueGet">
            <summary>Définit le shim de NelderMead.get_MaximumValue()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.MaximumValueSetDouble">
            <summary>Définit le shim de NelderMead.set_MaximumValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.MinimizeDouble">
            <summary>Définit le shim de NelderMead.Minimize(Double fmin)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.NumberOfVariablesGet">
            <summary>Définit le shim de NelderMead.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NelderMead.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.Optimize">
            <summary>Définit le shim de NelderMead.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.StatusGet">
            <summary>Définit le shim de NelderMead.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.StepSizeGet">
            <summary>Définit le shim de NelderMead.get_StepSize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.UpperBoundsGet">
            <summary>Définit le shim de NelderMead.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.checkevalDoubleArrayDouble">
            <summary>Définit le shim de NelderMead.checkeval(Double[] xc, Double fc)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.closeDoubleDouble">
            <summary>Définit le shim de NelderMead.close(Double a, Double b)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.initInt32">
            <summary>Définit le shim de NelderMead.init(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.minimize">
            <summary>Définit le shim de NelderMead.minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.nlopt_stop_evalsGeneralConvergence">
            <summary>Définit le shim de NelderMead.nlopt_stop_evals(GeneralConvergence stop)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.nlopt_stop_forcedGeneralConvergence">
            <summary>Définit le shim de NelderMead.nlopt_stop_forced(GeneralConvergence stop)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.nlopt_stop_ftolGeneralConvergenceDoubleDouble">
            <summary>Définit le shim de NelderMead.nlopt_stop_ftol(GeneralConvergence stop, Double f, Double oldf)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.nlopt_stop_timeGeneralConvergence">
            <summary>Définit le shim de NelderMead.nlopt_stop_time(GeneralConvergence stop)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.nlopt_stop_xtolGeneralConvergenceDoubleArrayDoubleArrayInt32">
            <summary>Définit le shim de NelderMead.nlopt_stop_xtol(GeneralConvergence stop, Double[] x, Double[] oldx, Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.reflectptInt32DoubleArrayDoubleArrayDoubleDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de NelderMead.reflectpt(Int32 n, Double[] xnew, Double[] c, Double scale, Double[] xold, Double[] lb, Double[] ub)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNelderMead.relstopDoubleDoubleDoubleDouble">
            <summary>Définit le shim de NelderMead.relstop(Double old, Double n, Double reltol, Double abstol)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint">
            <summary>Type shim de Accord.Math.Optimization.NonlinearConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.#ctor(Accord.Math.Optimization.NonlinearConstraint)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.CreateInt32FuncOfDoubleArrayDoubleConstraintTypeDoubleFuncOfDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.Create(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value, Func`2&lt;Double[],Double[]&gt; gradient, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.FunctionGet">
            <summary>Définit le shim de NonlinearConstraint.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.GetViolationDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.GetViolation(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.GradientGet">
            <summary>Définit le shim de NonlinearConstraint.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.IsViolatedDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.IsViolated(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de NonlinearConstraint.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NonlinearConstraint.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ShouldBeGet">
            <summary>Définit le shim de NonlinearConstraint.get_ShouldBe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ShouldBeSetConstraintType">
            <summary>Définit le shim de NonlinearConstraint.set_ShouldBe(ConstraintType value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ToString01">
            <summary>Définit le shim de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ToStringStringIFormatProvider">
            <summary>Définit le shim de NonlinearConstraint.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ToleranceGet">
            <summary>Définit le shim de NonlinearConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ValueGet">
            <summary>Définit le shim de NonlinearConstraint.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.AllInstances.ValueSetDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Value(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.Bind(System.IFormattable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.Constructor">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionExpressionOfFuncOfDoubleArrayBoolean">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Expression`1&lt;Func`2&lt;Double[],Boolean&gt;&gt; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionExpressionOfFuncOfDoubleConstraintTypeDoubleExpressionOfFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Expression`1&lt;Func`1&lt;Double&gt;&gt; function, ConstraintType shouldBe, Double value, Expression`1&lt;Func`1&lt;Double[]&gt;&gt; gradient, Double withinTolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionFuncOfDoubleArrayDoubleConstraintTypeDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionFuncOfDoubleArrayDoubleConstraintTypeDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionFuncOfDoubleArrayDoubleConstraintTypeDoubleFuncOfDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value, Func`2&lt;Double[],Double[]&gt; gradient, Double withinTolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorIObjectiveFunctionFuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(IObjectiveFunction objective, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorInt32ExpressionOfFuncOfDoubleArrayBoolean">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(Int32 numberOfVariables, Expression`1&lt;Func`2&lt;Double[],Boolean&gt;&gt; constraint)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorInt32FuncOfDoubleArrayDoubleConstraintTypeDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorInt32FuncOfDoubleArrayDoubleConstraintTypeDoubleFuncOfDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value, Func`2&lt;Double[],Double[]&gt; gradient, Double withinTolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArrayConstraintTypeDoubleDouble">
            <summary>Définit le shim de NonlinearConstraint.NonlinearConstraint(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient, ConstraintType shouldBe, Double value, Double withinTolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.CreateInt32FuncOfDoubleArrayDoubleConstraintTypeDoubleFuncOfDoubleArrayDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.Create(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, ConstraintType shouldBe, Double value, Func`2&lt;Double[],Double[]&gt; gradient, Double tolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.FunctionGet">
            <summary>Définit le shim de NonlinearConstraint.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.GetViolationDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.GetViolation(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.GradientGet">
            <summary>Définit le shim de NonlinearConstraint.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.IsViolatedDoubleArray">
            <summary>Définit le shim de NonlinearConstraint.IsViolated(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.NumberOfVariablesGet">
            <summary>Définit le shim de NonlinearConstraint.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NonlinearConstraint.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ShouldBeGet">
            <summary>Définit le shim de NonlinearConstraint.get_ShouldBe()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ShouldBeSetConstraintType">
            <summary>Définit le shim de NonlinearConstraint.set_ShouldBe(ConstraintType value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ToString">
            <summary>Définit le shim de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ToStringStringIFormatProvider">
            <summary>Définit le shim de NonlinearConstraint.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ToleranceGet">
            <summary>Définit le shim de NonlinearConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ToleranceSetDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ValueGet">
            <summary>Définit le shim de NonlinearConstraint.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.ValueSetDouble">
            <summary>Définit le shim de NonlinearConstraint.set_Value(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearConstraint.parseExpressionOfFuncOfDoubleArrayBooleanFuncOfDoubleArrayDoubleOutConstraintTypeOutDoubleOut">
            <summary>Définit le shim de NonlinearConstraint.parse(Expression`1&lt;Func`2&lt;Double[],Boolean&gt;&gt; constraint, Func`2&lt;Double[],Double&gt;&amp; function, ConstraintType&amp; shouldBe, Double&amp; value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction">
            <summary>Type shim de Accord.Math.Optimization.NonlinearObjectiveFunction</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.FunctionGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.GradientGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.IndicesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Indices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.InnerIndicesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_InnerIndices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.InnerVariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_InnerVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.NumberOfVariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.AllInstances.VariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Variables()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.Bind(Accord.Math.Optimization.IObjectiveFunction)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.CheckGradientFuncOfDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearObjectiveFunction.CheckGradient(Func`2&lt;Double[],Double[]&gt; value, Double[] probe)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.Constructor">
            <summary>Définit le shim de NonlinearObjectiveFunction.NonlinearObjectiveFunction()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.ConstructorExpressionOfFuncOfDoubleExpressionOfFuncOfDoubleArray">
            <summary>Définit le shim de NonlinearObjectiveFunction.NonlinearObjectiveFunction(Expression`1&lt;Func`1&lt;Double&gt;&gt; function, Expression`1&lt;Func`1&lt;Double[]&gt;&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearObjectiveFunction.NonlinearObjectiveFunction(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearObjectiveFunction.NonlinearObjectiveFunction(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.FunctionGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.GradientGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.IndicesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Indices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.InnerIndicesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_InnerIndices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.InnerVariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_InnerVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.NumberOfVariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.NumberOfVariablesSetInt32">
            <summary>Définit le shim de NonlinearObjectiveFunction.set_NumberOfVariables(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimNonlinearObjectiveFunction.VariablesGet">
            <summary>Définit le shim de NonlinearObjectiveFunction.get_Variables()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs">
            <summary>Type shim de Accord.Math.Optimization.OptimizationProgressEventArgs</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.#ctor(Accord.Math.Optimization.OptimizationProgressEventArgs)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.EvaluationsGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.EvaluationsSetInt32">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Evaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.FinishedGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Finished()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.FinishedSetBoolean">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Finished(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.GradientGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.GradientNormGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_GradientNorm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.GradientNormSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_GradientNorm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.GradientSetDoubleArray">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Gradient(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.IterationGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Iteration()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.IterationSetInt32">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Iteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.SolutionGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.SolutionNormGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_SolutionNorm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.SolutionNormSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_SolutionNorm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.SolutionSetDoubleArray">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.StepGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Step()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.StepSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Step(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.TagGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Tag()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.TagSetObject">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Tag(Object value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.ValueGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.AllInstances.ValueSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Value(Double value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.ConstructorInt32Int32DoubleArrayDoubleDoubleArrayDoubleDoubleDoubleBoolean">
            <summary>Définit le shim de OptimizationProgressEventArgs.OptimizationProgressEventArgs(Int32 iteration, Int32 evaluations, Double[] gradient, Double gnorm, Double[] solution, Double xnorm, Double value, Double stp, Boolean finished)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.EvaluationsGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Evaluations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.EvaluationsSetInt32">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Evaluations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.FinishedGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Finished()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.FinishedSetBoolean">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Finished(Boolean value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.GradientGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Gradient()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.GradientNormGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_GradientNorm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.GradientNormSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_GradientNorm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.GradientSetDoubleArray">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Gradient(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.IterationGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Iteration()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.IterationSetInt32">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Iteration(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.SolutionGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Solution()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.SolutionNormGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_SolutionNorm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.SolutionNormSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_SolutionNorm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.SolutionSetDoubleArray">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.StepGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Step()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.StepSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Step(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.TagGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Tag()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.TagSetObject">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Tag(Object value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.ValueGet">
            <summary>Définit le shim de OptimizationProgressEventArgs.get_Value()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimOptimizationProgressEventArgs.ValueSetDouble">
            <summary>Définit le shim de OptimizationProgressEventArgs.set_Value(Double value)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint">
            <summary>Type shim de Accord.Math.Optimization.QuadraticConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.#ctor(Accord.Math.Optimization.QuadraticConstraint)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.LinearTermsGet">
            <summary>Définit le shim de QuadraticConstraint.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.LinearTermsSetDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.set_LinearTerms(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.QuadraticTermsGet">
            <summary>Définit le shim de QuadraticConstraint.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.QuadraticTermsSetDoubleMdArray2">
            <summary>Définit le shim de QuadraticConstraint.set_QuadraticTerms(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.functionDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.function(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.AllInstances.gradientDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.gradient(Double[] x)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.Bind(System.IFormattable)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.ConstructorIObjectiveFunctionDoubleMdArray2DoubleArrayConstraintTypeDoubleDouble">
            <summary>Définit le shim de QuadraticConstraint.QuadraticConstraint(IObjectiveFunction objective, Double[,] quadraticTerms, Double[] linearTerms, ConstraintType shouldBe, Double value, Double withinTolerance)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.LinearTermsGet">
            <summary>Définit le shim de QuadraticConstraint.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.LinearTermsSetDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.set_LinearTerms(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.QuadraticTermsGet">
            <summary>Définit le shim de QuadraticConstraint.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.QuadraticTermsSetDoubleMdArray2">
            <summary>Définit le shim de QuadraticConstraint.set_QuadraticTerms(Double[,] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.functionDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.function(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticConstraint.gradientDoubleArray">
            <summary>Définit le shim de QuadraticConstraint.gradient(Double[] x)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction">
            <summary>Type shim de Accord.Math.Optimization.QuadraticObjectiveFunction</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.#ctor(Accord.Math.Optimization.QuadraticObjectiveFunction)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.ConstantTermGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_ConstantTerm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.ConstantTermSetDouble">
            <summary>Définit le shim de QuadraticObjectiveFunction.set_ConstantTerm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.LinearTermsGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.QuadraticTermsGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.ToString01">
            <summary>Définit le shim de QuadraticObjectiveFunction.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.createLinearTermsVector">
            <summary>Définit le shim de QuadraticObjectiveFunction.createLinearTermsVector()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.createQuadraticTermsMatrix">
            <summary>Définit le shim de QuadraticObjectiveFunction.createQuadraticTermsMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.functionDoubleArray">
            <summary>Définit le shim de QuadraticObjectiveFunction.function(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.gradientDoubleArray">
            <summary>Définit le shim de QuadraticObjectiveFunction.gradient(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.AllInstances.initializeDictionaryOfTupleOfStringStringDouble">
            <summary>Définit le shim de QuadraticObjectiveFunction.initialize(Dictionary`2&lt;Tuple`2&lt;String,String&gt;,Double&gt; terms)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.Bind(Accord.Math.Optimization.IObjectiveFunction)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstantTermGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_ConstantTerm()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstantTermSetDouble">
            <summary>Définit le shim de QuadraticObjectiveFunction.set_ConstantTerm(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstructorDoubleMdArray2DoubleArrayStringArray">
            <summary>Définit le shim de QuadraticObjectiveFunction.QuadraticObjectiveFunction(Double[,] quadraticTerms, Double[] linearTerms, String[] variables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstructorExpressionOfFuncOfDouble">
            <summary>Définit le shim de QuadraticObjectiveFunction.QuadraticObjectiveFunction(Expression`1&lt;Func`1&lt;Double&gt;&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstructorString">
            <summary>Définit le shim de QuadraticObjectiveFunction.QuadraticObjectiveFunction(String function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ConstructorStringCultureInfo">
            <summary>Définit le shim de QuadraticObjectiveFunction.QuadraticObjectiveFunction(String function, CultureInfo culture)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.LinearTermsGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_LinearTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.QuadraticTermsGet">
            <summary>Définit le shim de QuadraticObjectiveFunction.get_QuadraticTerms()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.ToString">
            <summary>Définit le shim de QuadraticObjectiveFunction.ToString()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.TryParseStringCultureInfoQuadraticObjectiveFunctionOut">
            <summary>Définit le shim de QuadraticObjectiveFunction.TryParse(String str, CultureInfo culture, QuadraticObjectiveFunction&amp; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.TryParseStringQuadraticObjectiveFunctionOut">
            <summary>Définit le shim de QuadraticObjectiveFunction.TryParse(String str, QuadraticObjectiveFunction&amp; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.addTupleDictionaryOfTupleOfStringStringDoubleDoubleStringString">
            <summary>Définit le shim de QuadraticObjectiveFunction.addTuple(Dictionary`2&lt;Tuple`2&lt;String,String&gt;,Double&gt; terms, Double v, String v1, String v2)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.createLinearTermsVector">
            <summary>Définit le shim de QuadraticObjectiveFunction.createLinearTermsVector()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.createQuadraticTermsMatrix">
            <summary>Définit le shim de QuadraticObjectiveFunction.createQuadraticTermsMatrix()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.functionDoubleArray">
            <summary>Définit le shim de QuadraticObjectiveFunction.function(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.gradientDoubleArray">
            <summary>Définit le shim de QuadraticObjectiveFunction.gradient(Double[] input)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.initializeDictionaryOfTupleOfStringStringDouble">
            <summary>Définit le shim de QuadraticObjectiveFunction.initialize(Dictionary`2&lt;Tuple`2&lt;String,String&gt;,Double&gt; terms)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.parseExpressionDictionaryOfTupleOfStringStringDoubleExpressionDoubleOutBoolean">
            <summary>Définit le shim de QuadraticObjectiveFunction.parseExpression(Dictionary`2&lt;Tuple`2&lt;String,String&gt;,Double&gt; terms, Expression expr, Double&amp; scalar, Boolean dontAdd)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimQuadraticObjectiveFunction.parseStringStringCultureInfo">
            <summary>Définit le shim de QuadraticObjectiveFunction.parseString(String f, CultureInfo culture)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation">
            <summary>Type shim de Accord.Math.Optimization.ResilientBackpropagation</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.#ctor(Accord.Math.Optimization.ResilientBackpropagation)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.DecreaseFactorGet">
            <summary>Définit le shim de ResilientBackpropagation.get_DecreaseFactor()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.DecreaseFactorSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_DecreaseFactor(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.IncreaseFactorGet">
            <summary>Définit le shim de ResilientBackpropagation.get_IncreaseFactor()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.IncreaseFactorSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_IncreaseFactor(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.IterationsGet">
            <summary>Définit le shim de ResilientBackpropagation.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.IterationsSetInt32">
            <summary>Définit le shim de ResilientBackpropagation.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.OnProgressChangedProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.OnProgressChanged(ProgressChangedEventArgs args)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.Optimize">
            <summary>Définit le shim de ResilientBackpropagation.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.ProgressChangedAddEventHandlerOfProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.add_ProgressChanged(EventHandler`1&lt;ProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.ProgressChangedRemoveEventHandlerOfProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.remove_ProgressChanged(EventHandler`1&lt;ProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.ResetDouble">
            <summary>Définit le shim de ResilientBackpropagation.Reset(Double rate)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.ToleranceGet">
            <summary>Définit le shim de ResilientBackpropagation.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.UpdateLowerBoundGet">
            <summary>Définit le shim de ResilientBackpropagation.get_UpdateLowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.UpdateLowerBoundSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_UpdateLowerBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.UpdateUpperBoundGet">
            <summary>Définit le shim de ResilientBackpropagation.get_UpdateUpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.UpdateUpperBoundSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_UpdateUpperBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.initInt32">
            <summary>Définit le shim de ResilientBackpropagation.init(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.AllInstances.runEpoch">
            <summary>Définit le shim de ResilientBackpropagation.runEpoch()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.Bind(Accord.Math.Optimization.IGradientOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ConstructorInt32">
            <summary>Définit le shim de ResilientBackpropagation.ResilientBackpropagation(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de ResilientBackpropagation.ResilientBackpropagation(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de ResilientBackpropagation.ResilientBackpropagation(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.DecreaseFactorGet">
            <summary>Définit le shim de ResilientBackpropagation.get_DecreaseFactor()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.DecreaseFactorSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_DecreaseFactor(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.IncreaseFactorGet">
            <summary>Définit le shim de ResilientBackpropagation.get_IncreaseFactor()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.IncreaseFactorSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_IncreaseFactor(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.IterationsGet">
            <summary>Définit le shim de ResilientBackpropagation.get_Iterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.IterationsSetInt32">
            <summary>Définit le shim de ResilientBackpropagation.set_Iterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.OnProgressChangedProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.OnProgressChanged(ProgressChangedEventArgs args)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.Optimize">
            <summary>Définit le shim de ResilientBackpropagation.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ProgressChangedAddEventHandlerOfProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.add_ProgressChanged(EventHandler`1&lt;ProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ProgressChangedRemoveEventHandlerOfProgressChangedEventArgs">
            <summary>Définit le shim de ResilientBackpropagation.remove_ProgressChanged(EventHandler`1&lt;ProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ResetDouble">
            <summary>Définit le shim de ResilientBackpropagation.Reset(Double rate)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ToleranceGet">
            <summary>Définit le shim de ResilientBackpropagation.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.ToleranceSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.UpdateLowerBoundGet">
            <summary>Définit le shim de ResilientBackpropagation.get_UpdateLowerBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.UpdateLowerBoundSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_UpdateLowerBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.UpdateUpperBoundGet">
            <summary>Définit le shim de ResilientBackpropagation.get_UpdateUpperBound()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.UpdateUpperBoundSetDouble">
            <summary>Définit le shim de ResilientBackpropagation.set_UpdateUpperBound(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.initInt32">
            <summary>Définit le shim de ResilientBackpropagation.init(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimResilientBackpropagation.runEpoch">
            <summary>Définit le shim de ResilientBackpropagation.runEpoch()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimSubplex">
            <summary>Type shim de Accord.Math.Optimization.Subplex</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.#ctor(Accord.Math.Optimization.Subplex)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.ConvergenceGet">
            <summary>Définit le shim de Subplex.get_Convergence()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.ConvergenceSetGeneralConvergence">
            <summary>Définit le shim de Subplex.set_Convergence(GeneralConvergence value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.LowerBoundsGet">
            <summary>Définit le shim de Subplex.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.MaximumValueGet">
            <summary>Définit le shim de Subplex.get_MaximumValue()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.MaximumValueSetDouble">
            <summary>Définit le shim de Subplex.set_MaximumValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.Optimize">
            <summary>Définit le shim de Subplex.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.StatusGet">
            <summary>Définit le shim de Subplex.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.StepSizeGet">
            <summary>Définit le shim de Subplex.get_StepSize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.UpperBoundsGet">
            <summary>Définit le shim de Subplex.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.initInt32">
            <summary>Définit le shim de Subplex.init(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.sbplx_minimize">
            <summary>Définit le shim de Subplex.sbplx_minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.AllInstances.subspace_funcDoubleArray">
            <summary>Définit le shim de Subplex.subspace_func(Double[] xs)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.Bind(Accord.Math.Optimization.IOptimizationMethod)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimSubplex.Bind(Accord.Math.Optimization.IOptimizationMethod{Accord.Math.Optimization.NelderMeadStatus})">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.ConstructorInt32">
            <summary>Définit le shim de Subplex.Subplex(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.ConstructorInt32FuncOfDoubleArrayDouble">
            <summary>Définit le shim de Subplex.Subplex(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.ConstructorNonlinearObjectiveFunction">
            <summary>Définit le shim de Subplex.Subplex(NonlinearObjectiveFunction function)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.ConvergenceGet">
            <summary>Définit le shim de Subplex.get_Convergence()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.ConvergenceSetGeneralConvergence">
            <summary>Définit le shim de Subplex.set_Convergence(GeneralConvergence value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.LowerBoundsGet">
            <summary>Définit le shim de Subplex.get_LowerBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.MaximumValueGet">
            <summary>Définit le shim de Subplex.get_MaximumValue()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.MaximumValueSetDouble">
            <summary>Définit le shim de Subplex.set_MaximumValue(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.Optimize">
            <summary>Définit le shim de Subplex.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.StatusGet">
            <summary>Définit le shim de Subplex.get_Status()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.StepSizeGet">
            <summary>Définit le shim de Subplex.get_StepSize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.UpperBoundsGet">
            <summary>Définit le shim de Subplex.get_UpperBounds()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.initInt32">
            <summary>Définit le shim de Subplex.init(Int32 n)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.sbplx_minimize">
            <summary>Définit le shim de Subplex.sbplx_minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimSubplex.subspace_funcDoubleArray">
            <summary>Définit le shim de Subplex.subspace_func(Double[] xs)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod">
            <summary>Type shim de Accord.Math.Optimization.TrustRegionNewtonMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.#ctor(Accord.Math.Optimization.TrustRegionNewtonMethod)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.HessianGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.HessianSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_Hessian(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.MaxIterationsGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.MaxIterationsSetInt32">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.Optimize">
            <summary>Définit le shim de TrustRegionNewtonMethod.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.ToleranceGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.ToleranceSetDouble">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.trcgDoubleDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.trcg(Double delta, Double[] g, Double[] s, Double[] r)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.AllInstances.tronDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.tron(Double[] w)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.ConstructorInt32">
            <summary>Définit le shim de TrustRegionNewtonMethod.TrustRegionNewtonMethod(Int32 numberOfVariables)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.ConstructorInt32FuncOfDoubleArrayDoubleFuncOfDoubleArrayDoubleArrayFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.TrustRegionNewtonMethod(Int32 numberOfVariables, Func`2&lt;Double[],Double&gt; function, Func`2&lt;Double[],Double[]&gt; gradient, Func`2&lt;Double[],Double[]&gt; hessian)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.HessianGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_Hessian()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.HessianSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_Hessian(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.MaxIterationsGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_MaxIterations()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.MaxIterationsSetInt32">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_MaxIterations(Int32 value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.Optimize">
            <summary>Définit le shim de TrustRegionNewtonMethod.Optimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.ToleranceGet">
            <summary>Définit le shim de TrustRegionNewtonMethod.get_Tolerance()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.ToleranceSetDouble">
            <summary>Définit le shim de TrustRegionNewtonMethod.set_Tolerance(Double value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.trcgDoubleDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.trcg(Double delta, Double[] g, Double[] s, Double[] r)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.ShimTrustRegionNewtonMethod.tronDoubleArray">
            <summary>Définit le shim de TrustRegionNewtonMethod.tron(Double[] w)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian">
            <summary>Type stub de Accord.Math.Optimization.AugmentedLagrangian</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.#ctor(Accord.Math.Optimization.IGradientOptimizationMethod,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.NonlinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.NonlinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.NonlinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.#ctor(Accord.Math.Optimization.IGradientOptimizationMethod,Accord.Math.Optimization.NonlinearObjectiveFunction,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.NonlinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubAugmentedLagrangian</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Optimize">
            <summary>Définit le stub de AugmentedLagrangian.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubAugmentedLagrangian.Optimize01">
            <summary>Définit le stub de AugmentedLagrangian.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod">
            <summary>Type stub de Accord.Math.Optimization.BaseGradientOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBaseGradientOptimizationMethod</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Optimize">
            <summary>Définit le stub de BaseOptimizationMethod.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseGradientOptimizationMethod.Optimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod">
            <summary>Type stub de Accord.Math.Optimization.BaseOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBaseOptimizationMethod</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Maximize">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Maximize01">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Minimize">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Minimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Optimize">
            <summary>Définit le stub de BaseOptimizationMethod.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBaseOptimizationMethod.Optimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBinarySearch">
            <summary>Type stub de Accord.Math.Optimization.BinarySearch</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBinarySearch.#ctor(System.Func{System.Int32,System.Double},System.Int32,System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBinarySearch.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBinarySearch.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBinarySearch</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBinarySearch.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBinarySearch.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno">
            <summary>Type stub de Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBoundedBroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Optimize">
            <summary>Définit le stub de BoundedBroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShanno.Optimize01">
            <summary>Définit le stub de BoundedBroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus">
            <summary>Type stub de Accord.Math.Optimization.BoundedBroydenFletcherGoldfarbShannoInnerStatus</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus.#ctor(System.Int32[],System.Double[],System.Boolean[],System.String,System.Double[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBoundedBroydenFletcherGoldfarbShannoInnerStatus</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBoundedBroydenFletcherGoldfarbShannoInnerStatus.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno">
            <summary>Type stub de Accord.Math.Optimization.BroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubBroydenFletcherGoldfarbShanno</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Optimize">
            <summary>Définit le stub de BroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubBroydenFletcherGoldfarbShanno.Optimize01">
            <summary>Définit le stub de BroydenFletcherGoldfarbShanno.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubCobyla">
            <summary>Type stub de Accord.Math.Optimization.Cobyla</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.NonlinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction,Accord.Math.Optimization.NonlinearConstraint[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubCobyla.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCobyla</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubCobyla.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubCobyla.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.Maximize">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubCobyla.Maximize01">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.Minimize">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubCobyla.Minimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubCobyla.Optimize">
            <summary>Définit le stub de Cobyla.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubCobyla.Optimize01">
            <summary>Définit le stub de Cobyla.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubConjugateGradient">
            <summary>Type stub de Accord.Math.Optimization.ConjugateGradient</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubConjugateGradient.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubConjugateGradient</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubConjugateGradient.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubConjugateGradient.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubConjugateGradient.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubConjugateGradient.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubConjugateGradient.Optimize">
            <summary>Définit le stub de ConjugateGradient.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubConjugateGradient.Optimize01">
            <summary>Définit le stub de ConjugateGradient.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization">
            <summary>Type stub de Accord.Math.Optimization.FanChenLinQuadraticOptimization</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.#ctor(System.Int32,System.Func{System.Int32,System.Int32,System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.#ctor(System.Int32,System.Func{System.Int32,System.Int32,System.Double},System.Double[],System.Int32[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubFanChenLinQuadraticOptimization</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubFanChenLinQuadraticOptimization.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubGaussNewton">
            <summary>Type stub de Accord.Math.Optimization.GaussNewton</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGaussNewton.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGaussNewton.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGaussNewton.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGaussNewton</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGaussNewton.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGaussNewton.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani">
            <summary>Type stub de Accord.Math.Optimization.GoldfarbIdnani</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.#ctor(Accord.Math.Optimization.QuadraticObjectiveFunction,Accord.Math.Optimization.LinearConstraintCollection)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.#ctor(Accord.Math.Optimization.QuadraticObjectiveFunction,System.Collections.Generic.IEnumerable{Accord.Math.Optimization.LinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.#ctor(Accord.Math.Optimization.QuadraticObjectiveFunction,System.Double[0:,0:],System.Double[],System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.#ctor(System.Double[0:,0:],System.Double[],System.Double[0:,0:],System.Double[],System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubGoldfarbIdnani</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Maximize">
            <summary>Définit le stub de GoldfarbIdnani.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Maximize01">
            <summary>Définit le stub de GoldfarbIdnani.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Minimize">
            <summary>Définit le stub de GoldfarbIdnani.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Minimize01">
            <summary>Définit le stub de GoldfarbIdnani.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Optimize">
            <summary>Définit le stub de GoldfarbIdnani.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubGoldfarbIdnani.Optimize01">
            <summary>Définit le stub de GoldfarbIdnani.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod">
            <summary>Type stub de Accord.Math.Optimization.IGradientOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.#ctor">
            <summary>Initialise une nouvelle instance de type StubIGradientOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Maximize">
            <summary>Définit le stub de IOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Minimize">
            <summary>Définit le stub de IOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.AttachBackingFieldToFunction">
            <summary>Attache les délégués pour émuler StubIGradientOptimizationMethod.Function en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.AttachBackingFieldToGradient">
            <summary>Attache les délégués pour émuler StubIGradientOptimizationMethod.Gradient en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.AttachBackingFieldToSolution">
            <summary>Attache les délégués pour émuler StubIGradientOptimizationMethod.Solution en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IGradientOptimizationMethod#Function">
            <summary>Définit le stub de IGradientOptimizationMethod.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.FunctionGet">
            <summary>Définit le stub de IGradientOptimizationMethod.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.FunctionSetFuncOfDoubleArrayDouble">
            <summary>Définit le stub de IGradientOptimizationMethod.set_Function(Func`2&lt;Double[],Double&gt; value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IGradientOptimizationMethod#Gradient">
            <summary>Définit le stub de IGradientOptimizationMethod.get_Gradient()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.GradientGet">
            <summary>Définit le stub de IGradientOptimizationMethod.get_Gradient()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.GradientSetFuncOfDoubleArrayDoubleArray">
            <summary>Définit le stub de IGradientOptimizationMethod.set_Gradient(Func`2&lt;Double[],Double[]&gt; value)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Maximize">
            <summary>Définit le stub de IOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Minimize">
            <summary>Définit le stub de IOptimizationMethod.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#NumberOfVariables">
            <summary>Définit le stub de IOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.NumberOfVariablesGet">
            <summary>Définit le stub de IOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Solution">
            <summary>Définit le stub de IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.SolutionGet">
            <summary>Définit le stub de IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.SolutionSetDoubleArray">
            <summary>Définit le stub de IOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Value">
            <summary>Définit le stub de IOptimizationMethod.get_Value()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIGradientOptimizationMethod.ValueGet">
            <summary>Définit le stub de IOptimizationMethod.get_Value()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod">
            <summary>Type stub de Accord.Math.Optimization.ILeastSquaresMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.#ctor">
            <summary>Initialise une nouvelle instance de type StubILeastSquaresMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#Minimize(System.Double[][],System.Double[])">
            <summary>Définit le stub de ILeastSquaresMethod.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.AttachBackingFieldToFunction">
            <summary>Attache les délégués pour émuler StubILeastSquaresMethod.Function en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.AttachBackingFieldToGradient">
            <summary>Attache les délégués pour émuler StubILeastSquaresMethod.Gradient en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.AttachBackingFieldToSolution">
            <summary>Attache les délégués pour émuler StubILeastSquaresMethod.Solution en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#Function">
            <summary>Définit le stub de ILeastSquaresMethod.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.FunctionGet">
            <summary>Définit le stub de ILeastSquaresMethod.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.FunctionSetLeastSquaresFunction">
            <summary>Définit le stub de ILeastSquaresMethod.set_Function(LeastSquaresFunction value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#Gradient">
            <summary>Définit le stub de ILeastSquaresMethod.get_Gradient()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.GradientGet">
            <summary>Définit le stub de ILeastSquaresMethod.get_Gradient()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.GradientSetLeastSquaresGradientFunction">
            <summary>Définit le stub de ILeastSquaresMethod.set_Gradient(LeastSquaresGradientFunction value)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.MinimizeDoubleArrayArrayDoubleArray">
            <summary>Définit le stub de ILeastSquaresMethod.Minimize(Double[][] inputs, Double[] outputs)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#NumberOfVariables">
            <summary>Définit le stub de ILeastSquaresMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.NumberOfVariablesGet">
            <summary>Définit le stub de ILeastSquaresMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#Solution">
            <summary>Définit le stub de ILeastSquaresMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.SolutionGet">
            <summary>Définit le stub de ILeastSquaresMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.SolutionSetDoubleArray">
            <summary>Définit le stub de ILeastSquaresMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.Accord#Math#Optimization#ILeastSquaresMethod#StandardErrors">
            <summary>Définit le stub de ILeastSquaresMethod.get_StandardErrors()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubILeastSquaresMethod.StandardErrorsGet">
            <summary>Définit le stub de ILeastSquaresMethod.get_StandardErrors()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubIObjectiveFunction">
            <summary>Type stub de Accord.Math.Optimization.IObjectiveFunction</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.#ctor">
            <summary>Initialise une nouvelle instance de type StubIObjectiveFunction</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.Accord#Math#Optimization#IObjectiveFunction#Function">
            <summary>Définit le stub de IObjectiveFunction.get_Function()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.FunctionGet">
            <summary>Définit le stub de IObjectiveFunction.get_Function()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.Accord#Math#Optimization#IObjectiveFunction#Indices">
            <summary>Définit le stub de IObjectiveFunction.get_Indices()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.IndicesGet">
            <summary>Définit le stub de IObjectiveFunction.get_Indices()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.Accord#Math#Optimization#IObjectiveFunction#NumberOfVariables">
            <summary>Définit le stub de IObjectiveFunction.get_NumberOfVariables()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.NumberOfVariablesGet">
            <summary>Définit le stub de IObjectiveFunction.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.Accord#Math#Optimization#IObjectiveFunction#Variables">
            <summary>Définit le stub de IObjectiveFunction.get_Variables()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIObjectiveFunction.VariablesGet">
            <summary>Définit le stub de IObjectiveFunction.get_Variables()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubIOptimizationMethod">
            <summary>Type stub de Accord.Math.Optimization.IOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.#ctor">
            <summary>Initialise une nouvelle instance de type StubIOptimizationMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Maximize">
            <summary>Définit le stub de IOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Minimize">
            <summary>Définit le stub de IOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.AttachBackingFieldToSolution">
            <summary>Attache les délégués pour émuler StubIOptimizationMethod.Solution en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Maximize">
            <summary>Définit le stub de IOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Minimize">
            <summary>Définit le stub de IOptimizationMethod.Minimize()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#NumberOfVariables">
            <summary>Définit le stub de IOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.NumberOfVariablesGet">
            <summary>Définit le stub de IOptimizationMethod.get_NumberOfVariables()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Solution">
            <summary>Définit le stub de IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.SolutionGet">
            <summary>Définit le stub de IOptimizationMethod.get_Solution()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.SolutionSetDoubleArray">
            <summary>Définit le stub de IOptimizationMethod.set_Solution(Double[] value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.Accord#Math#Optimization#IOptimizationMethod#Value">
            <summary>Définit le stub de IOptimizationMethod.get_Value()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubIOptimizationMethod.ValueGet">
            <summary>Définit le stub de IOptimizationMethod.get_Value()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt">
            <summary>Type stub de Accord.Math.Optimization.LevenbergMarquardt</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubLevenbergMarquardt</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLevenbergMarquardt.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubLineSearchFailedException">
            <summary>Type stub de Accord.Math.Optimization.LineSearchFailedException</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.#ctor(System.String,System.Exception)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.#ctor(System.Int32,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.AttachBackingFieldToHelpLink">
            <summary>Attache les délégués pour émuler StubLineSearchFailedException.HelpLink en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.AttachBackingFieldToSource">
            <summary>Attache les délégués pour émuler StubLineSearchFailedException.Source en tant que propriété avec un champ de stockage.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.Data">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.DataGet">
            <summary>Définit le stub de Exception.get_Data()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.GetBaseException">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.GetBaseException01">
            <summary>Définit le stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Définit le stub de LineSearchFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Définit le stub de LineSearchFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.HelpLink">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.HelpLinkGet">
            <summary>Définit le stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.HelpLinkSetString">
            <summary>Définit le stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubLineSearchFailedException</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.Message">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.MessageGet">
            <summary>Définit le stub de Exception.get_Message()</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.Source">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.SourceGet">
            <summary>Définit le stub de Exception.get_Source()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.SourceSetString">
            <summary>Définit le stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.StackTrace">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.StackTraceGet">
            <summary>Définit le stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.ToString">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLineSearchFailedException.ToString01">
            <summary>Définit le stub de Exception.ToString()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubLinearConstraint">
            <summary>Type stub de Accord.Math.Optimization.LinearConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.#ctor(System.Double[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.String,System.Globalization.CultureInfo)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraint.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraint.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubLinearConstraint</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraint.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraint.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection">
            <summary>Type stub de Accord.Math.Optimization.LinearConstraintCollection</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.#ctor(System.Collections.Generic.IEnumerable{Accord.Math.Optimization.LinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.#ctor(System.Collections.Generic.IList{Accord.Math.Optimization.LinearConstraint})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.ClearItems">
            <summary>Définit le stub de Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.ClearItems01">
            <summary>Définit le stub de Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubLinearConstraintCollection</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.InsertItem(System.Int32,Accord.Math.Optimization.LinearConstraint)">
            <summary>Définit le stub de Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.InsertItemInt32LinearConstraint">
            <summary>Définit le stub de Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.RemoveItem(System.Int32)">
            <summary>Définit le stub de Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.RemoveItemInt32">
            <summary>Définit le stub de Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.SetItem(System.Int32,Accord.Math.Optimization.LinearConstraint)">
            <summary>Définit le stub de Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubLinearConstraintCollection.SetItemInt32LinearConstraint">
            <summary>Définit le stub de Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubNelderMead">
            <summary>Type stub de Accord.Math.Optimization.NelderMead</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNelderMead.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNelderMead</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNelderMead.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNelderMead.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.Maximize">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubNelderMead.Maximize01">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.Minimize">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubNelderMead.Minimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNelderMead.Optimize">
            <summary>Définit le stub de NelderMead.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubNelderMead.Optimize01">
            <summary>Définit le stub de NelderMead.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubNonlinearConstraint">
            <summary>Type stub de Accord.Math.Optimization.NonlinearConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(System.Int32,System.Linq.Expressions.Expression{System.Func{System.Double[],System.Boolean}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Linq.Expressions.Expression{System.Func{System.Double[],System.Boolean}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Func{System.Double[],System.Double},Accord.Math.Optimization.ConstraintType,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(System.Int32,System.Func{System.Double[],System.Double},Accord.Math.Optimization.ConstraintType,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Func{System.Double[],System.Double},Accord.Math.Optimization.ConstraintType,System.Double,System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(System.Int32,System.Func{System.Double[],System.Double},Accord.Math.Optimization.ConstraintType,System.Double,System.Func{System.Double[],System.Double[]},System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Linq.Expressions.Expression{System.Func{System.Double}},Accord.Math.Optimization.ConstraintType,System.Double,System.Linq.Expressions.Expression{System.Func{System.Double[]}},System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Func{System.Double[],System.Double},Accord.Math.Optimization.ConstraintType,System.Double,System.Func{System.Double[],System.Double[]},System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]},Accord.Math.Optimization.ConstraintType,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonlinearConstraint</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.ToString">
            <summary>Définit le stub de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubNonlinearConstraint.ToString01">
            <summary>Définit le stub de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction">
            <summary>Type stub de Accord.Math.Optimization.NonlinearObjectiveFunction</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.#ctor">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.#ctor(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Linq.Expressions.Expression{System.Func{System.Double[]}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubNonlinearObjectiveFunction</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubNonlinearObjectiveFunction.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs">
            <summary>Type stub de Accord.Math.Optimization.OptimizationProgressEventArgs</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs.#ctor(System.Int32,System.Int32,System.Double[],System.Double,System.Double[],System.Double,System.Double,System.Double,System.Boolean)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubOptimizationProgressEventArgs</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubOptimizationProgressEventArgs.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubQuadraticConstraint">
            <summary>Type stub de Accord.Math.Optimization.QuadraticConstraint</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.#ctor(Accord.Math.Optimization.IObjectiveFunction,System.Double[0:,0:],System.Double[],Accord.Math.Optimization.ConstraintType,System.Double,System.Double)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubQuadraticConstraint</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.ToString">
            <summary>Définit le stub de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubQuadraticConstraint.ToString01">
            <summary>Définit le stub de NonlinearConstraint.ToString()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction">
            <summary>Type stub de Accord.Math.Optimization.QuadraticObjectiveFunction</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.#ctor(System.Linq.Expressions.Expression{System.Func{System.Double}})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.#ctor(System.String)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.#ctor(System.Double[0:,0:],System.Double[],System.String[])">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubQuadraticObjectiveFunction</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.ToString">
            <summary>Définit le stub de QuadraticObjectiveFunction.ToString()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubQuadraticObjectiveFunction.ToString01">
            <summary>Définit le stub de QuadraticObjectiveFunction.ToString()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubResilientBackpropagation">
            <summary>Type stub de Accord.Math.Optimization.ResilientBackpropagation</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubResilientBackpropagation</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Optimize">
            <summary>Définit le stub de ResilientBackpropagation.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubResilientBackpropagation.Optimize01">
            <summary>Définit le stub de ResilientBackpropagation.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubSubplex">
            <summary>Type stub de Accord.Math.Optimization.Subplex</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.#ctor(Accord.Math.Optimization.NonlinearObjectiveFunction)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.#ctor(System.Int32,System.Func{System.Double[],System.Double})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubSubplex.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubSubplex</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubSubplex.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubSubplex.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.Maximize">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubSubplex.Maximize01">
            <summary>Définit le stub de BaseOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.Minimize">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubSubplex.Minimize01">
            <summary>Définit le stub de BaseOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubSubplex.Optimize">
            <summary>Définit le stub de Subplex.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubSubplex.Optimize01">
            <summary>Définit le stub de Subplex.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod">
            <summary>Type stub de Accord.Math.Optimization.TrustRegionNewtonMethod</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.#ctor(System.Int32,System.Func{System.Double[],System.Double},System.Func{System.Double[],System.Double[]},System.Func{System.Double[],System.Double[]})">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubTrustRegionNewtonMethod</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Maximize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Maximize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Maximize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Minimize">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Minimize01">
            <summary>Définit le stub de BaseGradientOptimizationMethod.Minimize()</summary>
        </member>
        <member name="M:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Optimize">
            <summary>Définit le stub de TrustRegionNewtonMethod.Optimize()</summary>
        </member>
        <member name="F:Accord.Math.Optimization.Fakes.StubTrustRegionNewtonMethod.Optimize01">
            <summary>Définit le stub de TrustRegionNewtonMethod.Optimize()</summary>
        </member>
        <member name="T:Accord.Math.Transforms.Fakes.ShimFourierTransform2">
            <summary>Type shim de Accord.Math.Transforms.FourierTransform2</summary>
        </member>
        <member name="M:Accord.Math.Transforms.Fakes.ShimFourierTransform2.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Transforms.Fakes.ShimFourierTransform2.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Transforms.Fakes.ShimFourierTransform2.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.ConvolveComplexArrayComplexArrayComplexArray">
            <summary>Définit le shim de FourierTransform2.Convolve(Complex[] x, Complex[] y, Complex[] result)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.ConvolveDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.Convolve(Double[] x, Double[] y, Double[] result)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.ConvolveDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.Convolve(Double[] xreal, Double[] ximag, Double[] yreal, Double[] yimag, Double[] outreal, Double[] outimag)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.DFT2ComplexArrayArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform2.DFT2(Complex[][] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.DFTComplexArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform2.DFT(Complex[] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.FFT2ComplexArrayArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform2.FFT2(Complex[][] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.FFTComplexArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform2.FFT(Complex[] data, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.FFTDoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.FFT(Double[] real, Double[] imag)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.FFTDoubleArrayDoubleArrayFourierTransformDirection">
            <summary>Définit le shim de FourierTransform2.FFT(Double[] real, Double[] imag, Direction direction)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.HighestOneBitInt32">
            <summary>Définit le shim de FourierTransform2.HighestOneBit(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.IDFTComplexArray">
            <summary>Définit le shim de FourierTransform2.IDFT(Complex[] data)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.IDFTDoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.IDFT(Double[] real, Double[] imag)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.ReverseInt32">
            <summary>Définit le shim de FourierTransform2.Reverse(Int32 i)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.TransformBluesteinComplexArray">
            <summary>Définit le shim de FourierTransform2.TransformBluestein(Complex[] data)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.TransformBluesteinDoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.TransformBluestein(Double[] real, Double[] imag)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.TransformRadix2ComplexArray">
            <summary>Définit le shim de FourierTransform2.TransformRadix2(Complex[] complex)</summary>
        </member>
        <member name="P:Accord.Math.Transforms.Fakes.ShimFourierTransform2.TransformRadix2DoubleArrayDoubleArray">
            <summary>Définit le shim de FourierTransform2.TransformRadix2(Double[] real, Double[] imag)</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.ShimCDF97">
            <summary>Type shim de Accord.Math.Wavelets.CDF97</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimCDF97.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimCDF97.#ctor(Accord.Math.Wavelets.CDF97)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.ShimCDF97.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.AllInstances.BackwardDoubleArray">
            <summary>Définit le shim de CDF97.Backward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.AllInstances.BackwardDoubleMdArray2">
            <summary>Définit le shim de CDF97.Backward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.AllInstances.ForwardDoubleArray">
            <summary>Définit le shim de CDF97.Forward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.AllInstances.ForwardDoubleMdArray2">
            <summary>Définit le shim de CDF97.Forward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.BackwardDoubleArray">
            <summary>Définit le shim de CDF97.Backward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.BackwardDoubleMdArray2">
            <summary>Définit le shim de CDF97.Backward(Double[,] data)</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimCDF97.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimCDF97.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimCDF97.Bind(Accord.Math.Wavelets.IWavelet)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.ConstructorInt32">
            <summary>Définit le shim de CDF97.CDF97(Int32 levels)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.FWT97DoubleArray">
            <summary>Définit le shim de CDF97.FWT97(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.FWT97DoubleMdArray2Int32">
            <summary>Définit le shim de CDF97.FWT97(Double[,] data, Int32 levels)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.ForwardDoubleArray">
            <summary>Définit le shim de CDF97.Forward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.ForwardDoubleMdArray2">
            <summary>Définit le shim de CDF97.Forward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.IWT97DoubleArray">
            <summary>Définit le shim de CDF97.IWT97(Double[] x)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.IWT97DoubleMdArray2Int32">
            <summary>Définit le shim de CDF97.IWT97(Double[,] data, Int32 levels)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.fwt2dDoubleMdArray2Int32Int32">
            <summary>Définit le shim de CDF97.fwt2d(Double[,] x, Int32 width, Int32 height)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimCDF97.iwt2dDoubleMdArray2Int32Int32">
            <summary>Définit le shim de CDF97.iwt2d(Double[,] x, Int32 width, Int32 height)</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.ShimHaar">
            <summary>Type shim de Accord.Math.Wavelets.Haar</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimHaar.#ctor">
            <summary>Initialise une nouvelle instance de shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimHaar.#ctor(Accord.Math.Wavelets.Haar)">
            <summary>Initialise un nouveau shim pour l&apos;instance donnée</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.ShimHaar.AllInstances">
            <summary>Définir des shims pour tous les membres des instances</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.AllInstances.BackwardDoubleArray">
            <summary>Définit le shim de Haar.Backward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.AllInstances.BackwardDoubleMdArray2">
            <summary>Définit le shim de Haar.Backward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.AllInstances.ForwardDoubleArray">
            <summary>Définit le shim de Haar.Forward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.AllInstances.ForwardDoubleMdArray2">
            <summary>Définit le shim de Haar.Forward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.BackwardDoubleArray">
            <summary>Définit le shim de Haar.Backward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.BackwardDoubleMdArray2">
            <summary>Définit le shim de Haar.Backward(Double[,] data)</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimHaar.BehaveAsCurrent">
            <summary>Attribue le comportement &apos;Current&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimHaar.BehaveAsNotImplemented">
            <summary>Attribue le comportement &apos;NotImplemented&apos; à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.Behavior">
            <summary>Attribue le comportement à toutes les méthodes du type ayant fait l&apos;objet d&apos;un shim</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.ShimHaar.Bind(Accord.Math.Wavelets.IWavelet)">
            <summary>Relie les membres de l&apos;interface au shim.</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.ConstructorInt32">
            <summary>Définit le shim de Haar.Haar(Int32 levels)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.FWTDoubleArray">
            <summary>Définit le shim de Haar.FWT(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.FWTDoubleMdArray2Int32">
            <summary>Définit le shim de Haar.FWT(Double[,] data, Int32 iterations)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.ForwardDoubleArray">
            <summary>Définit le shim de Haar.Forward(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.ForwardDoubleMdArray2">
            <summary>Définit le shim de Haar.Forward(Double[,] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.IWTDoubleArray">
            <summary>Définit le shim de Haar.IWT(Double[] data)</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.ShimHaar.IWTDoubleMdArray2Int32">
            <summary>Définit le shim de Haar.IWT(Double[,] data, Int32 iterations)</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.StubCDF97">
            <summary>Type stub de Accord.Math.Wavelets.CDF97</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubCDF97.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubCDF97.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubCDF97.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubCDF97</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubCDF97.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubCDF97.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.StubHaar">
            <summary>Type stub de Accord.Math.Wavelets.Haar</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubHaar.#ctor(System.Int32)">
            <summary>Initialise une nouvelle instance</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubHaar.CallBase">
            <summary>Obtient ou définit une valeur qui indique si la méthode de base doit être appelée à la place du comportement de secours</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubHaar.InitializeStub">
            <summary>Initialise une nouvelle instance de type StubHaar</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubHaar.InstanceBehavior">
            <summary>Obtient ou définit le comportement de l&apos;instance.</summary>
        </member>
        <member name="P:Accord.Math.Wavelets.Fakes.StubHaar.InstanceObserver">
            <summary>Obtient ou définit l&apos;observateur d&apos;instance.</summary>
        </member>
        <member name="T:Accord.Math.Wavelets.Fakes.StubIWavelet">
            <summary>Type stub de Accord.Math.Wavelets.IWavelet</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubIWavelet.#ctor">
            <summary>Initialise une nouvelle instance de type StubIWavelet</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubIWavelet.Accord#Math#Wavelets#IWavelet#Backward(System.Double[])">
            <summary>Définit le stub de IWavelet.Backward(Double[] data)</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubIWavelet.Accord#Math#Wavelets#IWavelet#Backward(System.Double[0:,0:])">
            <summary>Définit le stub de IWavelet.Backward(Double[,] data)</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubIWavelet.Accord#Math#Wavelets#IWavelet#Forward(System.Double[])">
            <summary>Définit le stub de IWavelet.Forward(Double[] data)</summary>
        </member>
        <member name="M:Accord.Math.Wavelets.Fakes.StubIWavelet.Accord#Math#Wavelets#IWavelet#Forward(System.Double[0:,0:])">
            <summary>Définit le stub de IWavelet.Forward(Double[,] data)</summary>
        </member>
        <member name="F:Accord.Math.Wavelets.Fakes.StubIWavelet.BackwardDoubleArray">
            <summary>Définit le stub de IWavelet.Backward(Double[] data)</summary>
        </member>
        <member name="F:Accord.Math.Wavelets.Fakes.StubIWavelet.BackwardDoubleMdArray2">
            <summary>Définit le stub de IWavelet.Backward(Double[,] data)</summary>
        </member>
        <member name="F:Accord.Math.Wavelets.Fakes.StubIWavelet.ForwardDoubleArray">
            <summary>Définit le stub de IWavelet.Forward(Double[] data)</summary>
        </member>
        <member name="F:Accord.Math.Wavelets.Fakes.StubIWavelet.ForwardDoubleMdArray2">
            <summary>Définit le stub de IWavelet.Forward(Double[,] data)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.AccordMathDelegates">
            <summary>Contient des délégués personnalisés utilisés pour les stubs et les shims de Accord.Math</summary>
        </member>
    </members>
</doc>
